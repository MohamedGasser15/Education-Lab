@using EduLab_MVC.Services.ServiceInterfaces
@using EduLab_Shared.Utitlites
@using System.Globalization
@using EduLab_MVC.Models.DTOs.Auth
@model IEnumerable<UserDTO>
@inject IUserService _userService

@{
    ViewData["Title"] = "إدارة المستخدمين";
    var arabicCulture = new CultureInfo("ar-SA");

    var currentUser = await _userService.GetCurrentUserAsync(); // المستخدم الحالي
    var currentUserId = currentUser?.Id;
}


<link rel="stylesheet" href="~/css/Admin/users.css">
<style>
    /* Modal Styles */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        backdrop-filter: blur(5px);
    }

    .modal-container {
        background-color: white;
        border-radius: 0.75rem;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 28rem;
        overflow: hidden;
    }

    .dark .modal-container {
        background-color: #1f2937;
    }

    .modal-header {
        display: flex;
        align-items: center;
        padding: 1.25rem 1.5rem;
        border-bottom: 1px solid #e5e7eb;
    }

    .dark .modal-header {
        border-bottom-color: #374151;
    }

    .modal-icon {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 2.5rem;
        height: 2.5rem;
        border-radius: 50%;
        margin-left: 1rem;
    }

        .modal-icon.edit {
            background-color: #e0e7ff;
            color: #4f46e5;
        }

        .modal-icon.delete {
            background-color: #fee2e2;
            color: #dc2626;
        }

        .modal-icon.lock {
            background-color: #fef3c7;
            color: #d97706;
        }

        .modal-icon.unlock {
            background-color: #dcfce7;
            color: #16a34a;
        }

    .dark .modal-icon.edit {
        background-color: #3730a3;
        color: #a5b4fc;
    }

    .dark .modal-icon.delete {
        background-color: #7f1d1d;
        color: #fca5a5;
    }

    .dark .modal-icon.lock {
        background-color: #78350f;
        color: #fcd34d;
    }

    .dark .modal-icon.unlock {
        background-color: #166534;
        color: #86efac;
    }

    .modal-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #111827;
    }

    .dark .modal-title {
        color: #f3f4f6;
    }

    .modal-body {
        padding: 1.5rem;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .modal-message {
        color: #374151;
        margin-bottom: 1rem;
    }

    .dark .modal-message {
        color: #e5e7eb;
    }

    .modal-highlight {
        font-weight: 600;
        color: #1d4ed8;
    }

    .dark .modal-highlight {
        color: #60a5fa;
    }

    .modal-warning {
        display: flex;
        align-items: flex-start;
        padding: 0.75rem;
        border-radius: 0.375rem;
        background-color: #fef2f2;
        color: #b91c1c;
    }

        .modal-warning.lock {
            background-color: #fffbeb;
            color: #b45309;
        }

        .modal-warning.unlock {
            background-color: #ecfdf5;
            color: #047857;
        }

    .dark .modal-warning {
        background-color: #7f1d1d;
        color: #fecaca;
    }

        .dark .modal-warning.lock {
            background-color: #78350f;
            color: #fcd34d;
        }

        .dark .modal-warning.unlock {
            background-color: #064e3b;
            color: #6ee7b7;
        }

    .modal-warning-icon {
        margin-left: 0.5rem;
        margin-top: 0.125rem;
    }

    .modal-footer {
        display: flex;
        justify-content: flex-end;
        padding: 1rem 1.5rem;
        border-top: 1px solid #e5e7eb;
    }

    .dark .modal-footer {
        border-top-color: #374151;
    }

    .modal-btn {
        display: inline-flex;
        align-items: center;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        font-weight: 500;
        transition: all 0.2s;
        margin-right: 0.5rem;
    }

        .modal-btn:last-child {
            margin-right: 0;
        }

    .modal-btn-cancel {
        background-color: #f3f4f6;
        color: #374151;
        border: 1px solid #d1d5db;
    }

    .dark .modal-btn-cancel {
        background-color: #374151;
        color: #f3f4f6;
        border-color: #4b5563;
    }

    .modal-btn-cancel:hover {
        background-color: #e5e7eb;
    }

    .dark .modal-btn-cancel:hover {
        background-color: #4b5563;
    }

    .modal-btn-confirm {
        background-color: #2563eb;
        color: white;
        border: 1px solid #2563eb;
    }

        .modal-btn-confirm.lock {
            background-color: #d97706;
            border-color: #d97706;
        }

        .modal-btn-confirm.unlock {
            background-color: #16a34a;
            border-color: #16a34a;
        }

        .modal-btn-confirm.delete {
            background-color: #dc2626;
            border-color: #dc2626;
        }

        .modal-btn-confirm:hover {
            background-color: #1d4ed8;
        }

        .modal-btn-confirm.lock:hover {
            background-color: #b45309;
        }

        .modal-btn-confirm.unlock:hover {
            background-color: #15803d;
        }

        .modal-btn-confirm.delete:hover {
            background-color: #b91c1c;
        }

    /* Custom Checkbox */
    .custom-checkbox {
        width: 1.25rem;
        height: 1.25rem;
        border-radius: 0.25rem;
        border: 1px solid #d1d5db;
        appearance: none;
        -webkit-appearance: none;
        cursor: pointer;
        transition: all 0.2s;
        position: relative;
    }

    .dark .custom-checkbox {
        border-color: #4b5563;
        background-color: #1f2937;
    }

    .custom-checkbox:checked {
        background-color: #2563eb;
        border-color: #2563eb;
    }

        .custom-checkbox:checked::after {
            content: "✓";
            position: absolute;
            color: white;
            font-size: 0.75rem;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

    /* Action Buttons */
    .action-btn {
        width: 2rem;
        height: 2rem;
        border-radius: 0.375rem;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s;
    }

    /* Bulk Actions */
    #bulk-actions-container {
        background-color: #f0f9ff;
        border: 1px solid #e0f2fe;
    }

    .dark #bulk-actions-container {
        background-color: #082f49;
        border-color: #0c4a6e;
    }

    /* Pagination Styles */
    .pagination-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 2.5rem;
        height: 2.5rem;
        border-radius: 0.375rem;
        border: 1px solid #d1d5db;
        color: #4b5563;
        font-weight: 500;
    }

    .dark .pagination-btn {
        border-color: #4b5563;
        color: #d1d5db;
    }

    .pagination-btn.active {
        background-color: #2563eb;
        color: white;
        border-color: #2563eb;
    }

    .pagination-btn.disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    /* Role Badges */
    .role-badge {
        padding: 0.25rem 0.5rem;
        border-radius: 9999px;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .role-student {
        background-color: #dbeafe;
        color: #1e40af;
    }

    .dark .role-student {
        background-color: #1e3a8a;
        color: #93c5fd;
    }

    .role-instructor {
        background-color: #e0e7ff;
        color: #4338ca;
    }

    .dark .role-instructor {
        background-color: #3730a3;
        color: #a5b4fc;
    }

    .role-admin {
        background-color: #fee2e2;
        color: #b91c1c;
    }

    .dark .role-admin {
        background-color: #7f1d1d;
        color: #fca5a5;
    }

    .role-support {
        background-color: #dcfce7;
        color: #166534;
    }

    .dark .role-support {
        background-color: #166534;
        color: #86efac;
    }

    .role-moderator {
        background-color: #fef3c7;
        color: #92400e;
    }

    .dark .role-moderator {
        background-color: #78350f;
        color: #fcd34d;
    }

    .role-unknown {
        background-color: #f3f4f6;
        color: #374151;
    }

    .dark .role-unknown {
        background-color: #1f2937;
        color: #d1d5db;
    }

    /* Status Badges */
    .status-badge {
        padding: 0.25rem 0.5rem;
        border-radius: 9999px;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .status-active {
        background-color: #dcfce7;
        color: #166534;
    }

    .dark .status-active {
        background-color: #166534;
        color: #86efac;
    }

    .status-banned {
        background-color: #fee2e2;
        color: #b91c1c;
    }

    .dark .status-banned {
        background-color: #7f1d1d;
        color: #fca5a5;
    }

</style>
<div class="container mx-auto px-4 py-8">
    <!-- Header Section -->
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-8 gap-4">
        <div>
            <h1 class="text-3xl font-bold text-gray-900 dark:text-white">
                <i class="fas fa-users text-blue-500 mr-3"></i>
                إدارة المستخدمين
            </h1>
            <p class="text-gray-500 dark:text-gray-400 mt-2">
                عرض وإدارة جميع المستخدمين المسجلين في النظام
            </p>
        </div>
    </div>

    <!-- Filter Cards -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-5 mb-8">
        <div class="filter-card p-5 shadow-sm border border-gray-100 dark:border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm text-gray-500 dark:text-gray-400">إجمالي المستخدمين</p>
                    <h3 class="text-2xl font-bold text-gray-800 dark:text-white">@Model.Count()</h3>
                </div>
                <div class="p-3 rounded-full bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-300">
                    <i class="fas fa-users text-lg"></i>
                </div>
            </div>
        </div>

        <div class="filter-card p-5 shadow-sm border border-gray-100 dark:border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm text-gray-500 dark:text-gray-400">مستخدمين نشطين</p>
                    <h3 class="text-2xl font-bold text-gray-800 dark:text-white">@Model.Count(u => !u.IsLocked)</h3>
                </div>
                <div class="p-3 rounded-full bg-green-100 dark:bg-green-900 text-green-600 dark:text-green-300">
                    <i class="fas fa-check-circle text-lg"></i>
                </div>
            </div>
        </div>

        <div class="filter-card p-5 shadow-sm border border-gray-100 dark:border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm text-gray-500 dark:text-gray-400">مستخدمين محظورين</p>
                    <h3 class="text-2xl font-bold text-gray-800 dark:text-white">@Model.Count(u => u.IsLocked)</h3>
                </div>
                <div class="p-3 rounded-full bg-red-100 dark:bg-red-900 text-red-600 dark:text-red-300">
                    <i class="fas fa-ban text-lg"></i>
                </div>
            </div>
        </div>

        <div class="filter-card p-5 shadow-sm border border-gray-100 dark:border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm text-gray-500 dark:text-gray-400">أحدث مستخدم</p>
                    <h3 class="text-2xl font-bold text-gray-800 dark:text-white">
                        @(Model.OrderByDescending(u => u.CreatedAt).FirstOrDefault()?.CreatedAt.ToString("yyyy-MM-dd"))
                    </h3>
                </div>
                <div class="p-3 rounded-full bg-yellow-100 dark:bg-yellow-900 text-yellow-600 dark:text-yellow-300">
                    <i class="fas fa-clock text-lg"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-5 mb-8">
        <div class="flex flex-col md:flex-row gap-4 items-center">
            <div class="relative flex-1 w-full">
                <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                    <i class="fas fa-search text-gray-400"></i>
                </div>
                <input type="text" id="search-users" class="w-full pr-10 pl-4 py-2 border border-gray-300 dark:border-gray-700 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white" placeholder="ابحث عن مستخدم...">
            </div>

            <select id="role-filter" class="border border-gray-300 dark:border-gray-700 rounded-xl px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white w-full md:w-auto">
                <option value="">كل الأدوار</option>
                @if (ViewBag.Roles != null)
                {
                    foreach (var Role in (List<SelectListItem>)ViewBag.Roles)
                    {
                        <option value="@Role.Value">@Role.Text</option>
                    }
                }
            </select>

            <select id="status-filter" class="border border-gray-300 dark:border-gray-700 rounded-xl px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white w-full md:w-auto">
                <option value="">كل الحالات</option>
                <option value="active">نشط</option>
                <option value="banned">محظور</option>
                <option value="inactive">غير مفعل</option>
            </select>

            <button id="reset-filters" class="px-4 py-2 border border-gray-300 dark:border-gray-700 rounded-xl text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition w-full md:w-auto">
                <i class="fas fa-undo-alt mr-2"></i>
                إعادة تعيين
            </button>
        </div>
    </div>

    <!-- Bulk Actions Container -->
    <div id="bulk-actions-container" class="hidden bg-blue-50 dark:bg-blue-900/20 p-3 rounded-lg mb-4 flex items-center justify-between border border-blue-100 dark:border-blue-900/30">
        <div class="selected-count text-sm text-blue-700 dark:text-blue-300">
            <i class="fas fa-users mr-2"></i>
            <span id="selected-count">0</span> مستخدم محدد
        </div>
        <div class="bulk-actions-buttons flex space-x-2 space-x-reverse">
            <select id="bulk-action" class="border border-gray-300 dark:border-gray-600 rounded-lg px-3 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white">
                <option value="">اختر إجراء</option>
                <option value="lock">حظر المحدد</option>
                <option value="unlock">إلغاء حظر المحدد</option>
                <option value="delete">حذف المحدد</option>
            </select>
            <button id="apply-bulk-action" class="px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded-lg transition">
                تطبيق
            </button>
        </div>
    </div>

    <!-- Users Table -->
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden">
        <div class="overflow-x-auto">
            <table class="w-full">
                <thead class="bg-gray-50 dark:bg-gray-700">
                    <tr>
                        <th scope="col" class="px-6 py-4 text-right font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                            <input type="checkbox" id="select-all" class="custom-checkbox">
                        </th>
                        <th scope="col" class="px-6 py-4 text-right font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                            المستخدم
                        </th>
                        <th scope="col" class="px-6 py-4 text-right font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider hidden md:table-cell">
                            البريد الإلكتروني
                        </th>
                        <th scope="col" class="px-6 py-4 text-right font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                            الدور
                        </th>
                        <th scope="col" class="px-6 py-4 text-right font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                            الحالة
                        </th>
                        <th scope="col" class="px-6 py-4 text-right font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider hidden md:table-cell">
                            تاريخ التسجيل
                        </th>
                        <th scope="col" class="px-6 py-4 text-right font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                            الإجراءات
                        </th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-200 dark:divide-gray-700">
                    @foreach (var user in Model)
                    {
                        <tr class="hover:bg-gray-50 dark:hover:bg-gray-700 transition" data-user-id="@user.Id" data-role="@user.Role" data-status="@(user.IsLocked ? "banned" : "active")">
                            <td class="px-6 py-4 whitespace-nowrap">

                            @if (user.Id != currentUserId)
                            {
                                <input type="checkbox" class="user-checkbox custom-checkbox" value="@user.Id">
                            }
                            </td>

                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    @{
                                        string avatarColor = "2563eb";
                                        if (user.Role == "Instructor") { avatarColor = "7c3aed"; }
                                        else if (user.Role == "Admin") { avatarColor = "dc2626"; }
                                        else if (user.Role == "Support") { avatarColor = "16a34a"; }
                                        else if (user.Role == "Moderator") { avatarColor = "ca8a04"; }

                                        string initials = !string.IsNullOrEmpty(user.FullName)
                                        ? user.FullName.Length >= 2 ? user.FullName.Substring(0, 2) : user.FullName
                                        : "US";
                                    }
                                    @if (string.IsNullOrEmpty(user.ProfileImageUrl))
                                    {
                                        <img src="https://api.dicebear.com/7.x/initials/svg?seed=@initials&backgroundColor=@avatarColor&textColor=ffffff&length=2&fontSize=40"
                                             class="w-10 h-10 rounded-full ml-3 object-cover" alt="User" />
                                    }
                                    else
                                    {
                                        <img src="@user.ProfileImageUrl"
                                             class="w-10 h-10 rounded-full ml-3 object-cover" alt="User" />
                                    }

                                    <div class="mr-3">
                                        <div class="text-sm font-medium text-gray-900 dark:text-white">@user.FullName</div>
                                        <div class="text-xs text-gray-500 dark:text-gray-400">
                                            ... ID: @user.Id.Substring(0, 6)
                                        </div>
                                    </div>

                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400 hidden md:table-cell">
                                @user.Email
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @{
                                    var roleClass = user.Role switch
                                    {
                                        "Student" => "role-badge role-student",
                                        "Instructor" => "role-badge role-instructor",
                                        "Admin" => "role-badge role-admin",
                                        "Support" => "role-badge role-support",
                                        "Moderator" => "role-badge role-moderator",
                                        _ => "role-badge role-unknown"
                                    };
                                }
                                <span class="@roleClass">@user.Role</span>

                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @if (user.IsLocked)
                                {
                                    <span class="status-badge status-banned">
                                        <i class="fas fa-ban mr-1"></i> محظور
                                    </span>
                                }
                                else
                                {
                                    <span class="status-badge status-active">
                                        <i class="fas fa-check-circle mr-1"></i> نشط
                                    </span>
                                }
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400 hidden md:table-cell">
                                @{
                                    var timeSinceCreation = DateTime.Now - user.CreatedAt;
                                    string timeText = timeSinceCreation.TotalDays switch
                                    {
                                        >= 365 => $"منذ {(int)(timeSinceCreation.TotalDays / 365)} سنة",
                                        >= 30 => $"منذ {(int)(timeSinceCreation.TotalDays / 30)} شهر",
                                        >= 7 => $"منذ {(int)(timeSinceCreation.TotalDays / 7)} أسابيع",
                                        >= 1 => $"منذ {(int)timeSinceCreation.TotalDays} يوم",
                                        _ => "جديد"
                                    };
                                }
                                <div class="text-sm text-gray-900 dark:text-white">@timeText</div>
                                <div class="text-xs text-gray-500 dark:text-gray-400">@user.CreatedAt.ToString("yyyy-MM-dd")</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                <div class="flex items-center gap-2">
                                    <button class="action-btn bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-300 hover:bg-blue-200 dark:hover:bg-blue-800 edit-user-btn"
                                            onclick="showEditModal('@user.Id', '@user.FullName', '@user.Email', '@user.Role')">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    @if (user.Id != currentUserId)
                                    {
                                        @if (user.IsLocked)
                                        {
                                            <button class="action-btn bg-green-100 dark:bg-green-900 text-green-600 dark:text-green-300 hover:bg-green-200 dark:hover:bg-green-800 unlock-user-btn"
                                                    onclick="showUnlockModal('@user.Id', '@user.FullName')">
                                                <i class="fas fa-unlock"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="action-btn bg-yellow-100 dark:bg-yellow-900 text-yellow-600 dark:text-yellow-300 hover:bg-yellow-200 dark:hover:bg-yellow-800 lock-user-btn"
                                                    onclick="showLockModal('@user.Id', '@user.FullName')">
                                                <i class="fas fa-lock"></i>
                                            </button>
                                        }
                                        <button class="action-btn bg-red-100 dark:bg-red-900 text-red-600 dark:text-red-300 hover:bg-red-200 dark:hover:bg-red-800 delete-user-btn"
                                                onclick="showDeleteModal('@user.Id', '@user.FullName')">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="px-6 py-4 flex items-center justify-between border-t border-gray-200 dark:border-gray-700">
            <div class="hidden sm:block">
                <p class="text-sm text-gray-700 dark:text-gray-300">
                    عرض <span id="showing-from">1</span>-<span id="showing-to">10</span> من <span id="total-users">@Model.Count()</span>
                </p>
            </div>
            <div class="flex-1 flex justify-center">
                <div class="pagination-controls flex space-x-1 space-x-reverse">
                    <button id="prev-page" class="pagination-btn disabled">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                    <div id="pagination-numbers" class="flex space-x-1 space-x-reverse"></div>
                    <button id="next-page" class="pagination-btn">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                </div>
            </div>
            <div class="hidden sm:block">
                <select id="rows-per-page" class="border border-gray-300 dark:border-gray-600 rounded-lg px-3 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white">
                    <option value="5">5 لكل صفحة</option>
                    <option value="10" selected>10 لكل صفحة</option>
                    <option value="20">20 لكل صفحة</option>
                    <option value="50">50 لكل صفحة</option>
                    <option value="100">100 لكل صفحة</option>
                </select>
            </div>
        </div>
    </div>
</div>

<!-- Edit User Modal -->
<div id="editUserModal" class="modal-overlay hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="modal-container">
        <div class="modal-header">
            <div class="modal-icon edit">
                <i class="fas fa-user-edit"></i>
            </div>
            <div>
                <h3 class="modal-title">تعديل بيانات المستخدم</h3>
            </div>
        </div>
        <form id="edit-user-form" method="post" asp-action="UpdateUser" class="modal-body">
            @Html.AntiForgeryToken()
            <input type="hidden" id="edit-user-id" name="Id">
            <div class="space-y-4">
                <!-- Full Name Field -->
                <div class="form-group">
                    <label for="edit-user-name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">الاسم الكامل</label>
                    <div class="relative">
                        <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                            <i class="fas fa-user text-gray-400"></i>
                        </div>
                        <input type="text" id="edit-user-name" name="FullName"
                               class="w-full pr-10 pl-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-[#2563eb] focus:border-[#2563eb] dark:bg-gray-700 dark:text-white"
                               required>
                    </div>
                </div>
                <!-- Email Field -->
                <div class="form-group">
                    <label for="edit-user-email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">البريد الإلكتروني</label>
                    <div class="relative">
                        <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                            <i class="fas fa-envelope text-gray-400"></i>
                        </div>
                        <input type="email" id="edit-user-email" name="Email"
                               class="w-full pr-10 pl-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-[#2563eb] focus:border-[#2563eb] dark:bg-gray-700 dark:text-white"
                               required readonly>
                    </div>
                </div>
                <!-- Role Field -->
                <div class="form-group">
                    <label for="edit-user-role" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">الدور</label>
                    <div class="relative">
                        <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                            <i class="fas fa-user-tag text-gray-400"></i>
                        </div>
                        <select id="edit-user-role" name="Role"
                                class="w-full pr-10 pl-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-[#2563eb] focus:border-[#2563eb] dark:bg-gray-700 dark:text-white appearance-none"
                                required>
                            @if (ViewBag.Roles != null)
                            {
                                foreach (var Role in (List<SelectListItem>)ViewBag.Roles)
                                {
                                    <option value="@Role.Text">@Role.Text</option>
                                }
                            }

                        </select>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="closeModal('editUserModal')" class="modal-btn modal-btn-cancel">
                    <i class="fas fa-times-circle"></i> إلغاء
                </button>
                <button type="submit" class="modal-btn modal-btn-confirm">
                    <i class="fas fa-save"></i> حفظ التغييرات
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Lock User Modal -->
<div id="lockUserModal" class="modal-overlay hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="modal-container">
        <div class="modal-header">
            <div class="modal-icon lock">
                <i class="fas fa-lock"></i>
            </div>
            <div>
                <h3 class="modal-title">تأكيد الحظر</h3>
            </div>
        </div>
        <div class="modal-body">
            <p class="modal-message">هل أنت متأكد أنك تريد حظر المستخدم <span id="lock-user-name" class="modal-highlight"></span>؟</p>
            <div class="modal-warning lock">
                <i class="fas fa-exclamation-circle modal-warning-icon lock"></i>
                <p class="modal-warning-text lock">لن يتمكن المستخدم من تسجيل الدخول خلال فترة الحظر.</p>
            </div>
            <div class="mt-4">
                <label for="lock-minutes" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">مدة الحظر (دقائق)</label>
                <select id="lock-minutes" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white">
                    <option value="5">5 دقائق</option>
                    <option value="15">15 دقيقة</option>
                    <option value="30" selected>30 دقيقة</option>
                    <option value="60">ساعة واحدة</option>
                    <option value="1440">يوم كامل</option>
                    <option value="10080">أسبوع كامل</option>
                </select>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" onclick="closeModal('lockUserModal')" class="modal-btn modal-btn-cancel">
                <i class="fas fa-times-circle"></i> إلغاء
            </button>
            <form method="post" asp-action="Lock" id="lock-user-form" class="inline">
                @Html.AntiForgeryToken()
                <input type="hidden" id="lock-user-id" name="id">
                <input type="hidden" id="lock-minutes-input" name="minutes" value="30">
                <button type="submit" class="modal-btn modal-btn-confirm lock">
                    <i class="fas fa-check-circle"></i> تأكيد الحظر
                </button>
            </form>
        </div>
    </div>
</div>

<!-- Unlock User Modal -->
<div id="unlockUserModal" class="modal-overlay hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="modal-container">
        <div class="modal-header">
            <div class="modal-icon unlock">
                <i class="fas fa-unlock"></i>
            </div>
            <div>
                <h3 class="modal-title">تأكيد فك الحظر</h3>
            </div>
        </div>
        <div class="modal-body">
            <p class="modal-message">هل أنت متأكد أنك تريد فك حظر المستخدم <span id="unlock-user-name" class="modal-highlight"></span>؟</p>
            <div class="modal-warning unlock">
                <i class="fas fa-exclamation-circle modal-warning-icon unlock"></i>
                <p class="modal-warning-text unlock">سيتمكن المستخدم من تسجيل الدخول فوراً بعد التأكيد.</p>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" onclick="closeModal('unlockUserModal')" class="modal-btn modal-btn-cancel">
                <i class="fas fa-times-circle"></i> إلغاء
            </button>
            <form method="post" asp-action="Unlock" id="unlock-user-form" class="inline">
                @Html.AntiForgeryToken()
                <input type="hidden" id="unlock-user-id" name="id">
                <button type="submit" class="modal-btn modal-btn-confirm unlock">
                    <i class="fas fa-check-circle"></i> تأكيد فك الحظر
                </button>
            </form>
        </div>
    </div>
</div>

<!-- Delete User Modal -->
<div id="deleteUserModal" class="modal-overlay hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="modal-container">
        <div class="modal-header">
            <div class="modal-icon delete">
                <i class="fas fa-trash-alt"></i>
            </div>
            <div>
                <h3 class="modal-title">تأكيد الحذف</h3>
            </div>
        </div>
        <div class="modal-body">
            <p class="modal-message">هل أنت متأكد أنك تريد حذف المستخدم <span id="delete-user-name" class="modal-highlight"></span>؟</p>
            <div class="modal-warning">
                <i class="fas fa-exclamation-circle modal-warning-icon"></i>
                <p class="modal-warning-text">لا يمكن التراجع عن هذا الإجراء، سيتم حذف البيانات نهائيًا.</p>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" onclick="closeModal('deleteUserModal')" class="modal-btn modal-btn-cancel">
                <i class="fas fa-times-circle"></i> إلغاء
            </button>
            <form method="post" asp-action="Delete" id="delete-user-form" class="inline">
                @Html.AntiForgeryToken()
                <input type="hidden" id="delete-user-id" name="id">
                <button type="submit" class="modal-btn modal-btn-confirm delete">
                    <i class="fas fa-check-circle"></i> تأكيد الحذف
                </button>
            </form>
        </div>
    </div>
</div>

<!-- Bulk Delete Modal -->
<div id="bulkDeleteModal" class="modal-overlay hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="modal-container">
        <div class="modal-header">
            <div class="modal-icon delete">
                <i class="fas fa-trash-alt"></i>
            </div>
            <div>
                <h3 class="modal-title">تأكيد الحذف الجماعي</h3>
            </div>
        </div>
        <div class="modal-body">
            <p class="modal-message">هل أنت متأكد أنك تريد حذف <span id="bulk-delete-count" class="modal-highlight">0</span> مستخدمين؟</p>
            <div class="modal-warning">
                <i class="fas fa-exclamation-circle modal-warning-icon"></i>
                <p class="modal-warning-text">لا يمكن التراجع عن هذا الإجراء، سيتم حذف البيانات نهائيًا.</p>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" onclick="closeModal('bulkDeleteModal')" class="modal-btn modal-btn-cancel">
                <i class="fas fa-times-circle"></i> إلغاء
            </button>
            <form method="post" asp-action="DeleteUsers" id="bulk-delete-form" class="inline">
                @Html.AntiForgeryToken()
                <input type="hidden" id="bulk-delete-ids" name="userIds">
                <button type="submit" class="modal-btn modal-btn-confirm delete">
                    <i class="fas fa-check-circle"></i> تأكيد الحذف
                </button>
            </form>
        </div>
    </div>
</div>

<!-- Bulk Lock Modal -->
<div id="bulkLockModal" class="modal-overlay hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="modal-container">
        <div class="modal-header">
            <div class="modal-icon lock">
                <i class="fas fa-lock"></i>
            </div>
            <div>
                <h3 class="modal-title">تأكيد الحظر الجماعي</h3>
            </div>
        </div>
        <div class="modal-body">
            <p class="modal-message">هل أنت متأكد أنك تريد حظر <span id="bulk-lock-count" class="modal-highlight">0</span> مستخدمين؟</p>
            <div class="modal-warning lock">
                <i class="fas fa-exclamation-circle modal-warning-icon lock"></i>
                <p class="modal-warning-text lock">لن يتمكن المستخدمون من تسجيل الدخول خلال فترة الحظر.</p>
            </div>
            <div class="mt-4">
                <label for="bulk-lock-minutes" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">مدة الحظر (دقائق)</label>
                <select id="bulk-lock-minutes" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white">
                    <option value="5">5 دقائق</option>
                    <option value="15">15 دقيقة</option>
                    <option value="30" selected>30 دقيقة</option>
                    <option value="60">ساعة واحدة</option>
                    <option value="1440">يوم كامل</option>
                    <option value="10080">أسبوع كامل</option>
                </select>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" onclick="closeModal('bulkLockModal')" class="modal-btn modal-btn-cancel">
                <i class="fas fa-times-circle"></i> إلغاء
            </button>
            <form method="post" asp-action="LockUsers" id="bulk-lock-form" class="inline">
                @Html.AntiForgeryToken()
                <input type="hidden" id="bulk-lock-ids" name="userIds">
                <input type="hidden" id="bulk-lock-minutes-input" name="minutes" value="30">
                <button type="submit" class="modal-btn modal-btn-confirm lock">
                    <i class="fas fa-check-circle"></i> تأكيد الحظر
                </button>
            </form>
        </div>
    </div>
</div>

<!-- Bulk Unlock Modal -->
<div id="bulkUnlockModal" class="modal-overlay hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="modal-container">
        <div class="modal-header">
            <div class="modal-icon unlock">
                <i class="fas fa-unlock"></i>
            </div>
            <div>
                <h3 class="modal-title">تأكيد فك الحظر الجماعي</h3>
            </div>
        </div>
        <div class="modal-body">
            <p class="modal-message">هل أنت متأكد أنك تريد فك حظر <span id="bulk-unlock-count" class="modal-highlight">0</span> مستخدمين؟</p>
            <div class="modal-warning unlock">
                <i class="fas fa-exclamation-circle modal-warning-icon unlock"></i>
                <p class="modal-warning-text unlock">سيتمكن المستخدمون من تسجيل الدخول فوراً بعد التأكيد.</p>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" onclick="closeModal('bulkUnlockModal')" class="modal-btn modal-btn-cancel">
                <i class="fas fa-times-circle"></i> إلغاء
            </button>
            <form method="post" asp-action="UnlockUsers" id="bulk-unlock-form" class="inline">
                @Html.AntiForgeryToken()
                <input type="hidden" id="bulk-unlock-ids" name="userIds">
                <button type="submit" class="modal-btn modal-btn-confirm unlock">
                    <i class="fas fa-check-circle"></i> تأكيد فك الحظر
                </button>
            </form>
        </div>
    </div>
</div>

<script>
    // Modal Functions
    function openModal(modalId) {
        document.getElementById(modalId).classList.remove('hidden');
    }

    function closeModal(modalId) {
        document.getElementById(modalId).classList.add('hidden');
    }

    // Show Edit Modal
    function showEditModal(userId, userName, userEmail, userRole) {
        document.getElementById('edit-user-id').value = userId;
        document.getElementById('edit-user-name').value = userName;
        document.getElementById('edit-user-email').value = userEmail;

        let roleSelect = document.getElementById('edit-user-role');
        roleSelect.value = userRole;

        // fallback لو ال value مش موجودة
        if (roleSelect.value !== userRole) {
            let option = document.createElement("option");
            option.value = userRole;
            option.text = userRole;
            option.selected = true;
            roleSelect.add(option);
        }

        openModal('editUserModal');
    }


    // Show Lock Modal
    function showLockModal(userId, userName) {
        document.getElementById('lock-user-id').value = userId;
        document.getElementById('lock-user-name').textContent = userName;
        openModal('lockUserModal');
    }

    // Show Unlock Modal
    function showUnlockModal(userId, userName) {
        document.getElementById('unlock-user-id').value = userId;
        document.getElementById('unlock-user-name').textContent = userName;
        openModal('unlockUserModal');
    }

    // Show Delete Modal
    function showDeleteModal(userId, userName) {
        document.getElementById('delete-user-id').value = userId;
        document.getElementById('delete-user-name').textContent = userName;
        openModal('deleteUserModal');
    }

    // Close modal when clicking outside
    window.onclick = function(event) {
        if (event.target.classList.contains('modal-overlay')) {
            const modals = document.querySelectorAll('.modal-overlay');
            modals.forEach(modal => {
                modal.classList.add('hidden');
            });
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        // Initialize variables
        const rowsPerPageSelect = document.getElementById('rows-per-page');
        let rowsPerPage = parseInt(rowsPerPageSelect.value);
        let currentPage = 1;
        let filteredRows = Array.from(document.querySelectorAll('tbody tr[data-user-id]'));
        const totalUsers = document.getElementById('total-users');
        const showingFrom = document.getElementById('showing-from');
        const showingTo = document.getElementById('showing-to');
        const paginationNumbers = document.getElementById('pagination-numbers');
        const prevButton = document.getElementById('prev-page');
        const nextButton = document.getElementById('next-page');
        const searchInput = document.getElementById('search-users');
        const roleFilter = document.getElementById('role-filter');
        const statusFilter = document.getElementById('status-filter');
        const resetFiltersBtn = document.getElementById('reset-filters');

        // Filter users function
        function filterUsers() {
            const searchTerm = searchInput.value.toLowerCase();
            const roleValue = roleFilter.value;
            const statusValue = statusFilter.value;

            filteredRows = Array.from(document.querySelectorAll('tbody tr[data-user-id]')).filter(row => {
                const name = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                const email = row.querySelector('td:nth-child(3)')?.textContent.toLowerCase() || '';
                const role = row.getAttribute('data-role');
                const status = row.getAttribute('data-status');

                const matchesSearch = name.includes(searchTerm) || email.includes(searchTerm);
                const matchesRole = !roleValue || role === roleValue;
                const matchesStatus = !statusValue || status === statusValue;

                return matchesSearch && matchesRole && matchesStatus;
            });

            // Update total items count
            totalUsers.textContent = filteredRows.length;

            // Reset to first page when filtering
            currentPage = 1;
            updateTable();
            setupPagination();
        }

        // Update table display
        function updateTable() {
            const start = (currentPage - 1) * rowsPerPage;
            const end = start + rowsPerPage;

            // Hide all rows first
            document.querySelectorAll('tbody tr[data-user-id]').forEach(row => {
                row.style.display = 'none';
            });

            // Show only the rows for the current page
            filteredRows.slice(start, end).forEach(row => {
                row.style.display = '';
            });

            // Update showing from/to
            showingFrom.textContent = start + 1;
            showingTo.textContent = Math.min(end, filteredRows.length);
        }

        // Setup pagination
        function setupPagination() {
            const pageCount = Math.ceil(filteredRows.length / rowsPerPage);
            paginationNumbers.innerHTML = '';

            // Always show first page
            if (pageCount > 0) {
                addPageButton(1);
            }

            // Show current page and nearby pages
            const startPage = Math.max(2, currentPage - 1);
            const endPage = Math.min(pageCount - 1, currentPage + 1);

            if (startPage > 2) {
                paginationNumbers.innerHTML += '<span class="px-3 py-1">...</span>';
            }

            for (let i = startPage; i <= endPage; i++) {
                addPageButton(i);
            }

            if (endPage < pageCount - 1) {
                paginationNumbers.innerHTML += '<span class="px-3 py-1">...</span>';
            }

            // Always show last page if different from first
            if (pageCount > 1) {
                addPageButton(pageCount);
            }

            updatePaginationButtons();
        }

        function addPageButton(pageNumber) {
            const pageButton = document.createElement('button');
            pageButton.className = `pagination-btn ${pageNumber === currentPage ? 'active' : ''}`;
            pageButton.textContent = pageNumber;
            pageButton.addEventListener('click', () => {
                currentPage = pageNumber;
                updateTable();
                setupPagination();
            });
            paginationNumbers.appendChild(pageButton);
        }

        function updatePaginationButtons() {
            const pageCount = Math.ceil(filteredRows.length / rowsPerPage);

            prevButton.disabled = currentPage === 1;
            nextButton.disabled = currentPage === pageCount || pageCount === 0;

            if (prevButton.disabled) {
                prevButton.classList.add('disabled');
            } else {
                prevButton.classList.remove('disabled');
            }

            if (nextButton.disabled) {
                nextButton.classList.add('disabled');
            } else {
                nextButton.classList.remove('disabled');
            }
        }

        // Event listeners for pagination
        prevButton.addEventListener('click', () => {
            if (currentPage > 1) {
                currentPage--;
                updateTable();
                setupPagination();
            }
        });

        nextButton.addEventListener('click', () => {
            const pageCount = Math.ceil(filteredRows.length / rowsPerPage);
            if (currentPage < pageCount) {
                currentPage++;
                updateTable();
                setupPagination();
            }
        });

        // Event listeners for filters
        searchInput.addEventListener('input', filterUsers);
        roleFilter.addEventListener('change', filterUsers);
        statusFilter.addEventListener('change', filterUsers);
        resetFiltersBtn.addEventListener('click', function() {
            searchInput.value = '';
            roleFilter.value = '';
            statusFilter.value = '';
            filterUsers();
        });

        // Change rows per page
        rowsPerPageSelect.addEventListener('change', function() {
            rowsPerPage = parseInt(this.value);
            currentPage = 1;
            updateTable();
            setupPagination();
        });

        // Bulk actions
        const bulkActionsContainer = document.getElementById('bulk-actions-container');
        const selectAllCheckbox = document.getElementById('select-all');
        const userCheckboxes = document.querySelectorAll('.user-checkbox');
        const selectedCountSpan = document.getElementById('selected-count');
        const bulkActionSelect = document.getElementById('bulk-action');
        const applyBulkActionBtn = document.getElementById('apply-bulk-action');

        // Update selected count
        function updateSelectedCount() {
            const selectedCount = document.querySelectorAll('.user-checkbox:checked').length;
            selectedCountSpan.textContent = selectedCount;

            if (selectedCount > 0) {
                bulkActionsContainer.classList.remove('hidden');
            } else {
                bulkActionsContainer.classList.add('hidden');
            }
        }

        // Select all functionality
        selectAllCheckbox.addEventListener('change', function() {
            userCheckboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
            updateSelectedCount();
        });

        // Individual checkbox functionality
        userCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                selectAllCheckbox.checked = [...userCheckboxes].every(cb => cb.checked);
                updateSelectedCount();
            });
        });

        // Apply bulk action
        applyBulkActionBtn.addEventListener('click', function() {
            const action = bulkActionSelect.value;
            const selectedIds = [...document.querySelectorAll('.user-checkbox:checked')]
                .map(checkbox => checkbox.value);

            if (selectedIds.length === 0) return;

            const selectedNames = [...document.querySelectorAll('.user-checkbox:checked')]
                .map(checkbox => {
                    const row = checkbox.closest('tr');
                    return row.querySelector('td:nth-child(2) .text-sm').textContent.trim();
                });

            if (action === 'delete') {
                document.getElementById('bulk-delete-count').textContent = selectedIds.length;
                document.getElementById('bulk-delete-ids').value = selectedIds.join(',');
                openModal('bulkDeleteModal');
            } else if (action === 'lock') {
                document.getElementById('bulk-lock-count').textContent = selectedIds.length;
                document.getElementById('bulk-lock-ids').value = selectedIds.join(',');
                openModal('bulkLockModal');
            } else if (action === 'unlock') {
                document.getElementById('bulk-unlock-count').textContent = selectedIds.length;
                document.getElementById('bulk-unlock-ids').value = selectedIds.join(',');
                openModal('bulkUnlockModal');
            }
        });

        // Update lock minutes
        document.getElementById('lock-minutes')?.addEventListener('change', function() {
            document.getElementById('lock-minutes-input').value = this.value;
        });

        document.getElementById('bulk-lock-minutes')?.addEventListener('change', function() {
            document.getElementById('bulk-lock-minutes-input').value = this.value;
        });

        // Initialize table
        filterUsers();
    });
</script>