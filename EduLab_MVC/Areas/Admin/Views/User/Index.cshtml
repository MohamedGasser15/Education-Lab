@using System.Globalization
@using EduLab_MVC.Models.DTOs.Auth
@model IEnumerable<UserDTO>
@{
    ViewData["Title"] = "إدارة المستخدمين";
    var arabicCulture = new CultureInfo("ar-SA");
}

<div class="bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden mb-8">
    <div class="p-4 border-b border-gray-200 dark:border-gray-700 flex flex-col md:flex-row md:justify-between md:items-center">
        <h3 class="text-lg font-semibold text-gray-800 dark:text-white mb-4 md:mb-0">كل المستخدمين</h3>

        <div class="flex flex-col space-y-3 md:space-y-0 md:flex-row md:space-x-3 space-x-reverse">
            <div class="relative">
                <input type="text" id="searchInput" placeholder="بحث..." class="pr-10 pl-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white w-full">
                <i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
            </div>

            <select id="roleFilter" class="border border-gray-300 dark:border-gray-600 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white">
                <option value="">كل الأدوار</option>
                <option value="Student">طلاب</option>
                <option value="Instructor">مدربون</option>
                <option value="Admin">مشرفون</option>
                <option value="Support">دعم</option>
                <option value="Moderator">مراقبون</option>
            </select>

            <select id="statusFilter" class="border border-gray-300 dark:border-gray-600 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white">
                <option value="">كل الحالات</option>
                <option value="active">نشط</option>
                <option value="banned">محظور</option>
                <option value="inactive">غير مفعل</option>
            </select>
        </div>
    </div>

    <div class="overflow-x-auto">
        <table class="w-full" id="usersTable">
            <thead class="bg-gray-50 dark:bg-gray-700">
                <tr>
                    <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                        <input type="checkbox" id="selectAll" class="rounded border-gray-300 dark:border-gray-600 text-blue-600 dark:text-blue-400 focus:ring-blue-500 dark:bg-gray-700">
                    </th>
                    <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">الاسم</th>
                    <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">البريد الإلكتروني</th>
                    <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">الدور</th>
                    <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">الحالة</th>
                    <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">التسجيل</th>
                    <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">الإجراءات</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-200 dark:divide-gray-700">
                @foreach (var user in Model)
                {
                    <tr class="user-row hover:bg-gray-50 dark:hover:bg-gray-700 transition" data-role="@user.Role" data-status="active">
                        <td class="px-6 py-4 whitespace-nowrap">
                            <input type="checkbox" class="user-checkbox rounded border-gray-300 dark:border-gray-600 text-blue-600 dark:text-blue-400 focus:ring-blue-500 dark:bg-gray-700">
                        </td>
                        @{
                            string avatarColor = "2563eb"; // Default primary color (blue)
                            string avatarBg = "2563eb";

                            if (user.Role == "Instructor")
                            {
                                avatarColor = "7c3aed"; // Purple
                                avatarBg = "7c3aed";
                            }
                            else if (user.Role == "Admin")
                            {
                                avatarColor = "dc2626"; // Red
                                avatarBg = "dc2626";
                            }
                            else if (user.Role == "Support")
                            {
                                avatarColor = "16a34a"; // Green
                                avatarBg = "16a34a";
                            }
                            else if (user.Role == "Moderator")
                            {
                                avatarColor = "ca8a04"; // Yellow
                                avatarBg = "ca8a04";
                            }

                            // Generate initials (first 2 letters)
                            string initials = string.Empty;
                            if (!string.IsNullOrEmpty(user.FullName))
                            {
                                var nameParts = user.FullName.Split(' ');
                                initials = nameParts.Length >= 2
                                ? $"{nameParts[0][0]}{nameParts[1][0]}"
                                : user.FullName.Length >= 2
                                ? user.FullName.Substring(0, 2)
                                : user.FullName;
                            }
                        }
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex items-center">
                                <img src="https://api.dicebear.com/7.x/initials/svg?seed=@(initials)&backgroundColor=@(avatarBg)&textColor=ffffff&length=2&fontSize=40"
                                     alt="User Avatar"
                                     class="w-8 h-8 rounded-full ml-3" />
                                <div>
                                    <div class="text-sm font-medium text-gray-900 dark:text-white">@user.FullName</div>
                                </div>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">@user.Email</td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @{
                                var roleClass = "";
                                if (user.Role == "Student")
                                {
                                    roleClass = "bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200";
                                }
                                else if (user.Role == "Instructor")
                                {
                                    roleClass = "bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200";
                                }
                                else if (user.Role == "Admin")
                                {
                                    roleClass = "bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200";
                                }
                                else if (user.Role == "Support")
                                {
                                    roleClass = "bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200";
                                }
                                else if (user.Role == "Moderator")
                                {
                                    roleClass = "bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200";
                                }
                                else
                                {
                                    roleClass = "bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200";
                                }
                            }
                            <span class="px-2 py-1 text-xs rounded-full @roleClass">@user.Role</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="px-2 py-1 text-xs rounded-full bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200">نشط</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400" data-created="@user.CreatedAt.ToString("o")">
                            @{
                                var timeSinceCreation = DateTime.Now - user.CreatedAt;
                                string timeText;

                                if (timeSinceCreation.TotalDays >= 365)
                                {
                                    int years = (int)(timeSinceCreation.TotalDays / 365);
                                    timeText = years == 1 ? "منذ سنة" : $"منذ {years} سنوات";
                                }
                                else if (timeSinceCreation.TotalDays >= 30)
                                {
                                    int months = (int)(timeSinceCreation.TotalDays / 30);
                                    timeText = months == 1 ? "منذ شهر" : $"منذ {months} أشهر";
                                }
                                else if (timeSinceCreation.TotalDays >= 1)
                                {
                                    int days = (int)timeSinceCreation.TotalDays;
                                    timeText = days == 1 ? "منذ يوم" : $"منذ {days} أيام";
                                }
                                else if (timeSinceCreation.TotalHours >= 1)
                                {
                                    int hours = (int)timeSinceCreation.TotalHours;
                                    timeText = hours == 1 ? "منذ ساعة" : $"منذ {hours} ساعات";
                                }
                                else if (timeSinceCreation.TotalMinutes >= 1)
                                {
                                    int minutes = (int)timeSinceCreation.TotalMinutes;
                                    timeText = minutes == 1 ? "منذ دقيقة" : $"منذ {minutes} دقائق";
                                }
                                else
                                {
                                    timeText = "الآن";
                                }
                            }
                            @timeText
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                            <div class="flex space-x-3 space-x-reverse">
                                <button class="text-blue-600 dark:text-blue-400 hover:text-blue-900 dark:hover:text-blue-300" title="تعديل">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="text-yellow-600 dark:text-yellow-400 hover:text-yellow-900 dark:hover:text-yellow-300" title="حظر">
                                    <i class="fas fa-ban"></i>
                                </button>
                                <button class="text-red-600 dark:text-red-400 hover:text-red-900 dark:hover:text-red-300" title="حذف">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <div class="px-6 py-4 border-t border-gray-200 dark:border-gray-700 flex items-center justify-between">
        <div class="flex-1 flex justify-between items-center">
            <button id="prevPage" class="relative inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 disabled:opacity-50" disabled>
                السابق
            </button>
            <div class="hidden md:flex space-x-2 space-x-reverse" id="paginationNumbers">
                <!-- سيتم ملؤها بالجافاسكريبت -->
            </div>
            <button id="nextPage" class="relative inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700">
                التالي
            </button>
        </div>
    </div>
</div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // البحث والتصفية
            const searchInput = document.getElementById('searchInput');
            const roleFilter = document.getElementById('roleFilter');
            const statusFilter = document.getElementById('statusFilter');
            const userRows = document.querySelectorAll('.user-row');

            function filterUsers() {
                const searchTerm = searchInput.value.toLowerCase();
                const roleValue = roleFilter.value;
                const statusValue = statusFilter.value;

                userRows.forEach(row => {
                    const name = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                    const email = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
                    const role = row.getAttribute('data-role');
                    const status = row.getAttribute('data-status');

                    const matchesSearch = name.includes(searchTerm) || email.includes(searchTerm);
                    const matchesRole = !roleValue || role === roleValue;
                    const matchesStatus = !statusValue || status === statusValue;

                    row.style.display = matchesSearch && matchesRole && matchesStatus ? '' : 'none';
                });
            }

            searchInput.addEventListener('input', filterUsers);
            roleFilter.addEventListener('change', filterUsers);
            statusFilter.addEventListener('change', filterUsers);

            // الباجينيشن
            const rowsPerPage = 10;
            let currentPage = 1;
            const paginationNumbers = document.getElementById('paginationNumbers');
            const prevButton = document.getElementById('prevPage');
            const nextButton = document.getElementById('nextPage');

            function setupPagination() {
                const visibleRows = Array.from(userRows).filter(row => row.style.display !== 'none');
                const pageCount = Math.ceil(visibleRows.length / rowsPerPage);

                paginationNumbers.innerHTML = '';

                for (let i = 1; i <= pageCount; i++) {
                    const pageButton = document.createElement('button');
                    pageButton.className = `px-4 py-2 border ${i === currentPage ? 'border-blue-500 text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900' : 'border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'} text-sm font-medium rounded-md`;
                    pageButton.textContent = i;
                    pageButton.addEventListener('click', () => {
                        currentPage = i;
                        updateTable();
                        updatePaginationButtons();
                    });
                    paginationNumbers.appendChild(pageButton);
                }

                updatePaginationButtons();
            }

            function updateTable() {
                const visibleRows = Array.from(userRows).filter(row => row.style.display !== 'none');
                const start = (currentPage - 1) * rowsPerPage;
                const end = start + rowsPerPage;

                userRows.forEach(row => {
                    if (row.style.display !== 'none') {
                        const index = visibleRows.indexOf(row);
                        row.style.display = index >= start && index < end ? '' : 'none';
                    }
                });
            }

            function updatePaginationButtons() {
                const visibleRows = Array.from(userRows).filter(row => row.style.display !== 'none');
                const pageCount = Math.ceil(visibleRows.length / rowsPerPage);

                prevButton.disabled = currentPage === 1;
                nextButton.disabled = currentPage === pageCount || pageCount === 0;
            }

            prevButton.addEventListener('click', () => {
                if (currentPage > 1) {
                    currentPage--;
                    updateTable();
                    updatePaginationButtons();
                }
            });

            nextButton.addEventListener('click', () => {
                const visibleRows = Array.from(userRows).filter(row => row.style.display !== 'none');
                const pageCount = Math.ceil(visibleRows.length / rowsPerPage);

                if (currentPage < pageCount) {
                    currentPage++;
                    updateTable();
                    updatePaginationButtons();
                }
            });

            // تحديث الباجينيشن عند التصفية
            searchInput.addEventListener('input', () => {
                currentPage = 1;
                filterUsers();
                setupPagination();
                updateTable();
            });

            roleFilter.addEventListener('change', () => {
                currentPage = 1;
                filterUsers();
                setupPagination();
                updateTable();
            });

            statusFilter.addEventListener('change', () => {
                currentPage = 1;
                filterUsers();
                setupPagination();
                updateTable();
            });

            // تحديد الكل
            document.getElementById('selectAll').addEventListener('change', function() {
                const checkboxes = document.querySelectorAll('.user-checkbox');
                checkboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
            });

            // التهيئة الأولية
            filterUsers();
            setupPagination();
            updateTable();
        });
    </script>
