@using EduLab_MVC.Models.DTOs.Course
@model EduLab_MVC.Models.DTOs.Course.CourseDTO
@{
    ViewData["Title"] = Model.Title;
    var progressPercentage = ViewBag.ProgressPercentage ?? 0;
    var completedLectures = ViewBag.CompletedLectures ?? 0;
    var totalLectures = ViewBag.TotalLectures ?? 0;
    var lectureStatuses = ViewBag.LectureStatuses as Dictionary<int, bool> ?? new Dictionary<int, bool>();
    var lastAccessedLectureId = ViewBag.LastAccessedLectureId as int?;
}

<script>
    tailwind.config = {
        darkMode: 'class',
        theme: {
            extend: {
                animation: {
                    'pulse-slow': 'pulse 3s infinite',
                    'bounce-slow': 'bounce 2s infinite',
                    'fade-in': 'fadeIn 0.5s ease-in-out',
                    'slide-up': 'slideUp 0.3s ease-out',
                    'zoom-in': 'zoomIn 0.3s ease-out',
                },
                keyframes: {
                    fadeIn: {
                        '0%': { opacity: '0' },
                        '100%': { opacity: '1' },
                    },
                    slideUp: {
                        '0%': { transform: 'translateY(10px)', opacity: '0' },
                        '100%': { transform: 'translateY(0)', opacity: '1' },
                    },
                    zoomIn: {
                        '0%': { transform: 'scale(0.95)', opacity: '0' },
                        '100%': { transform: 'scale(1)', opacity: '1' },
                    }
                }
            }
        }
    }
</script>

<style>
    @@import url('https://fonts.googleapis.com/css2?family=Tajawal:wght@300;400;500;700;800&display=swap');

    body {
        font-family: 'Tajawal', sans-serif;
    }

    /* تخصيص شريط التمرير */
    ::-webkit-scrollbar {
        width: 8px;
    }
    /* تحسينات إضافية للتقييم */
.star-rating .star {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.star-rating .star:hover {
    transform: scale(1.2);
}

.rating-summary {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
}

.dark .rating-summary {
    background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
}
/* تحسينات إضافية لنظام التقييم */
.rating-summary {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.rating-summary:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
}

.dark .rating-summary {
    background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
}

/* تصميم النجوم المحسن */
.star-rating {
    display: flex;
    justify-content: center;
    gap: 4px;
}

.star-rating .star {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    position: relative;
}

.star-rating .star:hover {
    transform: scale(1.2);
}

.star-rating .star i {
    transition: all 0.2s ease;
}

.star-rating .star.active i,
.star-rating .star:hover i {
    color: #fbbf24 !important;
    text-shadow: 0 0 10px rgba(251, 191, 36, 0.5);
}

/* توزيع التقييمات المحسن */
.rating-distribution-item {
    display: flex;
    align-items: center;
    margin-bottom: 8px;
}

.rating-distribution-item .star-label {
    width: 20px;
    text-align: center;
    font-size: 14px;
    color: #6b7280;
}

.dark .rating-distribution-item .star-label {
    color: #9ca3af;
}

.rating-distribution-item .distribution-bar {
    flex: 1;
    height: 8px;
    background-color: #e5e7eb;
    border-radius: 4px;
    margin: 0 12px;
    overflow: hidden;
    position: relative;
}

.dark .rating-distribution-item .distribution-bar {
    background-color: #4b5563;
}

.rating-distribution-item .distribution-fill {
    height: 100%;
    background: linear-gradient(90deg, #fbbf24, #f59e0b);
    border-radius: 4px;
    transition: width 1s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
}

.rating-distribution-item .distribution-fill::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
    animation: shimmer 2s infinite;
}

@@keyframes shimmer {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}

.rating-distribution-item .distribution-count {
    width: 30px;
    text-align: left;
    font-size: 14px;
    color: #6b7280;
}

.dark .rating-distribution-item .distribution-count {
    color: #9ca3af;
}

/* تأثيرات النموذج */
.rating-form-container {
    background: linear-gradient(135deg, #f0fdf4 0%, #ecfdf5 100%);
    border: 1px solid #dcfce7;
    border-radius: 16px;
    padding: 24px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
}

.dark .rating-form-container {
    background: linear-gradient(135deg, #064e3b 0%, #065f46 100%);
    border-color: #047857;
}

.rating-form-container:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
}

/* تأثيرات الـ Modal */
#rating-modal #modal-content {
    animation: modalAppear 0.4s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@@keyframes modalAppear {
    0% {
        opacity: 0;
        transform: scale(0.95) translateY(20px);
    }
    100% {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}

/* تصميم النجوم في الـ Modal */
.modal-star-rating {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin: 20px 0;
}

.modal-star-rating .star {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
}

.modal-star-rating .star:hover {
    transform: scale(1.3);
}

.modal-star-rating .star i {
    font-size: 2.5rem;
    transition: all 0.2s ease;
}

.modal-star-rating .star.active i,
.modal-star-rating .star:hover i {
    color: #fbbf24 !important;
    text-shadow: 0 0 15px rgba(251, 191, 36, 0.6);
}

/* تصميم زر الإرسال */
.rating-submit-btn {
    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 12px;
    font-weight: 600;
    font-size: 1rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
    position: relative;
    overflow: hidden;
}

.rating-submit-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(16, 185, 129, 0.4);
}

.rating-submit-btn:active {
    transform: translateY(0);
}

.rating-submit-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    transition: left 0.5s;
}

.rating-submit-btn:hover::before {
    left: 100%;
}

/* تصميم التقييم الحالي */
.existing-rating-container {
    background: linear-gradient(135deg, #eff6ff 0%, #f0f9ff 100%);
    border: 1px solid #dbeafe;
    border-radius: 16px;
    padding: 24px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
}

.dark .existing-rating-container {
    background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%);
    border-color: #3b82f6;
}

/* تصميم شريط التقدم في التقييم */
.rating-progress-bar {
    height: 8px;
    background: linear-gradient(90deg, #3b82f6, #60a5fa);
    border-radius: 4px;
    position: relative;
    overflow: hidden;
}

.rating-progress-bar::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
    animation: shimmer 2s infinite;
}

/* تصميم النجوم في الملخص */
.summary-stars {
    display: flex;
    gap: 2px;
}

.summary-stars i {
    font-size: 1.2rem;
    transition: all 0.3s ease;
}

/* تأثيرات الاهتزاز للنجوم */
@@keyframes starPulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1); }
}

.star-rating .star.animated {
    animation: starPulse 0.5s ease;
}
    ::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }

    ::-webkit-scrollbar-thumb {
        background: #c5c5c5;
        border-radius: 10px;
        transition: all 0.3s ease;
    }

    ::-webkit-scrollbar-thumb:hover {
        background: #a8a8a8;
        transform: scale(1.05);
    }

    .dark ::-webkit-scrollbar-track {
        background: #374151;
    }

    .dark ::-webkit-scrollbar-thumb {
        background: #6b7280;
    }

    .dark ::-webkit-scrollbar-thumb:hover {
        background: #9ca3af;
    }

    /* تأثيرات انتقالية محسنة */
    .transition-smooth {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .transition-all {
        transition: all 0.3s ease;
    }
    
    /* تأثيرات للفيديو */
    .video-zoom {
        transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .video-zoom:hover {
        transform: scale(1.02);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
    }
    /* تنسيق المحاضرة النشطة */
.lecture-item.current-lecture {
    border-left: 4px solid #3b82f6 !important;
    background: linear-gradient(90deg, rgba(59, 130, 246, 0.1) 0%, transparent 100%) !important;
    border-right: 2px solid #3b82f6 !important;
}

.dark .lecture-item.current-lecture {
    border-left-color: #60a5fa !important;
    border-right-color: #60a5fa !important;
    background: linear-gradient(90deg, rgba(96, 165, 250, 0.15) 0%, transparent 100%) !important;
}

/* تنسيق المحاضرات المكتملة */
.lecture-item.completed {
    background: linear-gradient(90deg, rgba(34, 197, 94, 0.08) 0%, transparent 100%) !important;
    border-left: 3px solid #22c55e !important;
}

.dark .lecture-item.completed {
    border-left-color: #4ade80 !important;
    background: linear-gradient(90deg, rgba(74, 222, 128, 0.12) 0%, transparent 100%) !important;
}

/* تنسيق المحاضرة النشطة والمكتملة معاً */
.lecture-item.current-lecture.completed {
    background: linear-gradient(90deg, rgba(34, 197, 94, 0.15) 0%, rgba(59, 130, 246, 0.1) 100%) !important;
    border-left: 4px solid #22c55e !important;
    border-right: 2px solid #3b82f6 !important;
}

/* تنسيق أيقونة الحالة للمحاضرات المكتملة */
.lecture-status.completed {
    background-color: #22c55e !important;
    border-color: #22c55e !important;
    position: relative;
}

.lecture-status.completed::after {
    content: "✓";
    color: white;
    font-size: 10px;
    font-weight: bold;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* تنسيق أيقونة المحاضرة للمحاضرات المكتملة */
.lecture-item.completed .flex-shrink-0 {
    background: linear-gradient(135deg, #22c55e, #16a34a) !important;
}

.lecture-item.completed .flex-shrink-0 i {
    color: white !important;
}

/* تأثيرات إضافية للعناصر النشطة */
.current-lecture .lecture-status {
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.3);
    animation: pulse-blue 2s infinite;
}

.completed .lecture-status {
    box-shadow: 0 0 0 2px rgba(34, 197, 94, 0.3);
    animation: pulse-green 2s infinite;
}

@@keyframes pulse-blue {
    0% {
        box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);
    }
    70% {
        box-shadow: 0 0 0 6px rgba(59, 130, 246, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
    }
}

@@keyframes pulse-green {
    0% {
        box-shadow: 0 0 0 0 rgba(34, 197, 94, 0.4);
    }
    70% {
        box-shadow: 0 0 0 6px rgba(34, 197, 94, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(34, 197, 94, 0);
    }
}

/* تحسين النص للمحاضرات المكتملة */
.lecture-item.completed .text-sm {
    color: #15803d !important;
    font-weight: 600;
}
.dark .lecture-item.completed .flex-shrink-0 {
    background: linear-gradient(135deg, #16a34a, #15803d) !important;
}
.dark .lecture-item.completed .text-sm {
    color: #4ade80 !important;
}

.lecture-item.completed .text-xs {
    color: #16a34a !important;
}

.dark .lecture-item.completed .text-xs {
    color: #22c55e !important;
}
.dark .lecture-item.completed .text-sm.completed-text {
    color: #4ade80 !important;
}
.dark .lecture-item.completed .text-xs.completed-duration {
    color: #22c55e !important;
}
/* تنسيق النص للمحاضرة النشطة */
.current-lecture .text-sm {
    color: #1d4ed8 !important;
    font-weight: 700;
}

.dark .current-lecture .text-sm {
    color: #93c5fd !important;
}

.current-lecture .text-xs {
    color: #2563eb !important;
}

.dark .current-lecture .text-xs {
    color: #60a5fa !important;
}
    /* تأثيرات للعناصر التفاعلية */
    .interactive-btn {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        transform: translateY(0);
        position: relative;
        overflow: hidden;
    }
    
    .interactive-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        transition: left 0.5s;
    }
    
    .interactive-btn:hover::before {
        left: 100%;
    }
    
    .interactive-btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 20px rgba(0,0,0,0.15);
    }
    
    .interactive-btn:active {
        transform: translateY(0);
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
    
    /* تأثيرات للتحميل */
    .skeleton-loader {
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200% 100%;
        animation: loading 1.5s infinite;
        border-radius: 8px;
    }
    
    .dark .skeleton-loader {
        background: linear-gradient(90deg, #374151 25%, #4b5563 50%, #374151 75%);
        background-size: 200% 100%;
        animation: loading 1.5s infinite;
    }
    
    @@keyframes loading {
        0% {
            background-position: 200% 0;
        }
        100% {
            background-position: -200% 0;
        }
    }
    
    /* تأثيرات للتنقل */
    .slide-in-right {
        animation: slideInRight 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .slide-in-left {
        animation: slideInLeft 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .slide-in-up {
        animation: slideInUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .fade-in {
        animation: fadeIn 0.5s ease-in-out;
    }
    
    @@keyframes slideInRight {
        from {
            opacity: 0;
            transform: translateX(30px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }
    
    @@keyframes slideInLeft {
        from {
            opacity: 0;
            transform: translateX(-30px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }
    
    @@keyframes slideInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    @@keyframes fadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }
    
    /* تأثيرات للفيديو أثناء التشغيل */
    .video-playing .video-controls {
        opacity: 1 !important;
    }
    
    /* تأثيرات للزر الرئيسي */
    .play-pulse {
        animation: playPulse 2s infinite;
        box-shadow: 0 0 0 0 rgba(37, 99, 235, 0.7);
    }
    
    @@keyframes playPulse {
        0% {
            box-shadow: 0 0 0 0 rgba(37, 99, 235, 0.7);
        }
        70% {
            box-shadow: 0 0 0 15px rgba(37, 99, 235, 0);
        }
        100% {
            box-shadow: 0 0 0 0 rgba(37, 99, 235, 0);
        }
    }
    
    /* تأثيرات التقدم */
    .progress-glow {
        box-shadow: 0 0 10px rgba(37, 99, 235, 0.5);
    }
    
    /* تأثيرات للبطاقات */
    .card-hover {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .card-hover:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
    }
    
    /* تأثيرات للقوائم */
    .menu-item {
        transition: all 0.2s ease;
        border-left: 3px solid transparent;
    }
    
    .menu-item:hover {
        border-left-color: #3b82f6;
        background-color: rgba(59, 130, 246, 0.05);
    }
    
    .dark .menu-item:hover {
        background-color: rgba(59, 130, 246, 0.1);
    }
    
    /* تأثيرات للشريط الجانبي */
    .sidebar-section {
        transition: all 0.3s ease;
    }
    
    .sidebar-section:hover {
        background-color: rgba(0, 0, 0, 0.02);
    }
    
    .dark .sidebar-section:hover {
        background-color: rgba(255, 255, 255, 0.02);
    }
    
    /* تأثيرات للزر العائم */
    .floating-btn {
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .floating-btn:hover {
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        transform: translateY(-3px);
    }
    
    /* تأثيرات للتنبيهات */
    .notification {
        animation: slideInUp 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    /* تأثيرات النص */
    .text-glow {
        text-shadow: 0 0 10px rgba(59, 130, 246, 0.5);
    }
    
    /* تأثيرات الخلفية */
    .gradient-bg {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }
    
    /* تأثيرات للصورة المصغرة */
    .thumbnail-overlay {
        background: linear-gradient(to top, rgba(0,0,0,0.7) 0%, transparent 50%);
        transition: all 0.3s ease;
    }
    
    .thumbnail-container:hover .thumbnail-overlay {
        background: linear-gradient(to top, rgba(0,0,0,0.9) 0%, transparent 50%);
    }
    
    /* تأثيرات للزر العكسي */
    .back-btn {
        transition: all 0.3s ease;
        transform: translateX(0);
    }
    
    .back-btn:hover {
        transform: translateX(-5px);
    }

    /* شاشة اختيار المحاضرة */
    .lecture-selection-screen {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 60vh;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    /* تحسينات شريط التقدم */
    .progress-bar-draggable {
        cursor: pointer;
        position: relative;
    }

    .progress-thumb {
        position: absolute;
        top: 50%;
        left: 100%;
        transform: translate(-50%, -50%);
        width: 16px;
        height: 16px;
        background: #3b82f6;
        border-radius: 50%;
        cursor: grab;
        transition: all 0.2s ease;
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }

    .progress-thumb:active {
        cursor: grabbing;
        transform: translate(-50%, -50%) scale(1.2);
    }

    .volume-slider {
        width: 80px;
        height: 4px;
        background: #6b7280;
        border-radius: 2px;
        position: relative;
        cursor: pointer;
    }

    .volume-level {
        height: 100%;
        background: #3b82f6;
        border-radius: 2px;
        position: relative;
    }

    .volume-thumb {
        position: absolute;
        top: 50%;
        left: 100%;
        transform: translate(-50%, -50%);
        width: 12px;
        height: 12px;
        background: #3b82f6;
        border-radius: 50%;
        cursor: grab;
        opacity: 0;
        transition: opacity 0.2s ease;
    }

    .volume-slider:hover .volume-thumb {
        opacity: 1;
    }

    .volume-thumb:active {
        cursor: grabbing;
    }
</style>

    <!-- صفحة تجربة الفيديو -->
    <div class="bg-white dark:bg-gray-900 min-h-screen">
        <!-- شريط التقدم العلوي -->
        <div class="container mx-auto px-4 py-6 pt-8">
            <!-- رأس الصفحة -->
            <div class="mb-8 slide-in-up">
                <!-- breadcrumbs -->
                <nav class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-3 space-x-2 space-x-reverse">
                    <a href="/" class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors">الرئيسية</a>
                    <span>/</span>
                    <a asp-action="Index" asp-controller="Enrollment" 
                       class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors">دوراتي</a>
                    <span>/</span>
                    <span class="text-blue-700 dark:text-blue-200 font-medium">@Model.Title</span>
                </nav>

                <!-- box -->
                <div class="flex justify-between items-center p-5 bg-white dark:bg-gray-800 rounded-2xl shadow-md">
                    <!-- العنوان + زر الرجوع -->
                    <div class="flex items-center gap-4">
                        <!-- زر العودة -->
                        <a asp-action="Index" asp-controller="Enrollment"
                           class="flex items-center px-4 py-2 rounded-xl bg-gray-100 dark:bg-gray-700 
                                  text-gray-700 dark:text-gray-200 hover:bg-blue-600 hover:text-white 
                                  transition-all duration-300 shadow-sm">
                            <i class="fas fa-arrow-right ml-2"></i>
                            <span class="font-medium">العودة لدوراتي</span>
                        </a>

                        <!-- اسم الكورس -->
                        <div class="flex items-center gap-2">
                            <i class="fas fa-book-open text-blue-600 dark:text-blue-400 text-xl"></i>
                            <h1 class="text-2xl md:text-3xl font-extrabold text-gray-900 dark:text-white tracking-tight 
                                       bg-gradient-to-r from-blue-500 to-blue-700 dark:from-blue-400 dark:to-blue-600 
                                       bg-clip-text text-transparent">
                                @Model.Title
                            </h1>
                        </div>
                    </div>

                    <!-- زر المشاركة -->
                    <div>
                        <button
                            class="p-3 rounded-full bg-gradient-to-r from-blue-500 to-blue-600 text-white 
                                   hover:shadow-lg hover:scale-110 transition-transform duration-300">
                            <i class="fas fa-share-alt"></i>
                        </button>
                    </div>
                </div>
            </div>

            <div class="flex flex-col lg:flex-row gap-6">
                <!-- المحتوى الرئيسي -->
                <div class="lg:w-2/3">
                    <!-- شاشة اختيار المحاضرة (تظهر عندما لا تكون هناك محاضرة محددة) -->
                    <div id="lecture-selection-screen" class="lecture-selection-screen rounded-2xl shadow-2xl mb-6 hidden">
                        <div class="text-center text-white p-8">
                            <div class="w-24 h-24 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-6">
                                <i class="fas fa-play text-3xl text-white"></i>
                            </div>
                            <h2 class="text-3xl font-bold mb-4">مرحباً بك في دوره @Model.Title</h2>
                            <p class="text-xl mb-6 text-white/90">اختر محاضرة من القائمة الجانبية للبدء</p>
                            <div class="flex flex-col sm:flex-row gap-4 justify-center">
                                <button id="start-first-lecture" class="px-6 py-3 bg-white text-blue-600 rounded-xl font-semibold hover:bg-gray-100 transition-all interactive-btn">
                                    <i class="fas fa-play-circle ml-2"></i>
                                    ابدأ من المحاضرة الأولى
                                </button>
                                <button id="start-last-lecture" class="px-6 py-3 bg-blue-600 text-white rounded-xl font-semibold hover:bg-blue-700 transition-all interactive-btn">
                                    <i class="fas fa-history ml-2"></i>
                                    استأنف من حيث توقفت
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- مشغل الفيديو -->
                    <div class="bg-black rounded-2xl overflow-hidden shadow-2xl aspect-video relative video-zoom hidden" id="video-container">
                        <video class="w-full h-full" id="main-video" poster="@Model.ThumbnailUrl">
                            <source src="" type="video/mp4" id="video-source">
                            متصفحك لا يدعم تشغيل الفيديو
                        </video>

                        <!-- طبقة التحكم المخصصة -->
                        <div id="video-overlay" class="absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-70 transition-all duration-500">
                            <div class="text-center text-white">
                                <button id="play-button" class="bg-blue-600 hover:bg-blue-700 text-white p-6 rounded-full mb-4 transform hover:scale-110 transition-all play-pulse interactive-btn">
                                    <i class="fas fa-play text-3xl"></i>
                                </button>
                                <p class="text-2xl font-bold mb-2 text-glow">انقر للبدء</p>
                                <p class="text-lg text-gray-300">استمتع بتجربة فيديو متقدمة مع تحكم كامل</p>
                            </div>
                        </div>

                        <!-- عناصر التحكم في الفيديو -->
                        <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black via-black/70 to-transparent p-5 transition-all duration-300 opacity-0" id="video-controls">
                            <!-- شريط التقدم -->
                            <div class="w-full bg-gray-600/70 h-2 rounded-full cursor-pointer mb-4 group progress-bar-draggable" id="progress-container" dir="ltr">
                                <div class="bg-blue-600 h-2 rounded-full relative transition-all duration-100" style="width: 0%" id="video-progress">
                                    <!-- نقطة السحب -->
                                    <div class="progress-thumb" id="progress-thumb"></div>
                                </div>
                            </div>
                                <!-- أدوات التحكم -->
                            <div class="flex items-center justify-between">

                                <!-- القسم الأيسر: باقي الأدوات -->
                                <div class="flex items-center space-x-4 space-x-reverse">


                                        <!-- زر إعدادات إضافية -->
                                    <div class="relative">
                                        <button id="more-options" class="text-white interactive-btn p-2 rounded-lg hover:bg-white/10 transition-all">
                                            <i class="fas fa-ellipsis-v text-lg"></i>
                                        </button>
                                        <div id="more-options-menu" class="absolute bottom-full mb-2 left-0 bg-black/90 backdrop-blur-sm rounded-xl p-2 hidden z-10 min-w-36 shadow-2xl border border-gray-700">
                                            <button id="mini-player" class="block text-white w-full text-right p-3 hover:bg-white/10 rounded-lg transition-all">المشغل المصغر</button>
                                            <button id="theater-mode" class="block text-white w-full text-right p-3 hover:bg-white/10 rounded-lg transition-all">وضع المسرح</button>
                                            <button id="download-video" class="block text-white w-full text-right p-3 hover:bg-white/10 rounded-lg transition-all">تحميل الفيديو</button>
                                        </div>
                                    </div>
                                    <!-- الوقت -->

                                    <!-- سرعة التشغيل -->
                                    <div class="relative">
                                        <button id="playback-speed" class="text-white text-sm interactive-btn p-2 rounded-lg hover:bg-white/10 transition-all">
                                            1.0x
                                        </button>
                                        <div id="speed-options" class="absolute bottom-full mb-2 left-0 bg-black/90 backdrop-blur-sm rounded-xl p-2 hidden z-10 min-w-24 shadow-2xl border border-gray-700">
                                            <button class="block text-white w-full text-right p-3 hover:bg-white/10 rounded-lg speed-option transition-all" data-speed="0.5">0.5x</button>
                                            <button class="block text-white w-full text-right p-3 hover:bg-white/10 rounded-lg speed-option transition-all" data-speed="0.75">0.75x</button>
                                            <button class="block text-white w-full text-right p-3 hover:bg-white/10 rounded-lg speed-option bg-blue-600/20" data-speed="1">1.0x</button>
                                            <button class="block text-white w-full text-right p-3 hover:bg-white/10 rounded-lg speed-option transition-all" data-speed="1.25">1.25x</button>
                                            <button class="block text-white w-full text-right p-3 hover:bg-white/10 rounded-lg speed-option transition-all" data-speed="1.5">1.5x</button>
                                            <button class="block text-white w-full text-right p-3 hover:bg-white/10 rounded-lg speed-option transition-all" data-speed="2">2.0x</button>
                                        </div>
                                    </div>

                                    <!-- زر الشاشة الكاملة -->
                                    <button id="fullscreen-button" class="text-white interactive-btn p-2 rounded-lg hover:bg-white/10 transition-all">
                                        <i class="fas fa-expand text-lg"></i>
                                    </button>
        
                                    <div class="text-white text-sm font-medium bg-black/30 px-3 py-1 rounded-full" id="time-display">00:00 / 00:00</div>


                                </div>

                                <!-- القسم الأيمن: Play / Pause + الصوت -->
                                <div class="flex items-center space-x-4 space-x-reverse">




        
                                    <!-- شريط مستوى الصوت -->
                                    <div class="flex items-center space-x-2">
                                        <div class="volume-slider hidden" id="volume-container" dir="ltr">
                                            <div class="volume-level" id="volume-level" style="width: 80%">
                                                <div class="volume-thumb" id="volume-thumb"></div>
                                            </div>
                                        </div>
                                    </div>
                                            <!-- زر كتم الصوت -->
                                    <button id="mute-button" class="text-white interactive-btn p-2 rounded-lg hover:bg-white/10 transition-all">
                                        <i class="fas fa-volume-up text-lg"></i>
                                    </button>
                                                <button id="skip-forward" class="text-white interactive-btn flex items-center p-2 rounded-lg hover:bg-white/10 transition-all">
                                        <span class="ml-1 text-sm">10s</span>
                                        <i class="fas fa-forward text-lg"></i>
                                    </button>
                                                    <!-- زر التشغيل والإيقاف -->
                                    <button id="video-play-pause" class="text-white interactive-btn p-2 rounded-full hover:bg-white/10 transition-all">
                                        <i class="fas fa-pause text-xl"></i>
                                    </button>
                                                    <!-- أزرار الانتقال 10 ثواني -->
                                    <button id="skip-backward" class="text-white interactive-btn flex items-center p-2 rounded-lg hover:bg-white/10 transition-all">
                                        <i class="fas fa-backward text-lg"></i>
                                        <span class="mr-1 text-sm">10s</span>
                                    </button>
                                </div>
                            </div>


                        </div>
                        
                        <!-- مؤشر التقدم السريع -->
                        <div id="skip-indicator" class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-black/80 backdrop-blur-sm text-white p-4 rounded-xl hidden z-10 shadow-2xl border border-gray-700">
                            <div class="flex items-center">
                                <i class="fas fa-forward ml-2"></i>
                                <span id="skip-time">+10s</span>
                            </div>
                        </div>
                        
                        <!-- مؤشر التحميل -->
                        <div id="loading-indicator" class="absolute inset-0 flex items-center justify-center bg-black/70 backdrop-blur-sm hidden">
                            <div class="text-white text-center">
                                <div class="w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mb-4 mx-auto"></div>
                                <p class="text-lg font-medium">جاري تحميل الفيديو...</p>
                            </div>
                        </div>
                        
                        <!-- عنوان الفيديو -->
                        <div class="absolute top-4 left-4 right-4">
                            <div class="bg-gradient-to-b from-black/70 to-transparent p-4 rounded-lg opacity-0 transition-all duration-300" id="video-title-overlay">
                                <h2 class="text-white font-bold text-lg" id="current-video-title">اختر محاضرة للبدء</h2>
                            </div>
                        </div>
                    </div>

                    <!-- معلومات المحاضرة -->
                    <div class="mt-6 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 transition-all duration-300 card-hover hidden" id="lecture-info-container">
                        <div class="flex justify-between items-start mb-4">
                            <h2 class="text-2xl font-bold text-gray-800 dark:text-white" id="lecture-title">اختر محاضرة للبدء</h2>
                            <div class="flex items-center space-x-2 space-x-reverse">
                                <button class="text-gray-500 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 interactive-btn p-2 rounded-lg" id="bookmark-btn">
                                    <i class="far fa-bookmark text-xl"></i>
                                </button>
                                <button class="text-gray-500 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 interactive-btn p-2 rounded-lg" id="notes-btn">
                                    <i class="far fa-sticky-note text-xl"></i>
                                </button>
                                <button class="text-gray-500 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 interactive-btn p-2 rounded-lg" id="resources-toggle">
                                    <i class="fas fa-paperclip text-xl"></i>
                                </button>
                            </div>
                        </div>

                        <div class="flex flex-wrap gap-4 mb-4" id="lecture-info">
                            <!-- سيتم ملؤها بالبيانات -->
                        </div>

                        <p class="text-gray-700 dark:text-gray-300 mb-6 text-lg leading-relaxed" id="lecture-description">
                            اختر محاضرة من القائمة الجانبية لبدء التعلم.
                        </p>

                        <!-- موارد المحاضرة -->
                        <div class="mb-6 bg-gray-50 dark:bg-gray-700/50 rounded-xl p-4 transition-all duration-300" id="lecture-resources" style="display: none;">
                            <h3 class="text-lg font-semibold text-gray-800 dark:text-white mb-3 flex items-center">
                                <i class="fas fa-paperclip ml-2"></i>
                                موارد المحاضرة
                            </h3>
                            <div class="space-y-3" id="resources-list">
                                <!-- سيتم ملؤها بالبيانات -->
                            </div>
                        </div>
                        
                        <!-- الملاحظات -->
                        <div class="mb-6 bg-yellow-50 dark:bg-yellow-900/20 rounded-xl p-4 transition-all duration-300 hidden" id="lecture-notes">
                            <h3 class="text-lg font-semibold text-gray-800 dark:text-white mb-3 flex items-center">
                                <i class="fas fa-sticky-note ml-2"></i>
                                ملاحظاتي
                            </h3>
                            <textarea class="w-full p-4 border border-yellow-200 dark:border-yellow-800 rounded-lg bg-white dark:bg-gray-800 text-gray-800 dark:text-white focus:ring-2 focus:ring-yellow-500 focus:border-transparent transition-all" rows="4" placeholder="اكتب ملاحظاتك هنا..."></textarea>
                            <div class="flex justify-between items-center mt-3">
                                <span class="text-sm text-gray-500 dark:text-gray-400">سيتم حفظ الملاحظات تلقائياً</span>
                                <button class="px-4 py-2 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 transition-all interactive-btn flex items-center">
                                    <i class="fas fa-save ml-2"></i>
                                    حفظ الملاحظات
                                </button>
                            </div>
                        </div>

                        <!-- التنقل بين المحاضرات -->
                        <div class="flex justify-between mt-8">
                            <button class="flex items-center px-5 py-3 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-white rounded-xl hover:bg-gray-200 dark:hover:bg-gray-600 transition-all interactive-btn" id="prev-lecture">
                                <i class="fas fa-arrow-right ml-2"></i>
                                المحاضرة السابقة
                            </button>
                            <button class="flex items-center px-5 py-3 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-all interactive-btn" id="next-lecture">
                                المحاضرة التالية
                                <i class="fas fa-arrow-left mr-2"></i>
                            </button>
                        </div>
                    </div>
<div class="mt-8 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 card-hover">
    <h3 class="font-bold text-gray-800 dark:text-white mb-4 flex items-center text-xl">
        <i class="fas fa-star ml-2 text-yellow-500"></i>
        تقييم الكورس
    </h3>

    <!-- ملخص التقييمات المحسن -->
    <div id="rating-summary" class="mb-6">
        <div class="rating-summary bg-gradient-to-br from-gray-50 to-blue-50 dark:from-gray-800 dark:to-blue-900/20 rounded-2xl p-6 border border-gray-100 dark:border-gray-700">
            <div class="flex flex-col md:flex-row items-center justify-between gap-6">
                <!-- متوسط التقييم -->
                <div class="text-center flex-1">
                    <div class="relative inline-block">
                        <div class="w-24 h-24 bg-gradient-to-br from-yellow-400 to-orange-500 rounded-full flex items-center justify-center mx-auto mb-3 shadow-lg">
                            <span id="average-rating" class="text-3xl font-bold text-white">0.0</span>
                        </div>
                        <div class="absolute -bottom-2 left-1/2 transform -translate-x-1/2 bg-white dark:bg-gray-800 px-3 py-1 rounded-full shadow-md border border-gray-200 dark:border-gray-700">
                            <div class="flex items-center" id="rating-stars">
                                <!-- النجوم سيتم ملؤها بالجافاسكريبت -->
                            </div>
                        </div>
                    </div>
                    <div class="mt-6 text-sm text-gray-500 dark:text-gray-400">
                        (<span id="total-ratings">0</span> تقييم)
                    </div>
                </div>
                
                <!-- توزيع التقييمات -->
                <div class="flex-1 w-full">
                    <h4 class="font-semibold text-gray-700 dark:text-gray-300 mb-4 text-center md:text-right">توزيع التقييمات</h4>
                    <div class="space-y-3" id="rating-distribution">
                        <!-- التوزيع سيتم ملؤه بالجافاسكريبت -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

                </div>
                <!-- القائمة الجانبية للمحاضرات -->
                <div class="lg:w-1/3">
                    <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden transition-all duration-300 card-hover">
                        <!-- رأس القائمة -->
                        <div class="bg-gradient-to-r from-blue-500 to-blue-600 p-5 text-white">
                            <h3 class="font-bold text-xl">محتوى الدورة</h3>
                            <div class="flex items-center mt-2 text-sm text-blue-100">
                                @{
                                    var hours = Model.Duration / 60;
                                    var minutes = Model.Duration % 60;
                                }

                                <span>
                                    @Model.Sections?.Sum(s => s.Lectures?.Count ?? 0) محاضرة • 
                                    @(hours > 0 ? $"{hours} ساعة " : "")
                                    @(minutes > 0 ? $"{minutes} دقيقة" : "")
                                </span>
                                <span class="mx-2">•</span>
                                <span id="sidebar-progress">@progressPercentage% مكتمل</span>
                            </div>
                        </div>

                        <!-- محتوى القائمة -->
                        <div class="overflow-y-auto max-h-screen" id="course-content">
                            @{
                                var sectionIndex = 0;
                                var lectureIndex = 0;
                            }
                            @if (Model.Sections != null && Model.Sections.Any())
                            {
                                foreach (var section in Model.Sections.OrderBy(s => s.Order))
                                {
                                    <div class="border-b border-gray-200 dark:border-gray-600 sidebar-section">
                                        <div class="flex justify-between items-center p-4 bg-white dark:bg-gray-800 cursor-pointer section-header hover:bg-gray-50 dark:hover:bg-gray-700 transition-all">
                                            <div class="flex items-center">
                                                <i class="fas fa-chevron-down text-gray-500 ml-2 section-icon transition-transform"></i>
                                                <h4 class="font-semibold text-gray-800 dark:text-white">@(section.Title)</h4>
                                            </div>
                                            <span class="text-sm text-gray-500 bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded-full">@(section.Lectures?.Count ?? 0) محاضرة</span>
                                        </div>

                                        <div class="pl-8 pr-4 pb-2 section-content">
                                            @if (section.Lectures != null && section.Lectures.Any())
                                            {
                                                foreach (var lecture in section.Lectures.OrderBy(l => l.Order))
                                                {
                                                    var isCompleted = lectureStatuses.ContainsKey(lecture.Id) && lectureStatuses[lecture.Id];
                                                    <div class="flex items-center p-3 rounded-xl hover:bg-gray-50 dark:hover:bg-gray-700 mb-2 lecture-item transition-all duration-200 interactive-btn menu-item @(isCompleted ? "completed" : "")" 
                                                         data-lecture-id="@lecture.Id"
                                                         data-section-index="@sectionIndex"
                                                         data-lecture-index="@lectureIndex"
                                                         data-video-url="@lecture.VideoUrl">
                                                        <div class="flex-shrink-0 w-10 h-10 flex items-center justify-center bg-gray-100 dark:bg-gray-700 rounded-full ml-3 transition-all @(isCompleted ? "completed-icon" : "")">
                                                            @if (lecture.ContentType?.ToLower() == "video")
                                                            {
                                                                <i class="fas fa-play text-gray-500 dark:text-gray-400 text-sm @(isCompleted ? "text-white" : "")"></i>
                                                            }
                                                            else if (lecture.ContentType?.ToLower() == "article")
                                                            {
                                                                <i class="fas fa-file-text text-gray-500 dark:text-gray-400 text-sm @(isCompleted ? "text-white" : "")"></i>
                                                            }
                                                            else
                                                            {
                                                                <i class="fas fa-question-circle text-gray-500 dark:text-gray-400 text-sm @(isCompleted ? "text-white" : "")"></i>
                                                            }
                                                        </div>
                                                        <div class="flex-1 min-w-0">
                                                            <p class="text-sm font-medium text-gray-800 dark:text-white truncate @(isCompleted ? "completed-text" : "")">@lecture.Title</p>
                                                            <p class="text-xs text-gray-500 dark:text-gray-400 @(isCompleted ? "completed-duration" : "")">@(lecture.Duration / 60) دقيقة</p>
                                                        </div>
                                                        <div class="flex-shrink-0">
                                                            <div class="w-4 h-4 border-2 border-gray-300 dark:border-gray-600 rounded-full lecture-status transition-all @(isCompleted ? "completed" : "")">
                                                                @if (isCompleted)
                                                                {
                                                                    <!-- سيتم إضافة علامة الصح عبر CSS -->
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                    lectureIndex++;
                                                }
                                            }
                                            else
                                            {
                                                <p class="text-gray-500 text-center py-2 text-sm">لا توجد محاضرات في هذا القسم</p>
                                            }
                                        </div>
                                    </div>
                                    sectionIndex++;
                                    lectureIndex = 0;
                                }
                            }
                            else
                            {
                                <p class="text-gray-500 text-center py-4">لا توجد أقسام في هذا الكورس</p>
                            }
                        </div>
                    </div>
                    
                    <div class="mt-6 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-5 card-hover">
                        <h3 class="font-bold text-gray-800 dark:text-white mb-4 flex items-center">
                            <i class="fas fa-bullseye ml-2"></i>
                            تقدمك في الدورة
                        </h3>

                        <!-- نسبة التقدم -->
                        <div class="mb-4">
                            <div class="flex items-center justify-between mb-2">
                                <span class="text-sm font-medium text-gray-600 dark:text-gray-300">التقدم الكلي</span>
                                <span id="progress-percentage" class="text-sm font-bold text-blue-600 dark:text-blue-400">
                                    @progressPercentage.ToString("0")% مكتمل
                                </span>
                            </div>
                            <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-3">
                                <div id="progress-bar" class="bg-blue-600 h-3 rounded-full transition-all duration-500" 
                                     style="width: @progressPercentage%"></div>
                            </div>
                        </div>

                        <!-- عدد المحاضرات -->
                        <div class="grid grid-cols-2 gap-4">
                            <div class="bg-green-50 dark:bg-green-900/20 p-4 rounded-xl text-center transition-all hover:shadow-md">
                                <p id="completed-lectures" class="text-2xl font-bold text-green-600 dark:text-green-400">
                                    @completedLectures
                                </p>
                                <p class="text-sm text-gray-600 dark:text-gray-300">محاضرة مكتملة</p>
                            </div>
                            <div class="bg-purple-50 dark:bg-purple-900/20 p-4 rounded-xl text-center transition-all hover:shadow-md">
                                <p class="text-2xl font-bold text-purple-600 dark:text-purple-400">
                                    @Model.Sections?.Sum(s => s.Lectures?.Count ?? 0)
                                </p>
                                <p class="text-sm text-gray-600 dark:text-gray-300">إجمالي المحاضرات</p>
                            </div>
                        </div>
                    </div>
                        <!-- رسالة عدم التأهل -->
<div class="mt-8 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 card-hover">
    <h3 class="font-bold text-gray-800 dark:text-white mb-4 flex items-center text-xl">
        <i class="fas fa-star ml-2 text-yellow-500"></i>
        تقييم الكورس
    </h3>
    <!-- رسالة عدم التأهل المحسنة -->
    <div id="rating-message" class="@(progressPercentage >= 80 ? "hidden" : "")">
        <div class="bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 
                    border border-blue-200 dark:border-blue-800 rounded-2xl p-6 text-center relative overflow-hidden">
            <!-- تأثير خلفي -->
            <div class="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-blue-500 to-indigo-500"></div>
            <div class="relative z-10">
                <div class="w-20 h-20 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg">
                    <i class="fas fa-trophy text-white text-2xl"></i>
                </div>
                <h4 class="text-xl font-bold text-blue-800 dark:text-blue-200 mb-2">
                    استمر في التعلم!
                </h4>
                <p class="text-blue-700 dark:text-blue-300 mb-4">
                    يمكنك تقييم هذا الكورس بعد إكمال 80% من المحتوى
                </p>
                <div class="flex items-center justify-center space-x-3 mb-3">
                    <span class="text-sm text-blue-600 dark:text-blue-400">التقدم الحالي</span>
                    <span class="text-lg font-bold text-blue-700 dark:text-blue-300">@progressPercentage%</span>
                </div>
                <div class="w-full bg-blue-200 dark:bg-blue-800 rounded-full h-3 mb-2 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-500 to-indigo-500 h-3 rounded-full transition-all duration-1000 relative progress-glow" 
                         style="width: @progressPercentage%">
                        <div class="absolute top-0 left-0 w-full h-full bg-gradient-to-r from-transparent to-white/30 animate-pulse"></div>
                    </div>
                </div>
                <p class="text-xs text-blue-600 dark:text-blue-400">
                    @completedLectures من @(Model.Sections?.Sum(s => s.Lectures?.Count ?? 0)) محاضرة مكتملة
                </p>
            </div>
        </div>
    </div>

    <!-- نموذج التقييم المحسن -->
    <div id="rating-form-container" class="@(progressPercentage < 80 ? "hidden" : "")">
        <!-- سيتم ملؤه بالجافاسكريبت -->
    </div>
</div>
                    <!-- زر العودة للأعلى -->
                    <div class="mt-6 flex justify-center">
                        <button id="scroll-to-top" class="p-3 bg-blue-600 text-white rounded-full shadow-lg floating-btn transition-all opacity-0">
                            <i class="fas fa-chevron-up"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal التقييم التلقائي -->
<div id="rating-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
    <div class="bg-white dark:bg-gray-800 rounded-2xl p-6 m-4 max-w-md w-full mx-auto">
        <div class="text-center">
            <div class="w-16 h-16 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mx-auto mb-4">
                <i class="fas fa-trophy text-green-600 dark:text-green-400 text-2xl"></i>
            </div>
            <h3 class="text-xl font-bold text-gray-800 dark:text-white mb-2">مبروك! لقد أكملت 80% من الكورس</h3>
            <p class="text-gray-600 dark:text-gray-300 mb-4">ساعدنا في تحسين تجربة التعلم بتقييمك للكورس</p>
            
            <div id="modal-rating-form">
                <!-- سيتم تحميل نموذج التقييم هنا -->
            </div>
            
            <button id="close-rating-modal" class="mt-4 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                ربما لاحقاً
            </button>
        </div>
    </div>
</div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
// بيانات الكورس من السيرفر
const courseData = {
    id: @Model.Id,
    title: "@Html.Raw(Model.Title.Replace("\"", "\\\""))",
    sections: @Html.Raw(Json.Serialize(Model.Sections?.OrderBy(s => s.Order).Select(s => new {
        id = s.Id,
        title = s.Title,
        order = s.Order,
        lectures = s.Lectures?.OrderBy(l => l.Order).Select(l => new {
            id = l.Id,
            title = l.Title,
            description = l.Description,
            videoUrl = l.VideoUrl,
            duration = l.Duration,
            contentType = l.ContentType,
            order = l.Order,
            resources = l.Resources
        })
    })))
};

// آخر محاضرة تم الوصول إليها
const lastAccessedLectureId = @(lastAccessedLectureId.HasValue ? lastAccessedLectureId.Value : 0);

document.addEventListener('DOMContentLoaded', function() {
    // عناصر DOM الرئيسية
    const video = document.getElementById('main-video');
    const videoSource = document.getElementById('video-source');
    const videoOverlay = document.getElementById('video-overlay');
    const playButton = document.getElementById('play-button');
    const videoPlayPause = document.getElementById('video-play-pause');
    const videoProgress = document.getElementById('video-progress');
    const progressContainer = document.getElementById('progress-container');
    const progressThumb = document.getElementById('progress-thumb');
    const timeDisplay = document.getElementById('time-display');
    const muteButton = document.getElementById('mute-button');
    const volumeContainer = document.getElementById('volume-container');
    const volumeLevel = document.getElementById('volume-level');
    const volumeThumb = document.getElementById('volume-thumb');
    const fullscreenButton = document.getElementById('fullscreen-button');
    const videoContainer = document.getElementById('video-container');
    const videoControls = document.getElementById('video-controls');
    const themeToggle = document.getElementById('theme-toggle');
    const bookmarkBtn = document.getElementById('bookmark-btn');
    const sectionHeaders = document.querySelectorAll('.section-header');
    const lectureItems = document.querySelectorAll('.lecture-item');
    const prevLectureBtn = document.getElementById('prev-lecture');
    const nextLectureBtn = document.getElementById('next-lecture');
    const lectureTitle = document.getElementById('lecture-title');
    const lectureDescription = document.getElementById('lecture-description');
    const lectureInfo = document.getElementById('lecture-info');
    const lectureResources = document.getElementById('lecture-resources');
    const resourcesList = document.getElementById('resources-list');
    const progressBar = document.getElementById('progress-bar');
    const progressPercentage = document.getElementById('progress-percentage');
    const sidebarProgress = document.getElementById('sidebar-progress');
    const notesBtn = document.getElementById('notes-btn');
    const lectureNotes = document.getElementById('lecture-notes');
    const skipBackward = document.getElementById('skip-backward');
    const skipForward = document.getElementById('skip-forward');
    const skipIndicator = document.getElementById('skip-indicator');
    const loadingIndicator = document.getElementById('loading-indicator');
    const playbackSpeed = document.getElementById('playback-speed');
    const speedOptions = document.getElementById('speed-options');
    const moreOptions = document.getElementById('more-options');
    const moreOptionsMenu = document.getElementById('more-options-menu');
    const theaterMode = document.getElementById('theater-mode');
    const miniPlayer = document.getElementById('mini-player');
    const downloadVideo = document.getElementById('download-video');
    const completedLectures = document.getElementById('completed-lectures');
    const resourcesToggle = document.getElementById('resources-toggle');
    const scrollToTop = document.getElementById('scroll-to-top');
    const lectureSelectionScreen = document.getElementById('lecture-selection-screen');
    const lectureInfoContainer = document.getElementById('lecture-info-container');
    const startFirstLectureBtn = document.getElementById('start-first-lecture');
    const startLastLectureBtn = document.getElementById('start-last-lecture');

    // حالة التطبيق
    let currentLectureId = null;
    let currentSectionIndex = 0;
    let currentLectureIndex = 0;
    let isVideoPlaying = false;
    let isVideoMuted = false;
    let isFullscreen = false;
    let isTheaterMode = false;
    let isMiniPlayer = false;
    let controlsTimeout;
    let totalWatchedTime = 0;
    let watchedTimeInterval;
    let completedLecturesCount = @(ViewBag.CompletedLectures ?? 0);
    let isDraggingProgress = false;
    let isDraggingVolume = false;

    // تهيئة الفيديو
    function initializeVideo() {
        if (!video) return;

        video.volume = 0.8;
        video.controls = false;
        video.playbackRate = 1.0;

        video.addEventListener('loadedmetadata', function() {
            updateProgress();
        });

        video.addEventListener('canplay', function() {
            if (loadingIndicator) loadingIndicator.classList.add('hidden');
        });

        video.addEventListener('waiting', function() {
            if (loadingIndicator) loadingIndicator.classList.remove('hidden');
        });

        video.addEventListener('playing', function() {
            if (loadingIndicator) loadingIndicator.classList.add('hidden');
            isVideoPlaying = true;
            if (videoPlayPause) videoPlayPause.innerHTML = '<i class="fas fa-pause text-xl"></i>';
            if (videoOverlay) {
                videoOverlay.style.opacity = '0';
                setTimeout(() => {
                    videoOverlay.style.display = 'none';
                }, 300);
            }
            
            startWatchingTime();
        });

        video.addEventListener('pause', function() {
            isVideoPlaying = false;
            if (videoPlayPause) videoPlayPause.innerHTML = '<i class="fas fa-play text-xl"></i>';
            stopWatchingTime();
        });

        video.addEventListener('ended', function() {
            videoEnded();
        });

        video.addEventListener('progress', function() {
            updateBufferProgress();
        });

        video.addEventListener('volumechange', function() {
            updateVolumeUI();
        });

        video.addEventListener('ratechange', function() {
            if (playbackSpeed) playbackSpeed.textContent = `${video.playbackRate.toFixed(1)}x`;
        });

        video.addEventListener('timeupdate', function() {
            if (!isDraggingProgress) {
                updateProgress();
            }
            // حفظ التقدم كل 30 ثانية
            if (video.currentTime > 0 && Math.floor(video.currentTime) % 30 === 0) {
                saveProgress(false);
            }
        });
    }

    // تحميل الفيديو
    function loadVideo(videoUrl, lectureTitle) {
        if (loadingIndicator) loadingIndicator.classList.remove('hidden');

        if (!videoUrl) {
            if (videoOverlay) {
                videoOverlay.querySelector('p').textContent = 'لا يوجد فيديو لهذه المحاضرة';
                videoOverlay.style.display = 'flex';
                videoOverlay.style.opacity = '1';
            }
            if (loadingIndicator) loadingIndicator.classList.add('hidden');
            return;
        }

        let fullVideoUrl = videoUrl.trim();
        if (fullVideoUrl.startsWith('/')) {
            fullVideoUrl = 'https://localhost:7292' + fullVideoUrl;
        }

        if (!fullVideoUrl.startsWith('http')) {
            if (videoOverlay) {
                videoOverlay.querySelector('p').textContent = 'رابط الفيديو غير صالح';
                videoOverlay.style.display = 'flex';
                videoOverlay.style.opacity = '1';
            }
            if (loadingIndicator) loadingIndicator.classList.add('hidden');
            return;
        }

        if (videoSource) {
            videoSource.src = fullVideoUrl;
            video.load();
        }

        if (videoOverlay) {
            videoOverlay.style.display = 'flex';
            setTimeout(() => {
                videoOverlay.style.opacity = '1';
            }, 10);
        }
    }

    // تحديد المحاضرة
    function selectLecture(lectureId, sectionIndex, lectureIndex) {
        currentLectureId = lectureId;
        currentSectionIndex = sectionIndex;
        currentLectureIndex = lectureIndex;

        const lecture = courseData.sections[sectionIndex].lectures[lectureIndex];
        
        // حفظ المحاضرة الحالية في localStorage
        localStorage.setItem(`last_lecture_${courseData.id}`, lectureId.toString());
        
        // حفظ المحاضرة الحالية في السيرفر
        saveCurrentLecture(lectureId);

        updateLectureUI();
        displayLectureData(lecture);
        loadVideo(lecture.videoUrl, lecture.title);
        
        // إظهار الفيديو وإخفاء شاشة الاختيار
        if (videoContainer) videoContainer.style.display = 'block';
        if (lectureInfoContainer) lectureInfoContainer.style.display = 'block';
        if (lectureSelectionScreen) lectureSelectionScreen.style.display = 'none';
        
        // إظهار تأثير الانتقال
        if (lectureTitle) {
            lectureTitle.classList.add('slide-in-right');
            setTimeout(() => {
                lectureTitle.classList.remove('slide-in-right');
            }, 300);
        }
    }

    // حفظ المحاضرة الحالية في السيرفر
    async function saveCurrentLecture(lectureId) {
        try {
            const response = await fetch('@Url.Action("SaveCurrentLecture", "Course", new { area = "Learner" })', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    courseId: courseData.id,
                    lectureId: lectureId
                })
            });

            if (!response.ok) {
                console.error('Failed to save current lecture');
            }
        } catch (error) {
            console.error('Error saving current lecture:', error);
        }
    }

    // عرض بيانات المحاضرة
    function displayLectureData(lecture) {
        if (lectureTitle) lectureTitle.textContent = lecture.title;
        if (lectureDescription) lectureDescription.textContent = lecture.description || 'لا يوجد وصف للمحاضرة';

        if (lectureInfo) {
            lectureInfo.innerHTML = `
                <span class="flex items-center text-sm text-gray-600 dark:text-gray-300">
                    <i class="fas fa-play-circle ml-2"></i>
                    ${Math.ceil(lecture.duration / 60)} دقيقة
                </span>
                <span class="flex items-center text-sm text-gray-600 dark:text-gray-300">
                    <i class="fas ${lecture.contentType === 'video' ? 'fa-video' : 'fa-file-text'} ml-2"></i>
                    ${lecture.contentType === 'video' ? 'مقال' : 'فيديو'}
                </span>
            `;
        }

        displayLectureResources(lecture.resources || []);
        loadLectureNotes(lecture.id);
        
        // التحقق من حالة المحاضرة
        checkLectureStatus(lecture.id);
    }

    // عرض موارد المحاضرة - التعديل لفتح في تبويب جديد
    function displayLectureResources(resources) {
        if (!resourcesList || !lectureResources) return;

        if (resources && resources.length > 0) {
            resourcesList.innerHTML = resources.map(resource => `
                <div class="flex justify-between items-center p-3 bg-gray-50 dark:bg-gray-700 rounded-lg interactive-btn">
                    <div class="flex items-center">
                        <i class="fas fa-file-${getFileIcon(resource.fileType)} text-${getFileColor(resource.fileType)}-500 text-xl ml-3"></i>
                        <span class="text-gray-700 dark:text-gray-300">${resource.fileName}</span>
                    </div>
                    <a href="${resource.fileUrl}" target="_blank" rel="noopener noreferrer" class="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 interactive-btn download-resource-btn" 
                       data-file-name="${resource.fileName}">
                        <i class="fas fa-download"></i>
                    </a>
                </div>
            `).join('');
            lectureResources.style.display = 'block';
        } else {
            lectureResources.style.display = 'none';
        }
    }

    function getFileIcon(fileType) {
        if (fileType.includes('pdf')) return 'pdf';
        if (fileType.includes('word') || fileType.includes('document')) return 'word';
        if (fileType.includes('zip') || fileType.includes('rar')) return 'archive';
        return 'alt';
    }

    function getFileColor(fileType) {
        if (fileType.includes('pdf')) return 'red';
        if (fileType.includes('word') || fileType.includes('document')) return 'blue';
        return 'gray';
    }

    // التنقل بين المحاضرات
    function goToPrevLecture() {
        if (currentLectureIndex > 0) {
            const prevLecture = courseData.sections[currentSectionIndex].lectures[currentLectureIndex - 1];
            selectLecture(prevLecture.id, currentSectionIndex, currentLectureIndex - 1);
        } else if (currentSectionIndex > 0) {
            const prevSection = courseData.sections[currentSectionIndex - 1];
            if (prevSection.lectures.length > 0) {
                const prevLecture = prevSection.lectures[prevSection.lectures.length - 1];
                selectLecture(prevLecture.id, currentSectionIndex - 1, prevSection.lectures.length - 1);
            }
        }
    }

    function goToNextLecture() {
        const currentSection = courseData.sections[currentSectionIndex];
        if (currentLectureIndex < currentSection.lectures.length - 1) {
            const nextLecture = currentSection.lectures[currentLectureIndex + 1];
            selectLecture(nextLecture.id, currentSectionIndex, currentLectureIndex + 1);
        } else if (currentSectionIndex < courseData.sections.length - 1) {
            const nextSection = courseData.sections[currentSectionIndex + 1];
            if (nextSection.lectures.length > 0) {
                const nextLecture = nextSection.lectures[0];
                selectLecture(nextLecture.id, currentSectionIndex + 1, 0);
            }
        }
    }

    // تحديث واجهة المحاضرات
    function updateLectureUI() {
        lectureItems.forEach(item => {
            // إزالة فئات العنصر النشط فقط (تبقى فئات المكتمل)
            item.classList.remove('current-lecture', 'bg-blue-50', 'dark:bg-blue-900/20', 'border-blue-500', 'border-2');
            item.classList.add('hover:bg-gray-50', 'dark:hover:bg-gray-700');
            
            const statusIcon = item.querySelector('.lecture-status');
            if (statusIcon) {
                // لا نزيل فئة completed من الأيقونة
                statusIcon.classList.remove('bg-green-500', 'border-green-500');
                if (!statusIcon.classList.contains('completed')) {
                    statusIcon.classList.add('border-gray-300', 'dark:border-gray-600');
                }
            }
        });

        const currentLectureItem = document.querySelector(`[data-lecture-id="${currentLectureId}"]`);
        if (currentLectureItem) {
            // إضافة فئات العنصر النشط
            currentLectureItem.classList.add('current-lecture', 'bg-blue-50', 'dark:bg-blue-900/20', 'border-blue-500', 'border-2');
            currentLectureItem.classList.remove('hover:bg-gray-50', 'dark:hover:bg-gray-700');
            
            const statusIcon = currentLectureItem.querySelector('.lecture-status');
            if (statusIcon) {
                statusIcon.classList.add('bg-green-500', 'border-green-500');
                statusIcon.classList.remove('border-gray-300', 'dark:border-gray-600');
            }
            
            // تمرير العرض إلى المحاضرة النشطة
            setTimeout(() => {
                currentLectureItem.scrollIntoView({ behavior: 'smooth', block: 'center' });
            }, 300);
        }

        updateNavigationButtons();
    }

    // تحديث أزرار التنقل
    function updateNavigationButtons() {
        if (!prevLectureBtn || !nextLectureBtn) return;

        const hasPrev = currentLectureIndex > 0 || currentSectionIndex > 0;
        const hasNext = currentLectureIndex < courseData.sections[currentSectionIndex].lectures.length - 1 || 
                      currentSectionIndex < courseData.sections.length - 1;

        prevLectureBtn.disabled = !hasPrev;
        nextLectureBtn.disabled = !hasNext;

        prevLectureBtn.classList.toggle('opacity-50', !hasPrev);
        nextLectureBtn.classList.toggle('opacity-50', !hasNext);
    }

    // وظائف الفيديو المحسنة مع التحكم بالسحب
    function playVideo() {
        if (video && videoSource && video.readyState >= 2) {
            video.play().then(() => {
                isVideoPlaying = true;
                if (videoOverlay) {
                    videoOverlay.style.opacity = '0';
                    setTimeout(() => {
                        videoOverlay.style.display = 'none';
                    }, 300);
                }
                if (videoPlayPause) videoPlayPause.innerHTML = '<i class="fas fa-pause text-xl"></i>';
                
                if (videoContainer) videoContainer.classList.add('video-playing');
            }).catch(error => {
                if (videoOverlay) {
                    videoOverlay.querySelector('p').textContent = 'خطأ في تشغيل الفيديو. تأكد من اتصال الإنترنت وحاول مرة أخرى.';
                    videoOverlay.style.display = 'flex';
                    videoOverlay.style.opacity = '1';
                }
            });
        } else {
            if (videoOverlay) {
                videoOverlay.querySelector('p').textContent = 'الفيديو غير متوفر أو جاري التحميل...';
            }
        }
    }

    function togglePlayPause() {
        if (video && videoSource) {
            if (isVideoPlaying) {
                video.pause();
                if (videoPlayPause) videoPlayPause.innerHTML = '<i class="fas fa-play text-xl"></i>';
                isVideoPlaying = false;
            } else {
                playVideo();
            }
        }
    }

    function toggleMute() {
        if (video && videoSource) {
            isVideoMuted = !isVideoMuted;
            video.muted = isVideoMuted;
            if (muteButton) {
                muteButton.innerHTML = isVideoMuted ?
                    '<i class="fas fa-volume-mute text-lg"></i>' :
                    '<i class="fas fa-volume-up text-lg"></i>';
            }
            
            if (volumeContainer) {
                if (isVideoMuted) {
                    volumeContainer.classList.add('hidden');
                } else {
                    volumeContainer.classList.remove('hidden');
                }
            }
        }
    }

    function toggleFullscreen() {
        if (!document.fullscreenElement) {
            if (videoContainer.requestFullscreen) {
                videoContainer.requestFullscreen();
            }
            if (fullscreenButton) fullscreenButton.innerHTML = '<i class="fas fa-compress text-lg"></i>';
            isFullscreen = true;
        } else {
            if (document.exitFullscreen) {
                document.exitFullscreen();
            }
            if (fullscreenButton) fullscreenButton.innerHTML = '<i class="fas fa-expand text-lg"></i>';
            isFullscreen = false;
        }
    }

    // وظائف السحب لشريط التقدم
    function startProgressDrag(e) {
        e.preventDefault();
        isDraggingProgress = true;
        document.addEventListener('mousemove', dragProgress);
        document.addEventListener('mouseup', stopProgressDrag);
        document.addEventListener('touchmove', dragProgress);
        document.addEventListener('touchend', stopProgressDrag);
        seekVideo(e);
    }

    function dragProgress(e) {
        if (!isDraggingProgress) return;
        seekVideo(e);
    }

    function stopProgressDrag() {
        isDraggingProgress = false;
        document.removeEventListener('mousemove', dragProgress);
        document.removeEventListener('mouseup', stopProgressDrag);
        document.removeEventListener('touchmove', dragProgress);
        document.removeEventListener('touchend', stopProgressDrag);
    }

    function seekVideo(e) {
        if (video && videoSource && video.duration) {
            const rect = progressContainer.getBoundingClientRect();
            const clientX = e.type.includes('touch') ? e.touches[0].clientX : e.clientX;
            const percent = Math.max(0, Math.min(1, (clientX - rect.left) / rect.width));
            video.currentTime = percent * video.duration;
            updateProgress();
        }
    }

    // وظائف السحب لشريط الصوت
    function startVolumeDrag(e) {
        e.preventDefault();
        e.stopPropagation();
        isDraggingVolume = true;
        document.addEventListener('mousemove', dragVolume);
        document.addEventListener('mouseup', stopVolumeDrag);
        setVolume(e);
    }

    function dragVolume(e) {
        if (!isDraggingVolume) return;
        setVolume(e);
    }

    function stopVolumeDrag() {
        isDraggingVolume = false;
        document.removeEventListener('mousemove', dragVolume);
        document.removeEventListener('mouseup', stopVolumeDrag);
    }

    function setVolume(e) {
        if (video) {
            const rect = volumeContainer.getBoundingClientRect();
            const clientX = e.type.includes('touch') ? e.touches[0].clientX : e.clientX;
            const percent = Math.max(0, Math.min(1, (clientX - rect.left) / rect.width));
            video.volume = percent;
            updateVolumeUI();
        }
    }

    function updateProgress() {
        if (video && videoSource && video.duration && !isNaN(video.duration)) {
            const percent = (video.currentTime / video.duration) * 100;
            if (videoProgress) videoProgress.style.width = `${percent}%`;

            const currentMinutes = Math.floor(video.currentTime / 60);
            const currentSeconds = Math.floor(video.currentTime % 60);
            const durationMinutes = Math.floor(video.duration / 60);
            const durationSeconds = Math.floor(video.duration % 60);

            if (timeDisplay) {
                timeDisplay.textContent =
                    `${currentMinutes.toString().padStart(2, '0')}:${currentSeconds.toString().padStart(2, '0')} / ${durationMinutes.toString().padStart(2, '0')}:${durationSeconds.toString().padStart(2, '0')}`;
            }
        } else {
            if (timeDisplay) timeDisplay.textContent = '00:00 / 00:00';
        }
    }
    
    function updateBufferProgress() {
        // يمكن إضافة دالة لتحديث شريط التحميل إذا كان موجوداً
    }
    
    function updateVolumeUI() {
        if (video && volumeLevel) {
            const volumePercent = video.volume * 100;
            volumeLevel.style.width = `${volumePercent}%`;
        }
    }

    function videoEnded() {
        isVideoPlaying = false;
        if (videoPlayPause) videoPlayPause.innerHTML = '<i class="fas fa-play text-xl"></i>';
        if (videoOverlay) {
            videoOverlay.style.display = 'flex';
            setTimeout(() => {
                videoOverlay.style.opacity = '1';
            }, 10);
            videoOverlay.querySelector('p').textContent = 'انقر لإعادة التشغيل';
        }
        
        // حفظ التقدم عند انتهاء الفيديو
        if (currentLectureId) {
            saveProgress(true);
        }
        
        if (videoContainer) videoContainer.classList.remove('video-playing');
    }

    // وظائف الانتقال 10 ثواني
    function skipBackward10s() {
        if (video && videoSource) {
            video.currentTime = Math.max(0, video.currentTime - 10);
            updateProgress();
            showSkipIndicator('-10s');
        }
    }
    
    function skipForward10s() {
        if (video && videoSource) {
            video.currentTime = Math.min(video.duration, video.currentTime + 10);
            updateProgress();
            showSkipIndicator('+10s');
        }
    }
    
    function showSkipIndicator(text) {
        if (!skipIndicator) return;
        
        skipIndicator.querySelector('#skip-time').textContent = text;
        skipIndicator.classList.remove('hidden');
        
        setTimeout(() => {
            skipIndicator.classList.add('hidden');
        }, 1000);
    }
    // وظائف سرعة التشغيل
    function changePlaybackSpeed(speed) {
        if (video) {
            video.playbackRate = parseFloat(speed);
            if (playbackSpeed) playbackSpeed.textContent = `${speed}x`;
            if (speedOptions) speedOptions.classList.add('hidden');
        }
            }
        
    // وظائف إضافية للفيديو
    function toggleTheaterMode() {
        if (!videoContainer) return;
        
        if (isTheaterMode) {
            videoContainer.classList.remove('fixed', 'top-0', 'left-0', 'w-full', 'h-full', 'z-50', 'rounded-none');
            document.body.classList.remove('overflow-hidden');
            isTheaterMode = false;
        } else {
            videoContainer.classList.add('fixed', 'top-0', 'left-0', 'w-full', 'h-full', 'z-50', 'rounded-none');
            document.body.classList.add('overflow-hidden');
            isTheaterMode = true;
        }
        if (moreOptionsMenu) moreOptionsMenu.classList.add('hidden');
    }
    
    function toggleMiniPlayer() {
        if (!videoContainer) return;
        
        if (isMiniPlayer) {
            videoContainer.classList.remove('fixed', 'bottom-4', 'right-4', 'w-80', 'h-48', 'z-50', 'shadow-2xl');
            isMiniPlayer = false;
        } else {
            videoContainer.classList.add('fixed', 'bottom-4', 'right-4', 'w-80', 'h-48', 'z-50', 'shadow-2xl');
            isMiniPlayer = true;
        }
        if (moreOptionsMenu) moreOptionsMenu.classList.add('hidden');
    }
    
    function downloadCurrentVideo() {
        if (videoSource && videoSource.src) {
            const a = document.createElement('a');
            a.href = videoSource.src;
            a.download = `lecture-${currentLectureId}.mp4`;
            a.target = '_blank';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        } else {
            showNotification('لا يمكن تحميل الفيديو', 'error');
        }
        if (moreOptionsMenu) moreOptionsMenu.classList.add('hidden');
    }
    
    // إحصائيات المشاهدة
    function startWatchingTime() {
        watchedTimeInterval = setInterval(() => {
            totalWatchedTime++;
        }, 1000);
    }
    
    function stopWatchingTime() {
        if (watchedTimeInterval) {
            clearInterval(watchedTimeInterval);
        }
    }
    
    // وظائف الملاحظات
    function toggleNotes() {
        if (!lectureNotes || !notesBtn) return;
        
        if (lectureNotes.classList.contains('hidden')) {
            lectureNotes.classList.remove('hidden');
            notesBtn.innerHTML = '<i class="fas fa-sticky-note text-xl"></i>';
        } else {
            lectureNotes.classList.add('hidden');
            notesBtn.innerHTML = '<i class="far fa-sticky-note text-xl"></i>';
        }
    }
    
    function loadLectureNotes(lectureId) {
        if (!lectureNotes) return;
        
        const savedNotes = localStorage.getItem(`lecture_${lectureId}_notes`);
        if (savedNotes) {
            lectureNotes.querySelector('textarea').value = savedNotes;
        } else {
            lectureNotes.querySelector('textarea').value = '';
        }
    }
    
    function saveLectureNotes(lectureId) {
        if (!lectureNotes) return;
        
        const notes = lectureNotes.querySelector('textarea').value;
        localStorage.setItem(`lecture_${lectureId}_notes`, notes);
        showNotification('تم حفظ الملاحظات بنجاح', 'success');
    }

    // حفظ التقدم
    async function saveProgress(isCompleted = false) {
        try {
            console.log('Saving progress:', { 
                courseId: courseData.id, 
                lectureId: currentLectureId, 
                isCompleted: isCompleted 
            });

            const response = await fetch('@Url.Action("SaveProgress", "Course", new { area = "Learner" })', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    courseId: courseData.id,
                    lectureId: currentLectureId,
                    isCompleted: isCompleted
                })
            });

            console.log('Save progress response status:', response.status);

            if (response.ok) {
                const result = await response.json();
                console.log('Save progress result:', result);
                
                if (result.success) {
                    // تحديث واجهة المستخدم
                    updateLectureStatus(currentLectureId, isCompleted);
                    
                    // تحديث شريط التقدم
                    if (progressBar) {
                        progressBar.style.width = `${result.progressPercentage}%`;
                    }
                    if (progressPercentage) {
                        progressPercentage.textContent = `${Math.round(result.progressPercentage)}% مكتمل`;
                    }
                    if (completedLectures) {
                        completedLectures.textContent = result.completedLectures;
                    }
                    if (sidebarProgress) {
                        sidebarProgress.textContent = `${Math.round(result.progressPercentage)}% مكتمل`;
                    }
                    console.log('Progress saved successfully');
                    return true;
                } else {
                    showNotification(result.message || 'فشل في حفظ التقدم', 'error');
                }
            } else {
                const errorText = await response.text();
                console.error('Save progress failed:', errorText);
                showNotification('فشل في حفظ التقدم', 'error');
            }
        } catch (error) {
            console.error('Error saving progress:', error);
            showNotification('حدث خطأ أثناء حفظ التقدم', 'error');
        }
        return false;
    }

    // التحقق من حالة المحاضرة
    async function checkLectureStatus(lectureId) {
        try {
            const response = await fetch(`@Url.Action("GetLectureStatus", "Course", new { area = "Learner" })?courseId=${courseData.id}&lectureId=${lectureId}`);
            if (response.ok) {
                const result = await response.json();
                if (result.success) {
                    updateLectureStatus(lectureId, result.isCompleted);
                    return result.isCompleted;
                }
            }
            return false;
        } catch (error) {
            console.error('Error checking lecture status:', error);
            return false;
        }
    }

    // تحديث واجهة التقدم
    async function updateProgressUI() {
        try {
            const response = await fetch(`@Url.Action("GetCourseProgress", "Course", new { area = "Learner" })?courseId=${courseData.id}`);
            if (response.ok) {
                const result = await response.json();
                if (result.success) {
                    const progress = result.progress;
                    
                    // تحديث شريط التقدم في الـ header
                    const headerProgressBar = document.querySelector('.progress-bar');
                    const headerProgressText = document.querySelector('.progress-percentage');
                    
                    if (headerProgressBar && headerProgressText) {
                        headerProgressBar.style.width = `${progress.progressPercentage}%`;
                        headerProgressText.textContent = `${Math.round(progress.progressPercentage)}% مكتمل`;
                    }
                    
                    // تحديث شريط التقدم في الـ sidebar
                    if (sidebarProgress) {
                        sidebarProgress.textContent = `${Math.round(progress.progressPercentage)}% مكتمل`;
                    }
                    
                    // تحديث الإحصائيات
                    completedLecturesCount = progress.completedLectures;
                    if (completedLectures) {
                        completedLectures.textContent = completedLecturesCount;
                    }
                    
                    // تحديث شريط التقدم الرئيسي
                    if (progressBar) {
                        progressBar.style.width = `${progress.progressPercentage}%`;
                    }
                    if (progressPercentage) {
                        progressPercentage.textContent = `${Math.round(progress.progressPercentage)}% مكتمل`;
                    }
                        if (progressPercentage >= 80) {
                        setTimeout(showRatingModal, 1000); // تأخير 1 ثانية
                    }
                }
            }
        } catch (error) {
            console.error('Error updating progress UI:', error);
        }
    }

    // تحديث حالة المحاضرة في الواجهة
    function updateLectureStatus(lectureId, isCompleted) {
        const lectureItem = document.querySelector(`[data-lecture-id="${lectureId}"]`);
        if (lectureItem) {
            // تحديث فئة المحاضرة المكتملة
            if (isCompleted) {
                lectureItem.classList.add('completed');
                
                // تحديث أيقونة المحاضرة
                const lectureIcon = lectureItem.querySelector('.flex-shrink-0');
                if (lectureIcon) {
                    lectureIcon.classList.add('completed-icon');
                    lectureIcon.style.background = 'linear-gradient(135deg, #22c55e, #16a34a)';
                }
                
                // تحديث الأيقونات داخل الدائرة
                const icon = lectureItem.querySelector('.flex-shrink-0 i');
                if (icon) {
                    icon.classList.add('text-white');
                    icon.classList.remove('text-gray-500', 'dark:text-gray-400');
                }
                
                // تحديث النص
                const title = lectureItem.querySelector('.text-sm');
                const duration = lectureItem.querySelector('.text-xs');
                if (title) title.classList.add('completed-text');
                if (duration) duration.classList.add('completed-duration');
                
            } else {
                lectureItem.classList.remove('completed');
                
                // إعادة الأيقونة إلى حالتها الأصلية
                const lectureIcon = lectureItem.querySelector('.flex-shrink-0');
                if (lectureIcon) {
                    lectureIcon.classList.remove('completed-icon');
                    lectureIcon.style.background = '';
                }
                
                // إعادة الأيقونات إلى حالتها الأصلية
                const icon = lectureItem.querySelector('.flex-shrink-0 i');
                if (icon) {
                    icon.classList.remove('text-white');
                    icon.classList.add('text-gray-500', 'dark:text-gray-400');
                }
                
                // إعادة النص إلى حالته الأصلية
                const title = lectureItem.querySelector('.text-sm');
                const duration = lectureItem.querySelector('.text-xs');
                if (title) title.classList.remove('completed-text');
                if (duration) duration.classList.remove('completed-duration');
            }

            const statusIcon = lectureItem.querySelector('.lecture-status');
            if (statusIcon) {
                if (isCompleted) {
                    statusIcon.classList.add('completed', 'bg-green-500', 'border-green-500');
                    statusIcon.classList.remove('border-gray-300', 'dark:border-gray-600');
                    statusIcon.innerHTML = '';
                } else {
                    statusIcon.classList.remove('completed', 'bg-green-500', 'border-green-500');
                    statusIcon.classList.add('border-gray-300', 'dark:border-gray-600');
                    statusIcon.innerHTML = '';
                }
            }
        }
    }

    // التبديل بين إكمال المحاضرة
    async function toggleLectureCompletion(courseId, lectureId) {
        try {
            console.log('Toggling lecture completion:', { courseId, lectureId });

            const response = await fetch('@Url.Action("ToggleLectureCompletion", "Course", new { area = "Learner" })', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    courseId: courseId,
                    lectureId: lectureId
                })
            });

            console.log('Response status:', response.status);

            if (response.ok) {
                const result = await response.json();
                console.log('Toggle result:', result);
                
                if (result.success) {
                    // تحديث واجهة المستخدم
                    updateLectureStatus(lectureId, result.isCompleted);
                    
                    // تحديث شريط التقدم
                    if (progressBar) {
                        progressBar.style.width = `${result.progressPercentage}%`;
                    }
                    if (progressPercentage) {
                        progressPercentage.textContent = `${Math.round(result.progressPercentage)}% مكتمل`;
                    }
                    if (completedLectures) {
                        completedLectures.textContent = result.completedLectures;
                    }
                    if (sidebarProgress) {
                        sidebarProgress.textContent = `${Math.round(result.progressPercentage)}% مكتمل`;
                    }
                    
                    showNotification(result.isCompleted ? 'تم إكمال المحاضرة بنجاح' : 'تم إلغاء إكمال المحاضرة', 'success');
                    return result.isCompleted;
                } else {
                    showNotification(result.message || 'فشل في تحديث حالة المحاضرة', 'error');
                }
            } else {
                const errorText = await response.text();
                console.error('Toggle failed:', errorText);
                showNotification('فشل في تحديث حالة المحاضرة', 'error');
            }
        } catch (error) {
            console.error('Error toggling lecture completion:', error);
            showNotification('حدث خطأ أثناء تحديث حالة المحاضرة', 'error');
        }
        return false;
    }

    // وظائف الواجهة
    function toggleBookmark() {
        if (!bookmarkBtn || !currentLectureId) return;
        
        const icon = bookmarkBtn.querySelector('i');
        if (icon.classList.contains('far')) {
            icon.classList.replace('far', 'fas');
            localStorage.setItem(`lecture_${currentLectureId}_bookmarked`, 'true');
            showNotification('تم إضافة المحاضرة إلى المفضلة', 'success');
        } else {
            icon.classList.replace('fas', 'far');
            localStorage.setItem(`lecture_${currentLectureId}_bookmarked`, 'false');
            showNotification('تم إزالة المحاضرة من المفضلة', 'info');
        }
    }

    function toggleSection(e) {
        const sectionContent = this.nextElementSibling;
        const icon = this.querySelector('.section-icon');

        if (sectionContent.style.display === 'none' || !sectionContent.style.display) {
            sectionContent.style.display = 'block';
            icon.classList.remove('fa-chevron-left');
            icon.classList.add('fa-chevron-down');
        } else {
            sectionContent.style.display = 'none';
            icon.classList.remove('fa-chevron-down');
            icon.classList.add('fa-chevron-left');
        }
    }

    function toggleResources() {
        if (!lectureResources) return;
        
        if (lectureResources.style.display === 'none' || !lectureResources.style.display) {
            lectureResources.style.display = 'block';
            if (resourcesToggle) resourcesToggle.innerHTML = '<i class="fas fa-paperclip text-xl text-blue-600"></i>';
        } else {
            lectureResources.style.display = 'none';
            if (resourcesToggle) resourcesToggle.innerHTML = '<i class="fas fa-paperclip text-xl"></i>';
        }
    }

    // استخدام نظام الرسائل من الـ Layout
    function showNotification(message, type = 'info') {
        switch (type) {
            case 'success':
                window.showSuccess(message);
                break;
            case 'error':
                window.showError(message);
                break;
            case 'warning':
                window.showWarning(message);
                break;
            default:
                window.showInfo(message);
        }
    }

    // تحميل البيانات المحفوظة
    function loadSavedData() {
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme === 'dark') {
            document.documentElement.classList.add('dark');
            if (themeToggle) themeToggle.innerHTML = '<i class="fas fa-sun"></i>';
        }

        // فتح جميع الأقسام
        document.querySelectorAll('.section-content').forEach(content => {
            content.style.display = 'block';
        });

        // تحميل حالة الإشارات المرجعية
        if (currentLectureId && bookmarkBtn) {
            const isBookmarked = localStorage.getItem(`lecture_${currentLectureId}_bookmarked`) === 'true';
            const icon = bookmarkBtn.querySelector('i');
            if (isBookmarked) {
                icon.classList.replace('far', 'fas');
            }
        }

        initializeVideo();
    }

    // تحديد المحاضرة الأولى
    function selectFirstLecture() {
        if (courseData.sections.length > 0 && courseData.sections[0].lectures.length > 0) {
            const firstLecture = courseData.sections[0].lectures[0];
            selectLecture(firstLecture.id, 0, 0);
        }
    }

    // تحديد المحاضرة الأخيرة التي تم الوصول إليها
    function selectLastAccessedLecture() {
        // البحث عن المحاضرة المخزنة محلياً
        const localLastLectureId = localStorage.getItem(`last_lecture_${courseData.id}`);
        
        // استخدام المحاضرة الأخيرة من السيرفر إذا كانت متاحة، وإلا استخدم المحلية
        const targetLectureId = lastAccessedLectureId > 0 ? lastAccessedLectureId : (localLastLectureId ? parseInt(localLastLectureId) : null);
        
        if (targetLectureId) {
            let found = false;
            courseData.sections.forEach((section, sectionIndex) => {
                section.lectures.forEach((lecture, lectureIndex) => {
                    if (lecture.id === targetLectureId) {
                        selectLecture(lecture.id, sectionIndex, lectureIndex);
                        found = true;
                    }
                });
            });
            
            if (!found) {
                selectFirstLecture();
            }
        } else {
            selectFirstLecture();
        }
    }

    // إضافة الأحداث
    function addEventListeners() {
        // أحداث شاشة الاختيار
        if (startFirstLectureBtn) {
            startFirstLectureBtn.addEventListener('click', selectFirstLecture);
        }
        
        if (startLastLectureBtn) {
            startLastLectureBtn.addEventListener('click', selectLastAccessedLecture);
        }

        // أحداث الفيديو الأساسية
        if (playButton) playButton.addEventListener('click', playVideo);
        if (videoOverlay) videoOverlay.addEventListener('click', playVideo);
        if (videoPlayPause) videoPlayPause.addEventListener('click', togglePlayPause);
        if (video) video.addEventListener('click', togglePlayPause);
        if (muteButton) muteButton.addEventListener('click', toggleMute);
        if (fullscreenButton) fullscreenButton.addEventListener('click', toggleFullscreen);
        
        // أحداث السحب لشريط التقدم
        if (progressContainer) {
            progressContainer.addEventListener('click', seekVideo);
            progressContainer.addEventListener('mousedown', startProgressDrag);
            progressContainer.addEventListener('touchstart', startProgressDrag);
        }
        
        if (progressThumb) {
            progressThumb.addEventListener('mousedown', startProgressDrag);
            progressThumb.addEventListener('touchstart', startProgressDrag);
        }

        if (videoContainer) {
            videoContainer.addEventListener('mousemove', showVideoControls);
            videoContainer.addEventListener('mouseleave', hideVideoControls);
        }
        
        // أحداث التحكم في الصوت
        if (muteButton) {
            muteButton.addEventListener('mouseenter', function() {
                if (!isVideoMuted && volumeContainer) {
                    volumeContainer.classList.remove('hidden');
                }
            });
            
            muteButton.addEventListener('click', function() {
                if (!isVideoMuted && volumeContainer) {
                    setTimeout(() => {
                        volumeContainer.classList.remove('hidden');
                    }, 100);
                }
            });
        }
        
        if (volumeContainer) {
            volumeContainer.addEventListener('mouseleave', function() {
                if (!isDraggingVolume) {
                    volumeContainer.classList.add('hidden');
                }
            });
            
            volumeContainer.addEventListener('mousedown', startVolumeDrag);
            volumeContainer.addEventListener('touchstart', startVolumeDrag);
        }
        
        // أحداث الانتقال 10 ثواني
        if (skipBackward) skipBackward.addEventListener('click', skipBackward10s);
        if (skipForward) skipForward.addEventListener('click', skipForward10s);
        
        // أحداث سرعة التشغيل
        if (playbackSpeed) {
            playbackSpeed.addEventListener('click', function() {
                if (speedOptions) speedOptions.classList.toggle('hidden');
            });
        }
        
        document.querySelectorAll('.speed-option').forEach(option => {
            option.addEventListener('click', function() {
                changePlaybackSpeed(this.getAttribute('data-speed'));
            });
        });
        
        // أحداث القائمة الإضافية
        if (moreOptions) {
            moreOptions.addEventListener('click', function() {
                if (moreOptionsMenu) moreOptionsMenu.classList.toggle('hidden');
            });
        }
        
        if (theaterMode) theaterMode.addEventListener('click', toggleTheaterMode);
        if (miniPlayer) miniPlayer.addEventListener('click', toggleMiniPlayer);
        if (downloadVideo) downloadVideo.addEventListener('click', downloadCurrentVideo);
        
        // أحداث أخرى
        if (bookmarkBtn) bookmarkBtn.addEventListener('click', toggleBookmark);
        if (notesBtn) notesBtn.addEventListener('click', toggleNotes);
        if (prevLectureBtn) prevLectureBtn.addEventListener('click', goToPrevLecture);
        if (nextLectureBtn) nextLectureBtn.addEventListener('click', goToNextLecture);
        if (resourcesToggle) resourcesToggle.addEventListener('click', toggleResources);
        
        // حدث حفظ الملاحظات
        const saveNotesBtn = lectureNotes?.querySelector('button');
        if (saveNotesBtn) {
            saveNotesBtn.addEventListener('click', function() {
                saveLectureNotes(currentLectureId);
            });
        }

        // أحداث الأقسام والمحاضرات
        sectionHeaders.forEach(header => {
            header.addEventListener('click', toggleSection);
        });

        lectureItems.forEach(item => {
            item.addEventListener('click', function() {
                const lectureId = parseInt(this.getAttribute('data-lecture-id'));
                const sectionIndex = parseInt(this.getAttribute('data-section-index'));
                const lectureIndex = parseInt(this.getAttribute('data-lecture-index'));
                selectLecture(lectureId, sectionIndex, lectureIndex);
            });

            // النقر على أيقونة الحالة لتغيير حالة الإكمال
            const statusIcon = item.querySelector('.lecture-status');
            if (statusIcon) {
                statusIcon.addEventListener('click', async function(e) {
                    e.stopPropagation();
                    const lectureId = parseInt(item.getAttribute('data-lecture-id'));
                    const courseId = @Model.Id;
                    
                    console.log('Status icon clicked - CourseId:', courseId, 'LectureId:', lectureId);
                    
                    await toggleLectureCompletion(courseId, lectureId);
                });
            }
        });

        // تحديث حالة جميع المحاضرات عند التحميل
        function initializeLectureStatuses() {
            const statuses = @Html.Raw(Json.Serialize(lectureStatuses));
            lectureItems.forEach(item => {
                const lectureId = parseInt(item.getAttribute('data-lecture-id'));
                const isCompleted = statuses[lectureId.toString()] || false;
                if (isCompleted) {
                    updateLectureStatus(lectureId, true);
                }
            });
        }

        initializeLectureStatuses();

        // إغلاق القوائم المنسدلة عند النقر خارجها
        document.addEventListener('click', function(e) {
            if (speedOptions && !speedOptions.contains(e.target) && e.target !== playbackSpeed) {
                speedOptions.classList.add('hidden');
            }
            
            if (moreOptionsMenu && !moreOptionsMenu.contains(e.target) && e.target !== moreOptions) {
                moreOptionsMenu.classList.add('hidden');
            }
        });

        // زر العودة للأعلى
        if (scrollToTop) {
            window.addEventListener('scroll', function() {
                if (window.pageYOffset > 300) {
                    scrollToTop.classList.remove('opacity-0');
                } else {
                    scrollToTop.classList.add('opacity-0');
                }
            });

            scrollToTop.addEventListener('click', function() {
                window.scrollTo({ top: 0, behavior: 'smooth' });
            });
        }

        // منع إغلاق القوائم عند النقر داخلها
        if (speedOptions) {
            speedOptions.addEventListener('click', function(e) {
                e.stopPropagation();
            });
        }

        if (moreOptionsMenu) {
            moreOptionsMenu.addEventListener('click', function(e) {
                e.stopPropagation();
            });
        }
    }
    
    // وظائف التحكم في ظهور عناصر التحكم
    function showVideoControls() {
        if (videoControls) videoControls.style.opacity = '1';
        clearTimeout(controlsTimeout);
        controlsTimeout = setTimeout(hideVideoControls, 3000);
    }

    function hideVideoControls() {
        if (isVideoPlaying && videoControls && !isDraggingProgress && !isDraggingVolume) {
            videoControls.style.opacity = '0';
        }
    }
    
function initializeApp() {
    loadSavedData();
    addEventListeners();
    loadRatingSystem();

        // التحقق مما إذا كان هناك محاضرة محددة مسبقاً
        const urlParams = new URLSearchParams(window.location.search);
        const lectureIdFromUrl = urlParams.get('lectureId');
        
        if (lectureIdFromUrl) {
            // البحث عن المحاضرة من الرابط
            let found = false;
            courseData.sections.forEach((section, sectionIndex) => {
                section.lectures.forEach((lecture, lectureIndex) => {
                    if (lecture.id == lectureIdFromUrl) {
                        selectLecture(lecture.id, sectionIndex, lectureIndex);
                        found = true;
                    }
                });
            });
            
            if (!found) {
                showSelectionScreen();
            }
        } else if (lastAccessedLectureId > 0) {
            // إذا كان هناك محاضرة أخيرة مسجلة، عرض شاشة الاختيار
            showSelectionScreen();
        } else {
            // إذا لم يكن هناك محاضرة محددة، عرض شاشة الاختيار
            showSelectionScreen();
        }

        // تحديث واجهة التقدم عند التحميل
        updateProgressUI();
    }

    // عرض شاشة اختيار المحاضرة
    function showSelectionScreen() {
        if (lectureSelectionScreen) {
            lectureSelectionScreen.style.display = 'flex';
        }
        if (videoContainer) {
            videoContainer.style.display = 'none';
        }
        if (lectureInfoContainer) {
            lectureInfoContainer.style.display = 'none';
        }
    }

    // بدء التطبيق
    initializeApp();
// نظام التقييم
async function loadRatingSystem() {
    try {
        const ratingData = await loadRatingData();
        if (ratingData.success) {
            renderRatingSummary(ratingData.summary);
            // نمرر existingRating لدالة updateRatingVisibility
            updateRatingVisibility(ratingData.canRate, ratingData.existingRating);
            
            // إذا كان المستخدم مؤهلاً للتقييم وليس لديه تقييم سابق، نعرض النموذج الجديد
            if (ratingData.canRate?.canRate && !ratingData.existingRating) {
                renderNewRatingForm();
            }
        }
    } catch (error) {
        console.error('Error loading rating system:', error);
    }
}
// دالة لعرض نموذج التقييم الجديد
function renderNewRatingForm() {
    const formContainer = document.getElementById('rating-form-container');
    if (!formContainer) return;

    formContainer.innerHTML = `
        <div class="rating-form-container">
            <h4 class="font-semibold text-green-800 dark:text-green-200 mb-4 flex items-center text-lg">
                <i class="fas fa-edit ml-2"></i>
                شاركنا برأيك في الكورس
            </h4>
            <form id="rating-form" class="space-y-5">
                <input type="hidden" name="CourseId" value="${courseData.id}" />

                <div class="text-center">
                    <label class="block text-lg font-medium text-gray-700 dark:text-gray-300 mb-4">
                        كيف تقيم تجربتك مع الكورس؟
                    </label>
                    <div class="star-rating" dir="ltr">
                        ${Array.from({length: 5}, (_, i) => 5 - i).map(i => `
                            <button type="button" class="star transition-all duration-300 hover:scale-125 transform" data-value="${i}">
                                <i class="far fa-star text-4xl text-gray-300 hover:text-yellow-400"></i>
                            </button>
                        `).join('')}
                    </div>
                    <input type="hidden" name="Value" id="rating-value" required />
                    <div id="rating-feedback" class="mt-3 text-sm text-gray-500 dark:text-gray-400 transition-all duration-300"></div>
                </div>

                <div>
                    <label for="comment" class="block text-lg font-medium text-gray-700 dark:text-gray-300 mb-3">
                        تعليقك (اختياري)
                    </label>
                    <textarea name="Comment" id="comment" rows="4"
                          class="w-full px-4 py-3 border-2 border-gray-200 dark:border-gray-600 rounded-xl
                                 bg-white dark:bg-gray-700 text-gray-800 dark:text-white
                                 focus:ring-2 focus:ring-green-500 focus:border-green-500
                                 transition-all duration-300 resize-none shadow-sm"
                          placeholder="اكتب تعليقك هنا... شاركنا بتجربتك مع الكورس وما أعجبك أو يمكن تحسينه..."></textarea>
                </div>

                <button type="submit"
                        class="w-full rating-submit-btn interactive-btn flex items-center justify-center
                               font-semibold text-lg py-4">
                    <i class="fas fa-paper-plane ml-3"></i>
                    إرسال التقييم
                </button>
            </form>
        </div>
    `;
    initializeRatingForm();
}
// تحميل بيانات التقييم
async function loadRatingData() {
    try {
        const response = await fetch(`/Learner/Rating/GetRatingData?courseId=${courseData.id}`);
        if (response.ok) {
            return await response.json();
        }
        return { success: false };
    } catch (error) {
        console.error('Error loading rating data:', error);
        return { success: false };
    }
}

// عرض ملخص التقييمات
function renderRatingSummary(summary) {
    if (!summary) return;

    const averageRating = document.getElementById('average-rating');
    const ratingStars = document.getElementById('rating-stars');
    const totalRatings = document.getElementById('total-ratings');
    const ratingDistribution = document.getElementById('rating-distribution');

    if (averageRating) averageRating.textContent = summary.averageRating.toFixed(1);
    if (totalRatings) totalRatings.textContent = summary.totalRatings;

    // عرض النجوم المحسنة
    if (ratingStars) {
        ratingStars.innerHTML = '';
        const fullStars = Math.floor(summary.averageRating);
        const hasHalfStar = summary.averageRating % 1 >= 0.5;
        
        for (let i = 1; i <= 5; i++) {
            const star = document.createElement('i');
            if (i <= fullStars) {
                star.className = 'fas fa-star text-yellow-400 text-lg';
            } else if (i === fullStars + 1 && hasHalfStar) {
                star.className = 'fas fa-star-half-alt text-yellow-400 text-lg';
            } else {
                star.className = 'far fa-star text-gray-300 text-lg';
            }
            ratingStars.appendChild(star);
        }
    }

    // عرض توزيع التقييمات المحسن
    if (ratingDistribution && summary.ratingDistribution) {
        ratingDistribution.innerHTML = '';
        for (let i = 5; i >= 1; i--) {
            const count = summary.ratingDistribution[i] || 0;
            const percentage = summary.totalRatings > 0 ? (count * 100.0 / summary.totalRatings) : 0;

            const row = document.createElement('div');
            row.className = 'rating-distribution-item';
            row.innerHTML = `
                <span class="star-label">${i}</span>
                <i class="fas fa-star text-yellow-400 text-xs"></i>
                <div class="distribution-bar">
                    <div class="distribution-fill" style="width: ${percentage.toFixed(0)}%"></div>
                </div>
                <span class="distribution-count">${count}</span>
            `;
            ratingDistribution.appendChild(row);
        }
    }
}

// عرض نموذج التقييم
// عرض نموذج التقييم المحسن
function renderRatingForm(canRate, existingRating) {
    const formContainer = document.getElementById('rating-form-container');
    const ratingMessage = document.getElementById('rating-message');
    
    if (!formContainer) return;

    if (!canRate) {
        formContainer.innerHTML = '';
        ratingMessage.classList.remove('hidden');
        return;
    }

    ratingMessage.classList.add('hidden');

    if (!existingRating) {
        // نموذج التقييم الجديد
        formContainer.innerHTML = `
            <div class="bg-gradient-to-r from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20 
                        border border-green-200 dark:border-green-800 rounded-xl p-5 mb-4">
                <h4 class="font-semibold text-green-800 dark:text-green-200 mb-3 flex items-center">
                    <i class="fas fa-edit ml-2"></i>
                    شاركنا برأيك في الكورس
                </h4>
                <form id="rating-form" class="space-y-4">
                    <input type="hidden" name="CourseId" value="${courseData.id}" />

                    <div>
                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3 text-center">
                            كيف تقيم تجربتك مع الكورس؟
                        </label>
                        <div class="flex justify-center space-x-2 space-x-reverse star-rating" dir="ltr">
                            ${Array.from({length: 5}, (_, i) => 5 - i).map(i => `
                                <button type="button" class="star transition-all duration-200 hover:scale-110 transform" data-value="${i}">
                                    <i class="far fa-star text-3xl text-gray-300 hover:text-yellow-400"></i>
                                </button>
                            `).join('')}
                        </div>
                        <input type="hidden" name="Value" id="rating-value" required />
                    </div>

                    <div>
                        <label for="comment" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                            تعليقك (اختياري)
                        </label>
                        <textarea name="Comment" id="comment" rows="3"
                              class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg
                                     bg-white dark:bg-gray-700 text-gray-800 dark:text-white
                                     focus:ring-2 focus:ring-green-500 focus:border-transparent
                                     transition-all duration-200 resize-none"
                              placeholder="اكتب تعليقك هنا... شاركنا بتجربتك مع الكورس وما أعجبك أو يمكن تحسينه..."></textarea>
                    </div>

                    <button type="submit"
                            class="w-full bg-green-600 text-white py-3 px-4 rounded-lg hover:bg-green-700
                                   transition-all duration-200 interactive-btn flex items-center justify-center
                                   font-semibold text-lg shadow-lg hover:shadow-xl">
                        <i class="fas fa-paper-plane ml-2"></i>
                        إرسال التقييم
                    </button>
                </form>
            </div>
        `;
        initializeRatingForm();
    } else {
        // التقييم الحالي مع إمكانية التعديل
        formContainer.innerHTML = `
            <div class="bg-gradient-to-r from-blue-50 to-cyan-50 dark:from-blue-900/20 dark:to-cyan-900/20 
                        border border-blue-200 dark:border-blue-800 rounded-xl p-5 mb-4">
                <div id="existing-rating" data-rating-id="${existingRating.id}">
                    <div class="text-center mb-4">
                        <h4 class="font-semibold text-blue-800 dark:text-blue-200 mb-3 flex items-center justify-center">
                            <i class="fas fa-star ml-2 text-yellow-500"></i>
                            تقييمك الحالي
                        </h4>
                        <div class="flex justify-center mb-3">
                            ${Array.from({length: 5}, (_, i) => i + 1).map(i => `
                                <i class="fas fa-star text-2xl ${i <= existingRating.value ? 'text-yellow-400' : 'text-gray-300'} ml-1"></i>
                            `).join('')}
                        </div>
                        <p class="text-blue-700 dark:text-blue-300 font-bold text-lg">
                            ${existingRating.value}/5
                        </p>
                        ${existingRating.comment ? `
                            <div class="mt-4 p-4 bg-white/50 dark:bg-gray-700/50 rounded-lg border border-blue-100 dark:border-blue-700">
                                <p class="text-gray-700 dark:text-gray-300 text-sm leading-relaxed">
                                    "${existingRating.comment}"
                                </p>
                            </div>
                        ` : ''}
                    </div>

                    <div class="flex space-x-3 space-x-reverse">
                        <button id="edit-rating-btn"
                                class="flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700
                                       transition-all interactive-btn flex items-center justify-center font-medium">
                            <i class="fas fa-edit ml-2"></i>
                            تعديل التقييم
                        </button>
                        <button id="delete-rating-btn"
                                class="flex-1 bg-red-600 text-white py-2 px-4 rounded-lg hover:bg-red-700
                                       transition-all interactive-btn flex items-center justify-center font-medium">
                            <i class="fas fa-trash ml-2"></i>
                            حذف التقييم
                        </button>
                    </div>
                </div>

                <div id="edit-rating-form" class="hidden space-y-4 mt-4">
                    <h4 class="font-semibold text-blue-800 dark:text-blue-200 mb-3 text-center">
                        تعديل التقييم
                    </h4>
                    <input type="hidden" name="RatingId" value="${existingRating.id}" />
                    <input type="hidden" name="CourseId" value="${courseData.id}" />

                    <div>
                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3 text-center">
                            عدل تقييمك
                        </label>
                        <div class="flex justify-center space-x-2 space-x-reverse star-rating" dir="ltr">
                            ${Array.from({length: 5}, (_, i) => 5 - i).map(i => `
                                <button type="button" class="star transition-all duration-200 hover:scale-110 transform" data-value="${i}">
                                    <i class="${i <= existingRating.value ? 'fas' : 'far'} fa-star text-3xl ${i <= existingRating.value ? 'text-yellow-400' : 'text-gray-300'}"></i>
                                </button>
                            `).join('')}
                        </div>
                        <input type="hidden" name="Value" id="edit-rating-value" value="${existingRating.value}" required />
                    </div>

                    <div>
                        <label for="edit-comment" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                            تعليقك
                        </label>
                        <textarea name="Comment" id="edit-comment" rows="3"
                              class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg
                                     bg-white dark:bg-gray-700 text-gray-800 dark:text-white
                                     focus:ring-2 focus:ring-blue-500 focus:border-transparent
                                     transition-all duration-200 resize-none">${existingRating.comment || ''}</textarea>
                    </div>

                    <div class="flex space-x-3 space-x-reverse">
                        <button type="button" id="save-edit-rating"
                                class="flex-1 bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700
                                       transition-all interactive-btn flex items-center justify-center font-medium">
                            <i class="fas fa-save ml-2"></i>
                            حفظ التعديلات
                        </button>
                        <button type="button" id="cancel-edit-rating"
                                class="flex-1 bg-gray-600 text-white py-2 px-4 rounded-lg hover:bg-gray-700
                                       transition-all interactive-btn flex items-center justify-center font-medium">
                            <i class="fas fa-times ml-2"></i>
                            إلغاء
                        </button>
                    </div>
                </div>
            </div>
        `;
        initializeExistingRating();
    }
}

// تفعيل نموذج التقييم الجديد
function initializeRatingForm() {
    const ratingForm = document.getElementById('rating-form');
    const stars = document.querySelectorAll('.star-rating .star');
    const ratingValue = document.getElementById('rating-value');
    const ratingFeedback = document.getElementById('rating-feedback');
    
    const feedbackTexts = {
        1: "سيء - تجربة غير مرضية",
        2: "مقبول - يحتاج للكثير من التحسين",
        3: "جيد - تجربة مناسبة",
        4: "ممتاز - تجربة رائعة",
        5: "رائع - تجربة استثنائية"
    };
    
    if (stars && ratingValue) {
        stars.forEach(star => {
            star.addEventListener('click', function() {
                const value = parseInt(this.getAttribute('data-value'));
                ratingValue.value = value;
                updateStars(stars, value);
                
                // إضافة تأثير الاهتزاز
                this.classList.add('animated');
                setTimeout(() => {
                    this.classList.remove('animated');
                }, 500);
                
                // عرض التقييم النصي
                if (ratingFeedback) {
                    ratingFeedback.textContent = feedbackTexts[value] || '';
                    ratingFeedback.classList.add('text-yellow-600', 'dark:text-yellow-400', 'font-medium');
                }
            });
            
            star.addEventListener('mouseenter', function() {
                const value = parseInt(this.getAttribute('data-value'));
                updateStars(stars, value, true);
                
                // عرض التقييم النصي عند التمرير
                if (ratingFeedback) {
                    ratingFeedback.textContent = feedbackTexts[value] || '';
                    ratingFeedback.classList.add('text-gray-600', 'dark:text-gray-400');
                }
            });
            
            star.addEventListener('mouseleave', function() {
                const currentValue = parseInt(ratingValue.value) || 0;
                updateStars(stars, currentValue);
                
                // إعادة التقييم النصي الحالي
                if (ratingFeedback && currentValue > 0) {
                    ratingFeedback.textContent = feedbackTexts[currentValue] || '';
                    ratingFeedback.classList.remove('text-gray-600', 'dark:text-gray-400');
                    ratingFeedback.classList.add('text-yellow-600', 'dark:text-yellow-400', 'font-medium');
                } else if (ratingFeedback) {
                    ratingFeedback.textContent = '';
                }
            });
        });
    }
    
    if (ratingForm) {
        ratingForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            await submitRating();
        });
    }
}


// تفعيل التقييم الحالي
// تفعيل التقييم الحالي
function initializeExistingRating() {
    const editRatingBtn = document.getElementById('edit-rating-btn');
    const deleteRatingBtn = document.getElementById('delete-rating-btn');
    const saveEditBtn = document.getElementById('save-edit-rating');
    const cancelEditBtn = document.getElementById('cancel-edit-rating');
    const stars = document.querySelectorAll('#edit-rating-form .star');

    if (editRatingBtn) {
        editRatingBtn.addEventListener('click', function() {
            document.getElementById('existing-rating').classList.add('hidden');
            document.getElementById('edit-rating-form').classList.remove('hidden');
        });
    }

    if (deleteRatingBtn) {
        deleteRatingBtn.addEventListener('click', async function() {
            if (confirm('هل أنت متأكد من حذف التقييم؟')) {
                await deleteRating();
            }
        });
    }

    if (saveEditBtn) {
        saveEditBtn.addEventListener('click', async function() {
            await updateRating();
        });
    }

    if (cancelEditBtn) {
        cancelEditBtn.addEventListener('click', function() {
            document.getElementById('existing-rating').classList.remove('hidden');
            document.getElementById('edit-rating-form').classList.add('hidden');
        });
    }

    // تفعيل النجوم في نموذج التعديل
    if (stars) {
        const editRatingValue = document.getElementById('edit-rating-value');
        stars.forEach(star => {
            star.addEventListener('click', function() {
                const value = parseInt(this.getAttribute('data-value'));
                editRatingValue.value = value;
                updateStars(stars, value);
            });
        });
    }
}

// تحديث مظهر النجوم
function updateStars(stars, value, isHover = false) {
    stars.forEach(star => {
        const starValue = parseInt(star.getAttribute('data-value'));
        const icon = star.querySelector('i');
        
        if (starValue <= value) {
            icon.classList.replace('far', 'fas');
            icon.classList.add('text-yellow-400');
            if (!isHover) {
                star.classList.add('active');
            }
        } else {
            icon.classList.replace('fas', 'far');
            icon.classList.remove('text-yellow-400');
            if (!isHover) {
                star.classList.remove('active');
            }
        }
        
        // إضافة تأثير التوهج للنجوم المحددة
        if (starValue <= value && !isHover) {
            icon.style.textShadow = '0 0 10px rgba(251, 191, 36, 0.7)';
        } else {
            icon.style.textShadow = 'none';
        }
    });
}


// إرسال التقييم
async function submitRating() {
    try {
        const form = document.getElementById('rating-form');
        const formData = new FormData(form);
        
        const ratingData = {
            CourseId: courseData.id,
            Value: parseInt(formData.get('Value')),
            Comment: formData.get('Comment')
        };
        
        const response = await fetch('/Learner/Rating/AddRating', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify(ratingData)
        });
        
        if (response.ok) {
            showNotification('تم إضافة التقييم بنجاح', 'success');
            await loadRatingSystem(); // إعادة تحميل نظام التقييم
        } else {
            const error = await response.text();
            showNotification('فشل في إضافة التقييم: ' + error, 'error');
        }
    } catch (error) {
        console.error('Error submitting rating:', error);
        showNotification('حدث خطأ أثناء إضافة التقييم', 'error');
    }
}

// تحديث التقييم
async function updateRating() {
    try {
        const ratingId = document.querySelector('input[name="RatingId"]').value;
        const value = document.getElementById('edit-rating-value').value;
        const comment = document.getElementById('edit-comment').value;
        
        const ratingData = {
            CourseId: courseData.id,
            Value: parseInt(value),
            Comment: comment
        };
        
        const response = await fetch(`/Learner/Rating/UpdateRating?ratingId=${ratingId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify(ratingData)
        });
        
        if (response.ok) {
            showNotification('تم تحديث التقييم بنجاح', 'success');
            await loadRatingSystem(); // إعادة تحميل نظام التقييم
        } else {
            const error = await response.text();
            showNotification('فشل في تحديث التقييم: ' + error, 'error');
        }
    } catch (error) {
        console.error('Error updating rating:', error);
        showNotification('حدث خطأ أثناء تحديث التقييم', 'error');
    }
}

// حذف التقييم
async function deleteRating() {
    try {
        const ratingId = document.getElementById('existing-rating').getAttribute('data-rating-id');
        
        const response = await fetch(`/Learner/Rating/DeleteRating?ratingId=${ratingId}&courseId=${courseData.id}`, {
            method: 'POST',
            headers: {
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            }
        });
        
        if (response.ok) {
            showNotification('تم حذف التقييم بنجاح', 'success');
            await loadRatingSystem(); // إعادة تحميل نظام التقييم
        } else {
            showNotification('فشل في حذف التقييم', 'error');
        }
    } catch (error) {
        console.error('Error deleting rating:', error);
        showNotification('حدث خطأ أثناء حذف التقييم', 'error');
    }
}

function updateRatingVisibility(canRateDto, existingRating) {
    const ratingFormContainer = document.getElementById('rating-form-container');
    const ratingMessage = document.getElementById('rating-message');
    
    if (!canRateDto) return;

    if (canRateDto.canRate) {
        // المستخدم يقدر يقيّم (ليس لديه تقييم سابق)
        ratingMessage.classList.add('hidden');
        ratingFormContainer.classList.remove('hidden');
    } else if (canRateDto.hasRated && existingRating) {
        // المستخدم قام بالتقييم من قبل - نعرض تقييمه الحالي مع إمكانية التعديل
        ratingMessage.classList.add('hidden');
        ratingFormContainer.classList.remove('hidden');
        renderExistingRating(existingRating);
    } else if (!canRateDto.eligibleToRate) {
        // المستخدم لم يكمل 80% بعد
        ratingFormContainer.classList.add('hidden');
        ratingMessage.classList.remove('hidden');
        ratingMessage.innerHTML = `
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 
                        border border-blue-200 dark:border-blue-800 rounded-2xl p-6 text-center">
                <div class="w-20 h-20 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-full flex items-center justify-center mx-auto mb-4">
                    <i class="fas fa-trophy text-white text-2xl"></i>
                </div>
                <h4 class="text-xl font-bold text-blue-800 dark:text-blue-200 mb-2">
                    استمر في التعلم!
                </h4>
                <p class="text-blue-700 dark:text-blue-300 mb-4">
                    يمكنك تقييم هذا الكورس بعد إكمال 80% من المحتوى
                </p>
                <div class="flex items-center justify-center space-x-3 mb-3">
                    <span class="text-sm text-blue-600 dark:text-blue-400">التقدم الحالي</span>
                    <span class="text-lg font-bold text-blue-700 dark:text-blue-300">${@progressPercentage}%</span>
                </div>
                <div class="w-full bg-blue-200 dark:bg-blue-800 rounded-full h-3 mb-2">
                    <div class="bg-gradient-to-r from-blue-500 to-indigo-500 h-3 rounded-full transition-all duration-1000" 
                         style="width: ${@progressPercentage}%"></div>
                </div>
                <p class="text-xs text-blue-600 dark:text-blue-400">
                    ${@completedLectures} من ${@(Model.Sections?.Sum(s => s.Lectures?.Count ?? 0))} محاضرة مكتملة
                </p>
            </div>
        `;
    } else {
        // حالات أخرى
        ratingFormContainer.classList.add('hidden');
        ratingMessage.classList.remove('hidden');
        ratingMessage.textContent = "لا يمكنك التقييم";
    }
}
// دالة لعرض التقييم الحالي مع إمكانية التعديل
function renderExistingRating(existingRating) {
    const formContainer = document.getElementById('rating-form-container');
    if (!formContainer) return;

    formContainer.innerHTML = `
        <div class="bg-gradient-to-r from-blue-50 to-cyan-50 dark:from-blue-900/20 dark:to-cyan-900/20 
                    border border-blue-200 dark:border-blue-800 rounded-xl p-5 mb-4">
            <div id="existing-rating" data-rating-id="${existingRating.id}">
                <div class="text-center mb-4">
                    <h4 class="font-semibold text-blue-800 dark:text-blue-200 mb-3 flex items-center justify-center">
                        <i class="fas fa-star ml-2 text-yellow-500"></i>
                        تقييمك الحالي
                    </h4>
                    <div class="flex justify-center mb-3">
                        ${Array.from({length: 5}, (_, i) => i + 1).map(i => `
                            <i class="fas fa-star text-2xl ${i <= existingRating.value ? 'text-yellow-400' : 'text-gray-300'} ml-1"></i>
                        `).join('')}
                    </div>
                    <p class="text-blue-700 dark:text-blue-300 font-bold text-lg">
                        ${existingRating.value}/5
                    </p>
                    ${existingRating.comment ? `
                        <div class="mt-4 p-4 bg-white/50 dark:bg-gray-700/50 rounded-lg border border-blue-100 dark:border-blue-700">
                            <p class="text-gray-700 dark:text-gray-300 text-sm leading-relaxed">
                                "${existingRating.comment}"
                            </p>
                        </div>
                    ` : ''}
                </div>

                <div class="flex space-x-3 space-x-reverse">
                    <button id="edit-rating-btn"
                            class="flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700
                                   transition-all interactive-btn flex items-center justify-center font-medium">
                        <i class="fas fa-edit ml-2"></i>
                        تعديل التقييم
                    </button>
                    <button id="delete-rating-btn"
                            class="flex-1 bg-red-600 text-white py-2 px-4 rounded-lg hover:bg-red-700
                                   transition-all interactive-btn flex items-center justify-center font-medium">
                        <i class="fas fa-trash ml-2"></i>
                        حذف التقييم
                    </button>
                </div>
            </div>

            <div id="edit-rating-form" class="hidden space-y-4 mt-4">
                <h4 class="font-semibold text-blue-800 dark:text-blue-200 mb-3 text-center">
                    تعديل التقييم
                </h4>
                <input type="hidden" name="RatingId" value="${existingRating.id}" />
                <input type="hidden" name="CourseId" value="${courseData.id}" />

                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3 text-center">
                        عدل تقييمك
                    </label>
                    <div class="flex justify-center space-x-2 space-x-reverse star-rating" dir="ltr">
                        ${Array.from({length: 5}, (_, i) => 5 - i).map(i => `
                            <button type="button" class="star transition-all duration-200 hover:scale-110 transform" data-value="${i}">
                                <i class="${i <= existingRating.value ? 'fas' : 'far'} fa-star text-3xl ${i <= existingRating.value ? 'text-yellow-400' : 'text-gray-300'}"></i>
                            </button>
                        `).join('')}
                    </div>
                    <input type="hidden" name="Value" id="edit-rating-value" value="${existingRating.value}" required />
                </div>

                <div>
                    <label for="edit-comment" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                        تعليقك
                    </label>
                    <textarea name="Comment" id="edit-comment" rows="3"
                          class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg
                                 bg-white dark:bg-gray-700 text-gray-800 dark:text-white
                                 focus:ring-2 focus:ring-blue-500 focus:border-transparent
                                 transition-all duration-200 resize-none">${existingRating.comment || ''}</textarea>
                </div>

                <div class="flex space-x-3 space-x-reverse">
                    <button type="button" id="save-edit-rating"
                            class="flex-1 bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700
                                   transition-all interactive-btn flex items-center justify-center font-medium">
                        <i class="fas fa-save ml-2"></i>
                        حفظ التعديلات
                    </button>
                    <button type="button" id="cancel-edit-rating"
                            class="flex-1 bg-gray-600 text-white py-2 px-4 rounded-lg hover:bg-gray-700
                                   transition-all interactive-btn flex items-center justify-center font-medium">
                        <i class="fas fa-times ml-2"></i>
                        إلغاء
                    </button>
                </div>
            </div>
        </div>
    `;

    initializeExistingRating();
}
// Modal التقييم التلقائي
function showRatingModal() {
    if (progressPercentage >= 80 && !localStorage.getItem(`rating_modal_shown_${courseData.id}`)) {
        const modal = document.getElementById('rating-modal');
        const modalContent = document.getElementById('modal-content');
        
        // تحميل بيانات التقييم لعرضها في الـ modal
        loadRatingData().then(ratingData => {
            if (ratingData.success && ratingData.canRate) {
                modal.classList.remove('hidden');
                localStorage.setItem(`rating_modal_shown_${courseData.id}`, 'true');
                
                // إعداد النموذج في الـ modal
                const modalForm = document.getElementById('modal-rating-form');
                if (!ratingData.existingRating) {
                    modalForm.innerHTML = `
                        <form id="modal-rating-form-content" class="space-y-4">
                            <input type="hidden" name="CourseId" value="${courseData.id}" />
                            <div class="modal-star-rating" dir="ltr">
                                ${Array.from({length: 5}, (_, i) => 5 - i).map(i => `
                                    <button type="button" class="star transition-all duration-300 hover:scale-125" data-value="${i}">
                                        <i class="far fa-star text-gray-300 hover:text-yellow-300"></i>
                                    </button>
                                `).join('')}
                            </div>
                            <input type="hidden" name="Value" id="modal-rating-value" required />
                            <textarea name="Comment" rows="3" 
                                class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl 
                                       bg-white dark:bg-gray-700 text-gray-800 dark:text-white
                                       focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all"
                                placeholder="تعليقك (اختياري)..."></textarea>
                            <button type="submit" 
                                class="w-full bg-blue-600 text-white py-3 px-4 rounded-xl hover:bg-blue-700 
                                       transition-all interactive-btn font-semibold shadow-lg">
                                إرسال التقييم
                            </button>
                        </form>
                    `;
                    
                    // تفعيل النجوم في الـ modal
                    const modalStars = modalForm.querySelectorAll('.star');
                    const modalRatingValue = document.getElementById('modal-rating-value');
                    
                    modalStars.forEach(star => {
                        star.addEventListener('click', function() {
                            const value = parseInt(this.getAttribute('data-value'));
                            modalRatingValue.value = value;
                            
                            modalStars.forEach(s => {
                                const sValue = parseInt(s.getAttribute('data-value'));
                                const icon = s.querySelector('i');
                                if (sValue <= value) {
                                    icon.classList.replace('far', 'fas');
                                    icon.classList.add('text-yellow-400');
                                    s.classList.add('active');
                                } else {
                                    icon.classList.replace('fas', 'far');
                                    icon.classList.remove('text-yellow-400');
                                    s.classList.remove('active');
                                }
                            });
                        });
                    });
                    
                    // إرسال التقييم من الـ modal
                    const modalFormContent = document.getElementById('modal-rating-form-content');
                    modalFormContent.addEventListener('submit', async function(e) {
                        e.preventDefault();
                        const formData = new FormData(this);
                        const ratingData = {
                            CourseId: courseData.id,
                            Value: parseInt(formData.get('Value')),
                            Comment: formData.get('Comment')
                        };
                        
                        const response = await fetch('/Learner/Rating/AddRating', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            },
                            body: JSON.stringify(ratingData)
                        });
                        
                        if (response.ok) {
                            showNotification('تم إضافة التقييم بنجاح', 'success');
                            closeRatingModal();
                            await loadRatingSystem();
                        }
                    });
                }
                
                // إظهار الـ modal مع تأثير
                setTimeout(() => {
                    modalContent.classList.remove('scale-95', 'opacity-0');
                    modalContent.classList.add('scale-100', 'opacity-100');
                }, 10);
            }
        });
    }
}

// تحسين دالة إغلاق الـ Modal
function closeRatingModal() {
    const modal = document.getElementById('rating-modal');
    const modalContent = document.getElementById('modal-content');
    
    modalContent.classList.remove('scale-100', 'opacity-100');
    modalContent.classList.add('scale-95', 'opacity-0');
    
    setTimeout(() => {
        modal.classList.add('hidden');
    }, 300);
}
document.getElementById('close-rating-modal')?.addEventListener('click', closeRatingModal);
});

</script>