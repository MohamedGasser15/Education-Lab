@using System.Globalization
@using EduLab_MVC.Services.ServiceInterfaces
@inject IWishlistService WishlistService
@model EduLab_MVC.Models.DTOs.Course.CourseDTO
@{
    ViewData["Title"] = Model.Title;
    bool isCourseInWishlist = false;
    if (User.Identity.IsAuthenticated)
    {
        isCourseInWishlist = await WishlistService.IsCourseInWishlistAsync(Model.Id);
    }
}
@functions {

    public string FormatRating(double rating)
    {
        return rating.ToString("0.0");
    }

    // دالة جديدة لعرض النجوم
    public string GetStarRating(double rating)
    {
        var fullStars = (int)Math.Floor(rating);
        var halfStar = rating - fullStars >= 0.5;
        var emptyStars = 5 - fullStars - (halfStar ? 1 : 0);

        var stars = "";

        // نجوم مملوءة
        for (int i = 0; i < fullStars; i++)
        {
            stars += "<i class='fas fa-star text-yellow-400'></i>";
        }

        // نصف نجمة
        if (halfStar)
        {
            stars += "<i class='fas fa-star-half-alt text-yellow-400'></i>";
        }

        // نجوم فارغة
        for (int i = 0; i < emptyStars; i++)
        {
            stars += "<i class='far fa-star text-yellow-400'></i>";
        }

        return stars;
    }
}
<style>
    body {
        overflow-x: hidden;
    }
    /* ألوان للحالات المختلفة */
    .bg-orange-500 {
        background-color: #f97316 !important;
    }

        .bg-orange-500:hover {
            background-color: #ea580c !important;
        }

    .bg-green-600 {
        background-color: #16a34a !important;
    }

        .bg-green-600:hover {
            background-color: #15803d !important;
        }

    /* تحسين مظهر أزرار السلة */
    .add-to-cart-btn {
        position: relative;
        transition: all 0.3s ease;
    }

        .add-to-cart-btn.loading {
            cursor: not-allowed;
            opacity: 0.8;
        }

        .add-to-cart-btn .loading-spinner {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .add-to-cart-btn.loading .loading-spinner {
            opacity: 1;
        }

        .add-to-cart-btn.loading .btn-text {
            opacity: 0;
        }
    /* تحسينات لزر المفضلة في صفحة التفاصيل */
    .wishlist-btn {
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
    }

        .wishlist-btn.loading {
            cursor: not-allowed;
            opacity: 0.7;
        }

        .wishlist-btn .btn-text {
            transition: opacity 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .wishlist-btn.loading .btn-text {
            opacity: 0;
        }

        .wishlist-btn .loading-spinner {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .wishlist-btn.loading .loading-spinner {
            opacity: 1;
        }

        .wishlist-btn.active {
            border-color: #ef4444;
            color: #ef4444;
        }

            .wishlist-btn.active .btn-text {
                color: #ef4444;
            }

    @@keyframes wishlistPulse {
        0% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.05);
        }

        100% {
            transform: scale(1);
        }
    }

    .wishlist-pulse {
        animation: wishlistPulse 0.4s ease-in-out;
    }

    /* تحسينات للزر في حالة التحميل */
    .wishlist-btn:disabled {
        cursor: not-allowed;
        opacity: 0.6;
    }
</style>
<!-- مسار التصفح (Breadcrumb) -->
<div class="container mx-auto px-4 pt-4">
    <nav class="flex" aria-label="Breadcrumb">
        <ol class="inline-flex items-center space-x-1 space-x-reverse md:space-x-2 rtl:space-x-reverse">
            <li class="inline-flex items-center">
                <a asp-area="Learner" asp-controller="Home" asp-action="Index" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white">
                    <i class="fas fa-home mr-1"></i>
                    الرئيسية
                </a>
            </li>
            <li>
                <div class="flex items-center">
                    <i class="fas fa-chevron-left text-gray-400 text-xs mx-1"></i>
                    <a asp-area="Learner" asp-controller="Course" asp-action="Index" class="ms-1 text-sm font-medium text-gray-700 hover:text-blue-600 md:ms-2 dark:text-gray-400 dark:hover:text-white">الدورات</a>
                </div>
            </li>
            <li aria-current="page">
                <div class="flex items-center">
                    <i class="fas fa-chevron-left text-gray-400 text-xs mx-1"></i>
                    <span class="ms-1 text-sm font-medium text-blue-600 md:ms-2 dark:text-blue-400">@Model.Title</span>
                </div>
            </li>
        </ol>
    </nav>
</div>

<!-- القسم الرئيسي للكورس -->
<section class="container mx-auto px-4 py-8">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Right Section (Course Purchase) - أولاً على الموبايل -->
        <div class="lg:col-span-1 order-1 lg:order-2">
            <div class="sticky top-24 space-y-6">
                <!-- Video Preview -->
                @{
                    var previewVideos = Model.Sections
                    .SelectMany(s => s.Lectures)
                    .Where(l => l.IsFreePreview && l.ContentType == "Video")
                    .ToList();

                    var firstPreviewVideo = previewVideos.FirstOrDefault();
                }
                @if (firstPreviewVideo != null)
                {
                    <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-md border border-gray-200 dark:border-gray-700 overflow-hidden transition duration-300 hover:shadow-2xl" id="previewVideoContainer">

                        <!-- صورة الفيديو -->
                        <div class="relative aspect-video bg-black">
                            <img src="@Model.ThumbnailUrl"
                                 alt="Preview Thumbnail"
                                 class="absolute inset-0 w-full h-full object-cover" />

                            <!-- زر التشغيل -->
                            <div class="absolute inset-0 flex items-center justify-center">
                                <button id="playPreviewBtn"
                                        class="bg-blue-600 hover:bg-blue-700 text-white rounded-full w-16 h-16 flex items-center justify-center shadow-lg transition-all duration-300 hover:scale-110 focus:ring-4 focus:ring-blue-300">
                                    <i class="fas fa-play text-2xl pl-1"></i>
                                </button>
                            </div>
                        </div>

                        <!-- النص أسفل الفيديو -->
                        <div class="p-4 bg-gray-50 dark:bg-gray-700 border-t border-gray-200 dark:border-gray-600">
                            <h3 class="font-semibold text-gray-800 dark:text-white text-center text-lg">
                                معاينة مجانية للدورة
                            </h3>
                        </div>
                    </div>
                }

                else
                {
                    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 overflow-hidden transition-all duration-300 hover:shadow-xl">
                        <div class="relative pt-[56.25%] bg-black rounded-t-xl">
                            <img src="@Model.ThumbnailUrl"
                                 alt="Thumbnail"
                                 class="absolute top-0 left-0 w-full h-full object-cover rounded-t-xl" />
                        </div>
                    </div>
                }

                <!-- Course Purchase Card -->
                <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 overflow-hidden transition-all duration-300 hover:shadow-xl">
                    <div class="p-6">
                        <!-- Price Section -->
                        <div class="flex items-center justify-between mb-4">
                            <div>
                                @{
                                    var finalPrice = Model.Price - (Model.Price * (Model.Discount ?? 0) / 100);
                                }
                                <span class="text-2xl font-bold text-gray-800 dark:text-white">@finalPrice.ToString("0") ج.م</span>
                                @if (Model.Discount > 0)
                                {
                                    <span class="text-sm text-gray-500 dark:text-gray-400 line-through mr-2">@Model.Price.ToString("0") ج.م</span>
                                }
                            </div>
                            @if (Model.Discount > 0)
                            {
                                <span class="bg-red-100 dark:bg-red-900/30 text-red-600 dark:text-red-300 text-xs font-medium px-2.5 py-0.5 rounded-full">وفر @Model.Discount%</span>
                            }
                        </div>

                        @* <!-- Discount Timer -->
                        <div class="bg-yellow-50 dark:bg-yellow-900/10 border border-yellow-200 dark:border-yellow-800 rounded-lg p-3 mb-6">
                            <div class="flex items-center justify-between">
                                <div class="flex items-center text-yellow-700 dark:text-yellow-300 text-sm">
                                    <i class="fas fa-clock mr-2"></i>
                                    <span>العرض ينتهي خلال:</span>
                                </div>
                                <div class="font-mono font-bold text-yellow-700 dark:text-yellow-300">48:00:00</div>
                            </div>
                            <div class="w-full bg-yellow-200 dark:bg-yellow-800 rounded-full h-1.5 mt-2">
                                <div class="bg-yellow-500 h-1.5 rounded-full" style="width: 75%"></div>
                            </div>
                        </div> *@

                        <!-- Action Buttons -->
                        <div class="space-y-3 mb-6">
                            @if (ViewBag.IsUserEnrolled == true)
                            {
                                <a href="@Url.Action("Learn", "Course", new { area = "Learner", id = Model.Id })"
                                   class="w-full bg-green-600 hover:bg-green-700 text-white py-3 rounded-lg font-medium flex items-center justify-center gap-2 transition transform hover:-translate-y-0.5">
                                    <i class="fas fa-play-circle"></i>
                                    ابدأ التعلم الآن
                                </a>
                            }
                            else if (ViewBag.IsCourseInCart == true)
                            {
                                <button class="w-full bg-orange-500 text-white py-3 rounded-lg font-medium flex items-center justify-center gap-2 cursor-default" disabled>
                                    <i class="fas fa-shopping-cart"></i>
                                    مضافة إلى السلة
                                </button>

                                <a href="@Url.Action("Index", "Cart", new { area = "Learner" })"
                                   class="w-full bg-gradient-to-r from-blue-600 to-blue-500 hover:from-blue-700 hover:to-blue-600 text-white py-3 rounded-lg font-medium flex items-center justify-center gap-2 transition transform hover:-translate-y-0.5 shadow-md shadow-blue-500/20">
                                    <i class="fas fa-credit-card"></i>
                                    اذهب إلى السلة
                                </a>
                            }
                            else
                            {
                                <button onclick="addToCart(@Model.Id, this)"
                                        class="w-full bg-blue-600 hover:bg-blue-700 text-white py-3 rounded-lg font-medium flex items-center justify-center gap-2 transition transform hover:-translate-y-0.5 add-to-cart-btn">
                                    <span class="btn-text">
                                        <i class="fas fa-shopping-cart"></i>
                                        أضف إلى السلة
                                    </span>
                                    <span class="loading-spinner hidden">
                                        <i class="fas fa-spinner fa-spin"></i>
                                    </span>
                                </button>
                            }
                            <button onclick="toggleWishlist(@Model.Id, this)"
                                    class="wishlist-btn w-full bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 text-gray-800 dark:text-white py-3 rounded-lg font-medium flex items-center justify-center gap-2 transition hover:bg-gray-50 dark:hover:bg-gray-600 @(isCourseInWishlist ? "active" : "")">
                                <span class="btn-text flex items-center gap-2">
                                    @if (isCourseInWishlist)
                                    {
                                        <i class="fas fa-heart text-red-500"></i>
                                        <span>في المفضلة</span>
                                    }
                                    else
                                    {
                                        <i class="far fa-heart"></i>
                                        <span>حفظ في المفضلة</span>
                                    }
                                </span>
                                <span class="loading-spinner hidden">
                                    <i class="fas fa-spinner fa-spin"></i>
                                </span>
                            </button>
                        </div>

                        <!-- Money Back Guarantee -->
                        <div class="bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-3 text-center text-sm text-green-700 dark:text-green-300 mb-6 flex items-center justify-center gap-2">
                            <i class="fas fa-shield-alt text-lg"></i>
                            <span>ضمان استرداد الأموال خلال 30 يوم بدون أي أسئلة</span>
                        </div>
                        <div class="grid grid-cols-3 gap-3 mb-6 text-center">
                            <div class="bg-gray-50 dark:bg-gray-700 p-2 rounded-lg">
                                <div class="text-lg font-bold text-gray-800 dark:text-white">@Model.AverageRating.ToString("0.0")</div>
                                <div class="text-xs text-gray-500 dark:text-gray-400 flex items-center justify-center">
                                    <i class="fas fa-star text-yellow-400 mr-1 text-xs"></i>
                                    التقييم
                                </div>
                            </div>
                            <div class="bg-gray-50 dark:bg-gray-700 p-2 rounded-lg">
                                <div class="text-lg font-bold text-gray-800 dark:text-white">@(new Random().Next(1000, 5000))</div>
                                <div class="text-xs text-gray-500 dark:text-gray-400">
                                    <i class="fas fa-users mr-1 text-xs"></i>
                                    الطلاب
                                </div>
                            </div>
                            <div class="bg-gray-50 dark:bg-gray-700 p-2 rounded-lg">
                                <div class="text-lg font-bold text-gray-800 dark:text-white">@(Model.Duration / 3600)</div>
                                <div class="text-xs text-gray-500 dark:text-gray-400">
                                    <i class="fas fa-clock mr-1 text-xs"></i>
                                    الساعات
                                </div>
                            </div>
                        </div>
                        <!-- Course Features -->
                        <div class="space-y-3 mb-2">
                            <div class="flex items-start">
                                <div class="text-blue-500 dark:text-blue-400 mt-0.5 mr-2">
                                    <i class="fas fa-check-circle"></i>
                                </div>
                                <span class="text-sm text-gray-700 dark:text-gray-300 mt-1 mr-1">@(Model.Duration / 3600) ساعة فيديو حسب الطلب</span>
                            </div>
                            <div class="flex items-start">
                                <div class="text-blue-500 dark:text-blue-400 mt-0.5 mr-2">
                                    <i class="fas fa-check-circle"></i>
                                </div>
                                <span class="text-sm text-gray-700 dark:text-gray-300 mt-1 mr-1">الوصول عبر الهاتف والتلفزيون</span>
                            </div>
                            @if (Model.HasCertificate)
                            {
                                <div class="flex items-start">
                                    <div class="text-blue-500 dark:text-blue-400 mt-0.5 mr-2">
                                        <i class="fas fa-check-circle"></i>
                                    </div>
                                    <span class="text-sm text-gray-700 dark:text-gray-300 mt-1 mr-1">شهادة إتمام معتمدة</span>
                                </div>
                            }
                            <div class="flex items-start">
                                <div class="text-blue-500 dark:text-blue-400 mt-0.5 mr-2">
                                    <i class="fas fa-check-circle"></i>
                                </div>
                                <span class="text-sm text-gray-700 dark:text-gray-300 mt-1 mr-1">وصول كامل مدى الحياة</span>
                            </div>
                            <div class="flex items-start">
                                <div class="text-blue-500 dark:text-blue-400 mt-0.5 mr-2">
                                    <i class="fas fa-check-circle"></i>
                                </div>
                                <span class="text-sm text-gray-700 dark:text-gray-300 mt-1 mr-1">تمارين عملية وملفات للتحميل</span>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Course Share -->
                <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md border border-gray-200 dark:border-gray-700 p-5 transition-all duration-300 hover:shadow-lg">
                    <h3 class="font-semibold text-gray-800 dark:text-white mb-3 flex items-center">
                        <i class="fas fa-share-alt text-blue-500 mr-2"></i>
                        مشاركة هذه الدورة
                    </h3>
                    <div class="flex flex-wrap gap-2">
                        <a onclick="shareOnFacebook()" class="w-10 h-10 flex items-center justify-center bg-blue-600 text-white rounded-full hover:bg-blue-700 transition transform hover:-translate-y-0.5 cursor-pointer" aria-label="Share on Facebook" title="مشاركة على فيسبوك">
                            <i class="fab fa-facebook-f"></i>
                        </a>
                        <a onclick="shareOnTwitter()" class="w-10 h-10 flex items-center justify-center bg-blue-400 text-white rounded-full hover:bg-blue-500 transition transform hover:-translate-y-0.5 cursor-pointer" aria-label="Share on Twitter" title="مشاركة على تويتر">
                            <i class="fab fa-twitter"></i>
                        </a>
                        <a onclick="shareOnInstagram()" class="w-10 h-10 flex items-center justify-center bg-gradient-to-r from-pink-500 to-purple-500 text-white rounded-full hover:from-pink-600 hover:to-purple-600 transition transform hover:-translate-y-0.5 cursor-pointer" aria-label="Share on Instagram" title="مشاركة على إنستغرام">
                            <i class="fab fa-instagram"></i>
                        </a>
                        <a onclick="shareOnWhatsApp()" class="w-10 h-10 flex items-center justify-center bg-green-500 text-white rounded-full hover:bg-green-600 transition transform hover:-translate-y-0.5 cursor-pointer" aria-label="Share on WhatsApp" title="مشاركة على واتساب">
                            <i class="fab fa-whatsapp"></i>
                        </a>
                        <a onclick="shareOnLinkedIn()" class="w-10 h-10 flex items-center justify-center bg-indigo-600 text-white rounded-full hover:bg-indigo-700 transition transform hover:-translate-y-0.5 cursor-pointer" aria-label="Share on LinkedIn" title="مشاركة على لينكدإن">
                            <i class="fab fa-linkedin-in"></i>
                        </a>
                        <a onclick="copyLink()" class="w-10 h-10 flex items-center justify-center bg-gray-800 text-white rounded-full hover:bg-gray-900 transition transform hover:-translate-y-0.5 cursor-pointer" aria-label="Copy link" title="نسخ الرابط">
                            <i class="fas fa-link"></i>
                        </a>
                    </div>
                </div>
                <!-- Similar Courses -->
                @if (ViewBag.SimilarCourses != null && ((List<EduLab_MVC.Models.DTOs.Course.CourseDTO>)ViewBag.SimilarCourses).Any())
                {
                    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 overflow-hidden transition-all duration-300 hover:shadow-xl">
                        <div class="border-b border-gray-200 dark:border-gray-700 px-5 py-4 bg-gray-50 dark:bg-gray-700">
                            <h3 class="font-semibold text-lg text-gray-800 dark:text-white flex items-center">
                                <i class="fas fa-layer-group text-blue-500 mr-2"></i>
                                دورات مشابهة
                            </h3>
                        </div>

                        <div class="divide-y divide-gray-200 dark:divide-gray-700">
                            @foreach (var course in ViewBag.SimilarCourses)
                            {
                                <a href="@Url.Action("Details", "Course", new { area = "Learner", id = course.Id })" class="block p-4 hover:bg-gray-50 dark:hover:bg-gray-700 transition duration-200 group">
                                    <div class="flex items-start gap-3">
                                        <div class="relative">
                                            <img src="@course.ThumbnailUrl"
                                                 alt="@course.Title"
                                                 class="w-16 h-16 rounded-lg object-cover border border-gray-200 dark:border-gray-600 flex-shrink-0 group-hover:opacity-80 transition">
                                            <div class="absolute inset-0 bg-black/30 rounded-lg flex items-center justify-center opacity-0 group-hover:opacity-100 transition">
                                                <i class="fas fa-eye text-white text-lg"></i>
                                            </div>
                                        </div>
                                        <div class="flex-1 min-w-0">
                                            <h4 class="text-sm font-semibold text-gray-800 dark:text-white mb-1 truncate">@course.Title</h4>
                                            <div class="flex items-center text-xs text-gray-500 dark:text-gray-400 mb-1">
                                                <span class="truncate">@course.InstructorName</span>
                                                <i class="fas fa-circle text-[4px] mx-2"></i>
                                                <span>@(course.Duration / 3600) ساعة</span>
                                            </div>
                                            @{
                                                string discountClass = "";
                                                if (course.Discount <= 20)
                                                {
                                                    discountClass = "bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200";
                                                }
                                                else if (course.Discount <= 50)
                                                {
                                                    discountClass = "bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200";
                                                }
                                                else
                                                {
                                                    discountClass = "bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200";
                                                }
                                            }
                                            <div class="flex items-center">
                                                @{
                                                    var similarFinalPrice = course.Price - (course.Price * (course.Discount ?? 0) / 100);
                                                }
                                                <span class="text-sm font-bold text-blue-600 dark:text-blue-400">
                                                    @similarFinalPrice.ToString("0") ج.م
                                                </span>

                                                @if (course.Discount > 0)
                                                {
                                                    <span class="text-xs text-gray-500 dark:text-gray-400 line-through mr-2">
                                                        @course.Price.ToString("0") ج.م
                                                    </span>
                                                    <span class="text-xs px-2 py-0.5 rounded-full font-medium @discountClass">
                                                        خصم @course.Discount%
                                                    </span>
                                                }
                                            </div>

                                        </div>
                                    </div>
                                </a>
                            }
                        </div>

                        <div class="px-5 py-3 bg-gray-50 dark:bg-gray-700 text-center border-t border-gray-200 dark:border-gray-600">
                            <a asp-action="Index" asp-controller="Course" class="text-sm font-medium text-blue-600 dark:text-blue-400 hover:underline flex items-center justify-center transition transform hover:-translate-x-1">
                                عرض جميع الدورات
                                <i class="fas fa-arrow-left mr-1 text-xs mt-0.5"></i>
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- القسم الأيسر (المحتوى الأساسي) - ثانياً على الموبايل -->
        <div class="lg:col-span-2 order-2 lg:order-1">
            <!-- Course Title -->
            <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-2">@Model.Title</h1>

            <!-- Short Description -->
            <p class="text-gray-600 dark:text-gray-300 mb-4 text-lg">@Model.ShortDescription</p>

            <!-- Rating and Basic Info -->
            <div class="flex flex-wrap items-center gap-4 mb-6">
                <div class="flex items-center bg-gray-100 dark:bg-gray-700 px-3 py-1 rounded-full">
                    <div class="flex items-center mr-1">
                        <i class="fas fa-star text-yellow-400 ml-1"></i>
                        <span class="text-gray-800 dark:text-white font-medium ml-1">@(Model.AverageRating.ToString("0.0"))</span>
                    </div>
                    <span class="text-gray-500 dark:text-gray-400 text-sm">(@Model.TotalRatings تقييم)</span>
                </div>

                <div class="flex items-center text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-3 py-1 rounded-full">
                    <i class="fas fa-user-graduate ml-1"></i>
                    <span>@(new Random().Next(1000, 5000)) طالب</span>
                </div>

                <div class="flex items-center text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-3 py-1 rounded-full">
                    <i class="fas fa-clock ml-1"></i>
                    <span>@(Model.Duration / 3600) ساعة</span>
                </div>

                <div class="flex items-center text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-3 py-1 rounded-full">
                    <i class="fas fa-calendar-alt ml-1"></i>
                    <span>
                        تم التحديث: @Model.CreatedAt.ToString("MMMM yyyy", new CultureInfo("ar-EG"))
                    </span>
                </div>
            </div>

            <!-- Instructor -->
            <div class="flex items-center gap-3 mb-6 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-shadow">
                @if (string.IsNullOrEmpty(Model.ProfileImageUrl))
                {
                    <div class="w-12 h-12 rounded-full bg-blue-100 dark:bg-blue-900/30 border-2 border-white dark:border-gray-600 shadow-sm flex items-center justify-center">
                        <i class="fas fa-user text-blue-500 dark:text-blue-400 text-xl"></i>
                    </div>
                }
                else
                {
                    <img src="@Model.ProfileImageUrl"
                         alt="المدرب"
                         class="w-12 h-12 rounded-full object-cover border-2 border-white dark:border-gray-600 shadow-sm">
                }

                <div>
                    <h3 class="font-medium text-gray-800 dark:text-white">@Model.InstructorName</h3>
                    <p class="text-sm text-gray-500 dark:text-gray-400">@Model.Title</p>
                </div>
                <a asp-area="Learner"
                   asp-controller="Profile"
                   asp-action="InstructorProfile"
                   asp-route-id="@Model.InstructorId"
                   class="mr-auto text-blue-600 dark:text-blue-400 hover:underline text-sm flex items-center transition-transform hover:-translate-x-1">
                    عرض الملف الشخصي
                    <i class="fas fa-arrow-left mr-1 text-xs"></i>
                </a>

            </div>

            <div class="mb-8">
                <ul class="flex flex-wrap border-b border-gray-200 dark:border-gray-700" id="contentTabs">
                    <li class="mr-2">
                        <a href="#" data-tab="overview" class="inline-block p-4 text-blue-600 dark:text-blue-400 border-b-2 border-blue-600 dark:border-blue-400 rounded-t-lg active">نظرة عامة</a>
                    </li>
                    <li class="mr-2">
                        <a href="#" data-tab="contents" class="inline-block p-4 text-gray-500 dark:text-gray-400 hover:text-gray-600 dark:hover:text-gray-300">المحتويات</a>
                    </li>
                    <li class="mr-2">
                        <a href="#" data-tab="ratings" class="inline-block p-4 text-gray-500 dark:text-gray-400 hover:text-gray-600 dark:hover:text-gray-300">التقييمات</a>
                    </li>
                </ul>

                <!-- محتوى تبويب نظرة عامة -->
                <div id="overview" class="tab-content p-4 bg-white dark:bg-gray-800 rounded-b-lg">
                    <h2 class="text-xl font-bold text-gray-800 dark:text-white mb-4">ماذا ستتعلم في هذه الدورة؟</h2>

                    <ul class="grid grid-cols-1 md:grid-cols-2 gap-3 mb-6">
                        @foreach (var learning in Model.Learnings.First().Split(new[] { '\n', ',' }, StringSplitOptions.RemoveEmptyEntries))
                        {
                            <li class="flex items-start gap-2">
                                <i class="fas fa-check text-green-500 mt-1"></i>
                                <span class="text-gray-700 dark:text-gray-300">@learning.Trim()</span>
                            </li>
                        }
                    </ul>

                    <h2 class="text-xl font-bold text-gray-800 dark:text-white mb-4">متطلبات الدورة</h2>
                    <ul class="grid grid-cols-1 md:grid-cols-2 gap-3 mb-6">
                        @foreach (var requirement in Model.Requirements.First().Split(new[] { '\n', ',' }, StringSplitOptions.RemoveEmptyEntries))
                        {
                            <li class="flex items-start gap-2">
                                <i class="fas fa-circle text-xs text-gray-500 mt-2"></i>
                                <span class="text-gray-700 dark:text-gray-300">@requirement.Trim()</span>
                            </li>
                        }
                    </ul>

                    <h2 class="text-xl font-bold text-gray-800 dark:text-white mb-4">وصف الدورة</h2>
                    <div class="prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 break-words whitespace-normal">
                        @Html.Raw(Model.Description)
                    </div>
                </div>

                <!-- محتوى تبويب المحتويات -->
                <div id="contents" class="tab-content p-4 bg-white dark:bg-gray-800 rounded-b-lg hidden">
                    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden">
                        <div class="border-b border-gray-200 dark:border-gray-700 px-6 py-4">
                            <h2 class="text-xl font-bold text-gray-800 dark:text-white">محتويات الدورة</h2>
                        </div>

                        <div class="divide-y divide-gray-200 dark:divide-gray-700">
                            @foreach (var section in Model.Sections)
                            {
                                <div class="accordion-item">
                                    <button class="accordion-button flex justify-between items-center w-full px-6 py-4 text-left bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 transition">
                                        <div class="flex items-center">
                                            <i class="fas fa-chevron-down text-xs mr-2 transform transition-transform duration-300"></i>
                                            <span class="font-medium text-gray-800 dark:text-white">@(section.Title)</span>
                                        </div>
                                        <span class="text-sm text-gray-500 dark:text-gray-400">@(section.Lectures.Count) محاضرة • @(section.Lectures.Sum(l => l.Duration) / 60) دقيقة</span>
                                    </button>

                                    <div class="accordion-content hidden">
                                        <div class="px-6 pb-4 space-y-2">
                                            @foreach (var lecture in section.Lectures)
                                            {
                                                <!-- محاضرة -->
                                                <a href="#" class="flex items-center justify-between px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition">
                                                    <div class="flex items-center">
                                                        @if (lecture.ContentType == "Video")
                                                        {
                                                            <i class="far fa-play-circle text-blue-600 dark:text-blue-400 mr-3"></i>
                                                        }
                                                        else if (lecture.ContentType == "Article")
                                                        {
                                                            <i class="far fa-file-alt text-green-600 dark:text-green-400 mr-3"></i>
                                                        }
                                                        else
                                                        {
                                                            <i class="far fa-question-circle text-purple-600 dark:text-purple-400 mr-3"></i>
                                                        }
                                                        <span class="text-gray-700 dark:text-gray-300">@lecture.Title</span>
                                                    </div>
                                                    <span class="text-sm text-gray-500 dark:text-gray-400">@TimeSpan.FromSeconds(lecture.Duration).ToString(@"mm\:ss")</span>
                                                </a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>

                        <div class="px-6 py-4 bg-gray-50 dark:bg-gray-700 text-center">
                            <p class="text-gray-600 dark:text-gray-300">@Model.Sections.Count قسم • @Model.TotalLectures محاضرة • @(Model.Duration / 3600) ساعة إجمالي المحتوى</p>
                        </div>
                    </div>
                </div>

                <!-- محتوى تبويب التقييمات -->
                <div id="ratings" class="tab-content p-4 bg-white dark:bg-gray-800 rounded-b-lg hidden">
                    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden">
                        <div class="border-b border-gray-200 dark:border-gray-700 px-6 py-4">
                            <h2 class="text-xl font-bold text-gray-800 dark:text-white">تقييمات الطلاب</h2>
                        </div>

                        <div class="p-6">
                            <!-- ملخص التقييمات -->
                            <div class="flex flex-col md:flex-row items-center gap-8 mb-8">
                                <div class="text-center">
                                    <div class="text-5xl font-bold text-gray-800 dark:text-white mb-1">@Model.AverageRating.ToString("0.0")</div>
                                    <div class="flex justify-center mb-2">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= Math.Floor(Model.AverageRating))
                                            {
                                                <i class="fas fa-star text-yellow-400"></i>
                                            }
                                            else if (i == Math.Ceiling(Model.AverageRating) && Model.AverageRating % 1 >= 0.5)
                                            {
                                                <i class="fas fa-star-half-alt text-yellow-400"></i>
                                            }
                                            else
                                            {
                                                <i class="far fa-star text-yellow-400"></i>
                                            }
                                        }
                                    </div>
                                    <p class="text-gray-500 dark:text-gray-400">@Model.TotalRatings تقييم</p>
                                </div>

                                <div class="flex-1 w-full space-y-2">
                                    @for (int rating = 5; rating >= 1; rating--)
                                    {
                                        var percentage = Model.TotalRatings > 0 ? (Model.RatingDistribution.ContainsKey(rating) ? (Model.RatingDistribution[rating] * 100.0) / Model.TotalRatings : 0) : 0;
                                        <div class="flex items-center">
                                            <span class="w-10 text-gray-600 dark:text-gray-300">@rating نجوم</span>
                                            <div class="flex-1 mx-2 h-2 bg-gray-200 dark:bg-gray-600 rounded-full">
                                                <div class="h-2 bg-yellow-400 rounded-full" style="width: @percentage%"></div>
                                            </div>
                                            <span class="w-10 text-gray-600 dark:text-gray-300">@(percentage.ToString("0"))%</span>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- زر لعرض التعليقات -->
                            <div class="mt-6 text-center">
                                <button id="showCommentsBtn" class="px-6 py-2 border border-blue-600 text-blue-600 dark:text-blue-400 rounded-lg hover:bg-blue-50 dark:hover:bg-gray-700 transition">
                                    عرض التعليقات
                                </button>
                            </div>

                            <!-- قسم التعليقات (مخفي افتراضيا) -->
                            <div id="commentsSection" class="hidden space-y-6 mt-6">
                                <!-- سيتم تحميل التعليقات هنا ديناميكياً -->
                            </div>
                        </div>
                    </div>
                </div>

                <!-- قسم معلومات المدرب -->
                <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden mb-8 mt-16">
                    <div class="border-b border-gray-200 dark:border-gray-700 px-6 py-4">
                        <h2 class="text-xl font-bold text-gray-800 dark:text-white">عن المدرب</h2>
                    </div>

                    <div class="p-6">
                        <div class="flex flex-col md:flex-row gap-6">
                            <div class="flex-shrink-0">
                                @if (string.IsNullOrEmpty(Model.ProfileImageUrl))
                                {
                                    <div class="w-32 h-32 rounded-full bg-blue-100 dark:bg-gray-700 border-4 border-blue-100 dark:border-gray-700 flex items-center justify-center">
                                        <i class="fas fa-user text-blue-500 dark:text-gray-400 text-5xl"></i>
                                    </div>
                                }
                                else
                                {
                                    <img src="@Model.ProfileImageUrl" alt="المدرب" class="w-32 h-32 rounded-full object-cover border-4 border-blue-100 dark:border-gray-700">
                                }
                            </div>

                            <div>
                                <h3 class="text-2xl font-bold text-gray-800 dark:text-white mb-2">@Model.InstructorName</h3>
                                <p class="text-gray-600 dark:text-gray-300 mb-4">@Model.Title</p>
                                <div class="flex flex-wrap gap-4 mb-4">
                                    <div class="flex items-center text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 px-3 py-1 rounded-full">
                                        <i class="fas fa-user-graduate ml-2 text-blue-500"></i>
                                        <span>5,320 طالب</span>
                                    </div>
                                    <div class="flex items-center text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 px-3 py-1 rounded-full">
                                        <i class="fas fa-play-circle ml-2 text-blue-500"></i>
                                        <span>@ViewBag.Count دورات</span>
                                    </div>
                                    <div class="flex items-center text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 px-3 py-1 rounded-full">
                                        <i class="fas fa-star ml-2 text-blue-500"></i>
                                        <span>4.9 تقييم</span>
                                    </div>
                                </div>

                                <p class="text-gray-700 dark:text-gray-300 mb-4">
                                    @Model.InstructorAbout
                                </p>

                                <div class="flex flex-wrap gap-2 mb-4">
                                    @foreach (var subject in Model.InstructorSubjects)
                                    {
                                        <span class="px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full text-sm">@subject</span>
                                    }
                                </div>
                                <a asp-area="Learner"
                                   asp-controller="Profile"
                                   asp-action="InstructorProfile"
                                   asp-route-id="@Model.InstructorId"
                                   class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:underline">
                                    <span>عرض جميع الدورات</span>
                                    <i class="fas fa-arrow-left mr-2 text-sm"></i>
                                </a>

                            </div>
                        </div>
                    </div>
                </div>
                @if (ViewBag.InstructorCourses != null && ((List<EduLab_MVC.Models.DTOs.Course.CourseDTO>)ViewBag.InstructorCourses).Any())
                {
                    <section class="container mx-auto px-4 py-8">
                        <div class="flex justify-between items-center mb-6">
                            <h2 class="text-2xl font-bold text-gray-800 dark:text-white flex items-center gap-2">
                                <i class="fas fa-user-tie text-blue-500"></i>
                                دورات أخرى من @Model.InstructorName
                            </h2>
                            <a asp-area="Learner"
                               asp-controller="Profile"
                               asp-action="InstructorProfile"
                               asp-route-id="@Model.InstructorId" class="text-blue-500 hover:text-blue-700 dark:hover:text-blue-400 flex items-center gap-2">
                                عرض جميع الدورات
                                <i class="fas fa-arrow-left text-sm"></i>
                            </a>
                        </div>


                        <div class="relative">
                            <div class="swiper-container grid-mode py-2">
                                <div class="swiper-wrapper">
                                    @foreach (EduLab_MVC.Models.DTOs.Course.CourseDTO course in ViewBag.InstructorCourses)
                                    {
                                        @await Html.PartialAsync("_CourseCard", course)
                                    }
                                </div>
                            </div>
                        </div>
                    </section>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // تفعيل أكورديون المحتوى
            const accordionButtons = document.querySelectorAll('.accordion-button');
            accordionButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const item = button.closest('.accordion-item');
                    const content = item.querySelector('.accordion-content');
                    const icon = button.querySelector('i');

                    content.classList.toggle('hidden');
                    icon.classList.toggle('rotate-180');
                });
            });

            // تفعيل تبويبات المحتوى
            const tabLinks = document.querySelectorAll('#contentTabs a');
            tabLinks.forEach(link => {
                link.addEventListener('click', (e) => {
                    e.preventDefault();

                    // إزالة النشط من جميع التبويبات
                    tabLinks.forEach(tab => {
                        tab.classList.remove('active', 'text-blue-600', 'dark:text-blue-400', 'border-b-2', 'border-blue-600', 'dark:border-blue-400');
                        tab.classList.add('text-gray-500', 'dark:text-gray-400');
                    });

                    // إضافة النشط للتبويب المحدد
                    link.classList.add('active', 'text-blue-600', 'dark:text-blue-400', 'border-b-2', 'border-blue-600', 'dark:border-blue-400');
                    link.classList.remove('text-gray-500', 'dark:text-gray-400');

                    // إخفاء جميع محتويات التبويبات
                    document.querySelectorAll('.tab-content').forEach(content => {
                        content.classList.add('hidden');
                    });

                    // إظهار محتوى التبويب المحدد
                    const tabId = link.getAttribute('data-tab');
                    document.getElementById(tabId).classList.remove('hidden');
                });
            });

            // تفعيل زر عرض التعليقات
              // تفعيل زر عرض التعليقات
            const showCommentsBtn = document.getElementById('showCommentsBtn');
            const commentsSection = document.getElementById('commentsSection');

            if (showCommentsBtn && commentsSection) {
                showCommentsBtn.addEventListener('click', async () => {
                    if (commentsSection.classList.contains('hidden')) {
                        // تحميل التعليقات عند العرض لأول مرة
                        if (commentsSection.children.length === 0) {
                            await loadComments();
                        }
                        commentsSection.classList.remove('hidden');
                        showCommentsBtn.textContent = 'إخفاء التعليقات';
                    } else {
                        commentsSection.classList.add('hidden');
                        showCommentsBtn.textContent = 'عرض التعليقات';
                    }
                });
            }

            // دالة لتحميل التعليقات من API
        async function loadComments() {
            try {
                const response = await fetch(`/Learner/Rating/GetCourseRatingsJson?courseId=@Model.Id&page=1&pageSize=10`);
                if (response.ok) {
                    const result = await response.json();
                    if (result.success) {
                        displayComments(result.data);
                    } else {
                        commentsSection.innerHTML = '<p class="text-gray-500 dark:text-gray-400 text-center">فشل في تحميل التعليقات</p>';
                    }
                } else {
                    commentsSection.innerHTML = '<p class="text-gray-500 dark:text-gray-400 text-center">فشل في تحميل التعليقات</p>';
                }
            } catch (error) {
                console.error('Error loading comments:', error);
                commentsSection.innerHTML = '<p class="text-gray-500 dark:text-gray-400 text-center">حدث خطأ أثناء تحميل التعليقات</p>';
            }
        }

            // دالة لعرض التعليقات
        function displayComments(ratings) {
            if (!ratings || ratings.length === 0) {
                commentsSection.innerHTML = '<p class="text-gray-500 dark:text-gray-400 text-center py-8">لا توجد تعليقات بعد</p>';
                return;
            }

            let commentsHTML = '';
            ratings.forEach(rating => {
                const starIcons = Array.from({length: 5}, (_, i) =>
                    i < rating.value ?
                    '<i class="fas fa-star text-yellow-400 text-sm"></i>' :
                    '<i class="far fa-star text-yellow-400 text-sm"></i>'
                ).join('');

                // معالجة صورة المستخدم
                let userImage = rating.userProfileImage;
                if (userImage && !userImage.startsWith('http')) {
                    userImage = 'https://localhost:7292' + userImage;
                } else if (!userImage) {
                    // صورة افتراضية بناء على اسم المستخدم
                    const defaultImages = [
                        'https://randomuser.me/api/portraits/women/44.jpg',
                        'https://randomuser.me/api/portraits/men/22.jpg',
                        'https://randomuser.me/api/portraits/women/68.jpg',
                        'https://randomuser.me/api/portraits/men/32.jpg'
                    ];
                    const randomIndex = Math.floor(Math.random() * defaultImages.length);
                    userImage = defaultImages[randomIndex];
                }

                const timeAgo = formatDate(rating.createdAt);
                const commentText = rating.comment || 'لم يضيف المستخدم تعليقاً';

                commentsHTML += `
                    <div class="border-b border-gray-200 dark:border-gray-700 pb-6 last:border-b-0">
                        <div class="flex items-center mb-3">
                            <img src="${userImage}" alt="${rating.userName}" class="w-10 h-10 rounded-full mr-3 object-cover">
                            <div>
                                <h4 class="font-medium text-gray-800 dark:text-white">${rating.userName}</h4>
                                <div class="flex items-center">
                                    <div class="flex mr-1">
                                        ${starIcons}
                                    </div>
                                    <span class="text-xs text-gray-500 dark:text-gray-400">${timeAgo}</span>
                                </div>
                            </div>
                        </div>
                        <p class="text-gray-700 dark:text-gray-300 leading-relaxed">${commentText}</p>
                    </div>
                `;
            });

            commentsSection.innerHTML = commentsHTML;
        }


            // دالة مساعدة لتنسيق التاريخ
        function formatDate(dateString) {
            try {
                const date = new Date(dateString);
                const now = new Date();
                const diffTime = Math.abs(now - date);
                const diffMinutes = Math.floor(diffTime / (1000 * 60));
                const diffHours = Math.floor(diffTime / (1000 * 60 * 60));
                const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));

                if (diffMinutes < 1) {
                    return 'الآن';
                } else if (diffMinutes < 60) {
                    return `منذ ${diffMinutes} دقيقة`;
                } else if (diffHours < 24) {
                    return `منذ ${diffHours} ساعة`;
                } else if (diffDays === 1) {
                    return 'منذ يوم';
                } else if (diffDays < 7) {
                    return `منذ ${diffDays} أيام`;
                } else if (diffDays < 30) {
                    const weeks = Math.floor(diffDays / 7);
                    return `منذ ${weeks} أسبوع`;
                } else {
                    return date.toLocaleDateString('ar-EG', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                    });
                }
            } catch (error) {
                return 'تاريخ غير معروف';
            }
        }
        });
    </script>
    <script>
                // التحقق من حالة المستخدم عند تحميل الصفحة
        document.addEventListener('DOMContentLoaded', function() {
            // إذا كان المستخدم مسجلاً في الكورس، تحديث الواجهة
            @if (ViewBag.IsUserEnrolled == true)
            {
                        <text>
                        const addToCartBtn = document.querySelector('.add-to-cart-btn');
                        if (addToCartBtn) {
                            addToCartBtn.innerHTML = '<i class="fas fa-play-circle"></i> ابدأ التعلم الآن';
                            addToCartBtn.classList.remove('bg-blue-600', 'hover:bg-blue-700');
                            addToCartBtn.classList.add('bg-green-600', 'hover:bg-green-700');
                            addToCartBtn.onclick = function() {
                                window.location.href = '@Url.Action("Watch", "Course", new { area = "Learner", id = Model.Id })';
                            };
                        }
                        </text>
            }
            else if (ViewBag.IsCourseInCart == true)
            {
                        <text>
                        const addToCartBtn = document.querySelector('.add-to-cart-btn');
                        if (addToCartBtn) {
                            addToCartBtn.innerHTML = '<i class="fas fa-shopping-cart"></i> مضافة إلى السلة';
                            addToCartBtn.classList.remove('bg-blue-600', 'hover:bg-blue-700');
                            addToCartBtn.classList.add('bg-orange-500');
                            addToCartBtn.disabled = true;
                            addToCartBtn.onclick = null;
                        }
                        </text>
            }
        });
                // دالة إضافة/إزالة من المفضلة لصفحة التفاصيل
        // دالة إضافة/إزالة من المفضلة لصفحة التفاصيل - الإصدار المصحح
        async function toggleWishlist(courseId, buttonElement) {
            let button;
            if (buttonElement) {
                button = buttonElement;
            } else {
                button = event.currentTarget;
            }

            const isCurrentlyActive = button.classList.contains('active');
            const action = isCurrentlyActive ? 'remove' : 'add';

            const text = button.querySelector('.btn-text');
            const spinner = button.querySelector('.loading-spinner');

            // حفظ الحالة الأصلية
            const originalContent = text.innerHTML;

            // Show loading state
            button.classList.add('loading');
            if (spinner) {
                spinner.classList.remove('hidden');
            }
            button.disabled = true;

            try {
                const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
                const headers = {
                    'Content-Type': 'application/json'
                };

                if (tokenElement) {
                    headers['RequestVerificationToken'] = tokenElement.value;
                }

                const url = action === 'add'
                    ? '/Learner/Wishlist/AddToWishlist'
                    : '/Learner/Wishlist/RemoveFromWishlist';

                console.log(`Sending ${action} request to: ${url} for course: ${courseId}`);

                const response = await fetch(url, {
                    method: 'POST',
                    headers: headers,
                    body: JSON.stringify({ courseId: courseId })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log('Wishlist response:', result);

                    if (result.success) {
                        // تحديث حالة جميع الأزرار لهذا الكورس
                        updateAllWishlistButtons(courseId, action === 'add');

                        // تحديث العداد في الهيدر إذا كان موجود
                        const wishlistCount = document.querySelector('[data-wishlist-count]');
                        if (wishlistCount) {
                            wishlistCount.textContent = result.wishlistCount || 0;
                            wishlistCount.classList.add('wishlist-pulse');
                            wishlistCount.addEventListener('animationend', () => {
                                wishlistCount.classList.remove('wishlist-pulse');
                            }, { once: true });
                        }

                        // إظهار رسالة النجاح
                        const message = action === 'add'
                            ? 'تمت إضافة الدورة إلى المفضلة بنجاح'
                            : 'تمت إزالة الدورة من المفضلة بنجاح';
                        showSuccess(message);

                    } else {
                        throw new Error(result.message || 'فشل العملية');
                    }
                } else {
                    const errorText = await response.text();
                    throw new Error(`فشل في الاتصال بالخادم: ${response.status} - ${errorText}`);
                }
            } catch (error) {
                console.error('Error:', error);

                // إعادة الزر إلى حالته الأصلية في حالة الخطأ
                button.classList.remove('loading');
                if (spinner) {
                    spinner.classList.add('hidden');
                }
                text.innerHTML = originalContent;

                showError(error.message || 'حدث خطأ أثناء تحديث المفضلة');

                // إعادة تفعيل الزر بعد فترة قصيرة
                setTimeout(() => {
                    button.disabled = false;
                }, 1000);
            }
        }

        // تحديث جميع أزرار المفضلة لهذا الكورس في الصفحة - الإصدار المصحح
        function updateAllWishlistButtons(courseId, isAdded) {
            const buttons = document.querySelectorAll(`button[onclick*="toggleWishlist(${courseId}"]`);

            buttons.forEach(button => {
                const text = button.querySelector('.btn-text');
                const spinner = button.querySelector('.loading-spinner');

                // إزالة حالة التحميل أولاً
                button.classList.remove('loading');
                if (spinner) {
                    spinner.classList.add('hidden');
                }
                button.disabled = false;

                if (isAdded) {
                    button.classList.add('active');
                    if (text) {
                        text.innerHTML = '<i class="fas fa-heart text-red-500"></i><span>في المفضلة</span>';
                    }

                    // إضافة تأثير النبض
                    button.classList.add('wishlist-pulse');
                    setTimeout(() => {
                        button.classList.remove('wishlist-pulse');
                    }, 400);
                } else {
                    button.classList.remove('active');
                    if (text) {
                        text.innerHTML = '<i class="far fa-heart"></i><span>حفظ في المفضلة</span>';
                    }
                }
            });
        }
        // Add to cart function for course cards
        async function addToCart(courseId, buttonElement = null) {
            // تحديد الزر الذي تم النقر عليه
            let button;
            if (buttonElement) {
                button = buttonElement;
            } else {
                button = event.currentTarget;
            }

            const originalText = button.querySelector('.btn-text') ? button.querySelector('.btn-text').innerHTML : button.innerHTML;
            const spinner = button.querySelector('.loading-spinner');

            // Show loading state
            if (spinner) {
                spinner.classList.remove('hidden');
                button.classList.add('loading');
            } else {
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> جاري الإضافة...';
            }
            button.disabled = true;

            try {
                // الحصول على الـ token إذا كان موجوداً
                const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
                const headers = {
                    'Content-Type': 'application/json'
                };

                // إضافة الـ token فقط إذا كان موجوداً
                if (tokenElement) {
                    headers['RequestVerificationToken'] = tokenElement.value;
                }

                const response = await fetch('/Learner/Cart/AddToCart', {
                    method: 'POST',
                    headers: headers,
                    body: JSON.stringify({ courseId: courseId, quantity: 1 })
                });

                if (response.ok) {
                    const result = await response.json();

                    if (result.success) {
                        // Show success message using layout's notification system
                        showSuccess(result.message || 'تمت إضافة الدورة إلى السلة بنجاح');

                        // Update cart count in header
                        const cartCount = document.querySelector('[data-cart-count]');
                        if (cartCount) {
                            cartCount.textContent = result.cartCount || result.totalItems;
                            cartCount.classList.add('cart-pulse');
                            cartCount.addEventListener('animationend', () => {
                                cartCount.classList.remove('cart-pulse');
                            }, { once: true });
                        }

                        // Button success state
                        if (spinner) {
                            button.classList.remove('loading', 'bg-blue-600');
                            button.classList.add('bg-green-600', 'hover:bg-green-700');
                            spinner.classList.add('hidden');
                            button.querySelector('.btn-text').innerHTML = '<i class="fas fa-check"></i> تمت الإضافة';
                        } else {
                            button.innerHTML = '<i class="fas fa-check"></i> تمت الإضافة';
                            button.classList.add('bg-green-600', 'hover:bg-green-700');
                        }

                        // Revert after 2 seconds
                        setTimeout(() => {
                            if (spinner) {
                                button.classList.remove('bg-green-600', 'hover:bg-green-700');
                                button.classList.add('bg-blue-600');
                                button.querySelector('.btn-text').innerHTML = originalText;
                            } else {
                                button.innerHTML = originalText;
                                button.classList.remove('bg-green-600', 'hover:bg-green-700');
                            }
                            button.disabled = false;
                        }, 2000);

                    } else {
                        throw new Error(result.message || 'Failed to add to cart');
                    }
                } else {
                    // إذا كان الرد غير ناجح، حاول الحصول على الرسالة من الـ response
                    let errorMessage = 'Failed to add to cart';
                    try {
                        const errorResult = await response.json();
                        errorMessage = errorResult.message || errorMessage;
                    } catch (e) {
                        // إذا فشل تحليل JSON، استخدم الرسالة الافتراضية
                    }
                    throw new Error(errorMessage);
                }
            } catch (error) {
                console.error('Error:', error);

                // Show error state
                if (spinner) {
                    button.classList.remove('loading');
                    spinner.classList.add('hidden');
                    button.querySelector('.btn-text').innerHTML = '<i class="fas fa-times"></i> خطأ';
                    button.classList.remove('bg-blue-600');
                    button.classList.add('bg-red-600', 'hover:bg-red-700');
                } else {
                    button.innerHTML = '<i class="fas fa-times"></i> خطأ';
                    button.classList.add('bg-red-600', 'hover:bg-red-700');
                }

                showError(error.message || 'حدث خطأ أثناء إضافة الدورة إلى السلة');

                // Revert after 2 seconds
                setTimeout(() => {
                    if (spinner) {
                        button.classList.remove('bg-red-600', 'hover:bg-red-700');
                        button.classList.add('bg-blue-600');
                        button.querySelector('.btn-text').innerHTML = originalText;
                    } else {
                        button.innerHTML = originalText;
                        button.classList.remove('bg-red-600', 'hover:bg-red-700');
                    }
                    button.disabled = false;
                }, 2000);
            }
        }

        // دالة مساعدة لإضافة عنصر للسلة من أي مكان
        function addToCartFromAnywhere(courseId) {
            addToCart(courseId);
        }
                // Add to cart function for course details page
        async function addToCart(courseId, buttonElement = null) {
            let button;
            if (buttonElement) {
                button = buttonElement;
            } else {
                button = event.currentTarget;
            }

            const originalText = button.querySelector('.btn-text') ? button.querySelector('.btn-text').innerHTML : button.innerHTML;
            const spinner = button.querySelector('.loading-spinner');

            // Show loading state
            if (spinner) {
                spinner.classList.remove('hidden');
                button.classList.add('loading');
            } else {
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> جاري الإضافة...';
            }
            button.disabled = true;

            try {
                const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
                const headers = {
                    'Content-Type': 'application/json'
                };

                if (tokenElement) {
                    headers['RequestVerificationToken'] = tokenElement.value;
                }

                const response = await fetch('/Learner/Cart/AddToCart', {
                    method: 'POST',
                    headers: headers,
                    body: JSON.stringify({ courseId: courseId, quantity: 1 })
                });

                if (response.ok) {
                    const result = await response.json();

                    if (result.success) {
                        showSuccess(result.message || 'تمت إضافة الدورة إلى السلة بنجاح');

                        // تحديث حالة الزر إلى "في السلة"
                        if (spinner) {
                            button.classList.remove('loading', 'bg-blue-600', 'hover:bg-blue-700');
                            button.classList.add('bg-orange-500');
                            spinner.classList.add('hidden');
                            button.querySelector('.btn-text').innerHTML = '<i class="fas fa-shopping-cart"></i> مضافة إلى السلة';
                        } else {
                            button.innerHTML = '<i class="fas fa-shopping-cart"></i> مضافة إلى السلة';
                            button.classList.remove('bg-blue-600', 'hover:bg-blue-700');
                            button.classList.add('bg-orange-500');
                        }

                        // تعطيل الزر نهائياً
                        button.disabled = true;
                        button.onclick = null;

                        // Update cart count in header
                        const cartCount = document.querySelector('[data-cart-count]');
                        if (cartCount) {
                            cartCount.textContent = result.cartCount || result.totalItems;
                            cartCount.classList.add('cart-pulse');
                            cartCount.addEventListener('animationend', () => {
                                cartCount.classList.remove('cart-pulse');
                            }, { once: true });
                        }

                        // إضافة زر "اذهب إلى السلة" ديناميكياً
                        const buttonsContainer = button.closest('.space-y-3');
                        const buyNowButton = buttonsContainer.querySelector('button:last-child');

                        if (buyNowButton && !buttonsContainer.querySelector('.go-to-cart-btn')) {
                            const goToCartBtn = document.createElement('a');
                            goToCartBtn.href = '/Learner/Cart';
                            goToCartBtn.className = 'w-full bg-gradient-to-r from-blue-600 to-blue-500 hover:from-blue-700 hover:to-blue-600 text-white py-3 rounded-lg font-medium flex items-center justify-center gap-2 transition transform hover:-translate-y-0.5 shadow-md shadow-blue-500/20 go-to-cart-btn';
                            goToCartBtn.innerHTML = '<i class="fas fa-shopping-cart"></i> اذهب إلى السلة';

                            buttonsContainer.insertBefore(goToCartBtn, buyNowButton);
                        }

                    } else {
                        throw new Error(result.message || 'Failed to add to cart');
                    }
                } else {
                    let errorMessage = 'Failed to add to cart';
                    try {
                        const errorResult = await response.json();
                        errorMessage = errorResult.message || errorMessage;
                    } catch (e) {
                    }
                    throw new Error(errorMessage);
                }
            } catch (error) {
                console.error('Error:', error);

                // Show error state
                if (spinner) {
                    button.classList.remove('loading');
                    spinner.classList.add('hidden');
                    button.querySelector('.btn-text').innerHTML = '<i class="fas fa-times"></i> خطأ';
                    button.classList.remove('bg-blue-600');
                    button.classList.add('bg-red-600', 'hover:bg-red-700');
                } else {
                    button.innerHTML = '<i class="fas fa-times"></i> خطأ';
                    button.classList.add('bg-red-600', 'hover:bg-red-700');
                }

                showError(error.message || 'حدث خطأ أثناء إضافة الدورة إلى السلة');

                // العودة إلى الحالة الأصلية بعد ثانيتين
                setTimeout(() => {
                    if (spinner) {
                        button.classList.remove('bg-red-600', 'hover:bg-red-700');
                        button.classList.add('bg-blue-600', 'hover:bg-blue-700');
                        button.querySelector('.btn-text').innerHTML = originalText;
                    } else {
                        button.innerHTML = originalText;
                        button.classList.remove('bg-red-600', 'hover:bg-red-700');
                        button.classList.add('bg-blue-600', 'hover:bg-blue-700');
                    }
                    button.disabled = false;
                }, 2000);
            }
        }

        // دوال المشاركة
        function shareOnFacebook() {
            const url = encodeURIComponent(window.location.href);
            const title = encodeURIComponent('@Model.Title');
            window.open(`https://www.facebook.com/sharer/sharer.php?u=${url}&quote=${title}`, '_blank', 'width=600,height=400');
        }

        function shareOnTwitter() {
            const url = encodeURIComponent(window.location.href);
            const text = encodeURIComponent('@Model.Title');
            window.open(`https://twitter.com/intent/tweet?url=${url}&text=${text}`, '_blank', 'width=600,height=400');
        }

        function shareOnInstagram() {
            const url = encodeURIComponent(window.location.href);
            window.open(`https://www.instagram.com/`, '_blank');
            alert('افتح إنستغرام وانشر الرابط يدوياً: ' + window.location.href);
        }

        function shareOnWhatsApp() {
            const text = encodeURIComponent('@Model.Title: ' + window.location.href);
            window.open(`https://wa.me/?text=${text}`, '_blank');
        }

        function shareOnLinkedIn() {
            const url = encodeURIComponent(window.location.href);
            const title = encodeURIComponent('@Model.Title');
            window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${url}&title=${title}`, '_blank', 'width=600,height=400');
        }

        async function copyLink() {
            try {
                await navigator.clipboard.writeText(window.location.href);
                showSuccess('تم نسخ الرابط بنجاح!');
            } catch (err) {
                const textArea = document.createElement('textarea');
                textArea.value = window.location.href;
                document.body.appendChild(textArea);
                textArea.select();
                document.execCommand('copy');
                document.body.removeChild(textArea);
                showSuccess('تم نسخ الرابط بنجاح!');
            }
        }
    </script>
}