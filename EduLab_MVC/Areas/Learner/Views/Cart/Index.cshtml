@model EduLab_MVC.Models.DTOs.Cart.CartDto
@{
    ViewData["Title"] = "عربة التسوق - EduLab";
}

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <h1 class="text-4xl font-extrabold text-blue-600 text-center mb-8 pb-5 relative after:content-[''] after:absolute after:bottom-0 after:left-1/2 after:-translate-x-1/2 after:w-24 after:h-1 after:bg-gradient-to-r after:from-blue-600 after:to-transparent after:rounded">
        عربة التسوق
    </h1>

    <div class="@(!Model.Items.Any() ? "flex justify-center" : "grid lg:grid-cols-3 gap-8")">
        @if (Model.Items.Any())
        {
            <div class="lg:col-span-2">
                <div class="bg-white rounded-2xl shadow-xl dark:bg-gray-800 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-600 to-indigo-500 p-5 text-white flex justify-between items-center rounded-t-2xl">
                        <h2 class="text-lg font-semibold">الدورات المضافة</h2>
                        <span class="text-sm bg-white bg-opacity-20 px-2 py-1 rounded-full" id="cart-items-count">
                            @Model.Items.Count عناصر
                        </span>
                    </div>

                    <div id="cart-items-container">
                        @foreach (var item in Model.Items)
                        {
                            <div class="flex p-6 border-b border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-900 transition-colors duration-300 relative cart-item" id="cart-item-@item.Id">
                                <button onclick="removeItem(@item.Id)"
                                        class="absolute bottom-4 left-4 bg-gray-100 dark:bg-gray-700 w-10 h-10 rounded-full flex items-center justify-center text-red-500 hover:bg-red-500 hover:text-white transition-colors duration-300 shadow-md"
                                        title="إزالة من العربة">
                                    <i class="fas fa-trash-alt text-base"></i>
                                </button>

                                <img src="@item.ThumbnailUrl" alt="@item.CourseTitle"
                                     class="w-24 h-24 rounded-xl object-cover shadow-md transition-transform duration-300 hover:scale-105">

                                <div class="flex-grow px-6">
                                    <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100">@item.CourseTitle</h3>
                                    <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">مع المدرب: @item.InstructorName</p>
                                    <span class="text-lg font-bold text-blue-600" id="price-@item.Id">
                                        @item.TotalPrice.ToString("N0") ج.م
                                    </span>
                                </div>
                            </div>

                        }
                    </div>
                </div>

                <a asp-area="Learner" asp-controller="Course" asp-action="Index" class="inline-flex items-center gap-2 text-blue-600 font-semibold mt-6 hover:text-blue-700 transition-all duration-300 transform hover:-translate-y-0.5">
                    <i class="fas fa-arrow-right"></i>
                    الاستمرار في التسوق
                </a>
            </div>

            <div>
                <div class="bg-white rounded-2xl shadow-xl p-6 sticky top-8 dark:bg-gray-800 transition-all duration-300 hover:shadow-2xl">
                    <h2 class="text-xl font-bold text-gray-900 dark:text-gray-100 mb-6 relative after:content-[''] after:absolute after:bottom-0 after:left-0 after:w-10 after:h-1 after:bg-blue-600 after:rounded">ملخص الطلب</h2>

                    <div class="space-y-3">
                        <div class="flex justify-between py-3 border-b border-dashed border-gray-200 dark:border-gray-700">
                            <span class="dark:text-white">المجموع الفرعي</span>
                            <span id="subtotal-price" class="dark:text-white">@Model.TotalPrice.ToString("N0") ج.م</span>
                        </div>
                        <div class="flex justify-between py-3 border-b border-dashed border-gray-200 dark:border-gray-700">
                            <span class="dark:text-white">الخصم</span>
                            <span class="text-green-600 dark:text-green-400" id="discount-amount">-0 ج.م</span>
                        </div>
                        <div class="flex justify-between py-4 font-bold text-lg text-gray-900 dark:text-gray-100">
                            <span>المجموع الكلي</span>
                            <span id="total-price">@Model.TotalPrice.ToString("N0") ج.م</span>
                        </div>
                    </div>

                    <a href="#" onclick="handleCheckout(event)" class="block w-full bg-blue-600 text-white text-center py-4 rounded-xl font-semibold hover:bg-blue-700 transition-all duration-300 shadow-lg hover:shadow-xl mt-6 transform hover:-translate-y-0.5 checkout-btn">
                        إتمام الشراء
                    </a>

                    <div class="text-center mt-6 pt-6 border-t border-dashed border-gray-200 dark:border-gray-700">
                        <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">أو استخدم</p>
                        <div class="flex justify-center gap-3">
                            <div class="w-10 h-10 rounded-lg bg-gray-100 dark:bg-gray-700 flex items-center justify-center text-gray-600 dark:text-gray-400 hover:shadow-md transition-all duration-300 hover:scale-110">
                                <i class="fab fa-cc-paypal"></i>
                            </div>
                            <div class="w-10 h-10 rounded-lg bg-gray-100 dark:bg-gray-700 flex items-center justify-center text-gray-600 dark:text-gray-400 hover:shadow-md transition-all duration-300 hover:scale-110">
                                <i class="fab fa-cc-visa"></i>
                            </div>
                            <div class="w-10 h-10 rounded-lg bg-gray-100 dark:bg-gray-700 flex items-center justify-center text-gray-600 dark:text-gray-400 hover:shadow-md transition-all duration-300 hover:scale-110">
                                <i class="fab fa-cc-mastercard"></i>
                            </div>
                        </div>
                    </div>

                    <button onclick="showClearCartModal()" class="flex items-center justify-center gap-2 w-full bg-gray-100 dark:bg-gray-900 text-red-500 border border-gray-200 dark:border-gray-700 py-3 rounded-xl font-semibold hover:bg-red-500 hover:text-white transition-all duration-300 mt-4 transform hover:-translate-y-0.5">
                        <i class="fas fa-trash-alt"></i>
                        تفريغ السلة
                    </button>
                </div>
            </div>
        }
        else
        {
            <div class="w-full max-w-xl mx-auto">
                <div class="bg-white rounded-2xl shadow-xl dark:bg-gray-800 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-600 to-indigo-500 p-5 text-white flex justify-between items-center rounded-t-2xl">
                        <h2 class="text-lg font-semibold">الدورات المضافة</h2>
                        <span class="text-sm bg-white bg-opacity-20 px-2 py-1 rounded-full" id="cart-items-count">0 عناصر</span>
                    </div>

                    <div class="p-8 text-center bg-white dark:bg-gray-800 rounded-b-2xl">
                        <div class="text-5xl text-gray-300 mb-6 animate-bounce">
                            <i class="fas fa-shopping-cart"></i>
                        </div>
                        <h3 class="text-2xl font-bold text-gray-600 dark:text-gray-400 mb-4">عربة التسوق فارغة</h3>
                        <p class="text-gray-500 dark:text-gray-500 mb-6 max-w-md mx-auto leading-relaxed">
                            لم تقم بإضافة أي دورات إلى عربة التسوق بعد. ابدأ رحلتك التعليمية الآن!
                        </p>
                        <a asp-area="Learner" asp-controller="Course" asp-action="Index" class="inline-flex items-center gap-2 bg-blue-600 text-white py-3 px-6 rounded-full font-semibold hover:bg-blue-700 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5">
                            <i class="fas fa-shopping-bag"></i>
                            ابدأ بالتسوق الآن
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Checkout Modal -->
    <div id="checkout-modal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm hidden flex items-center justify-center z-[1000] p-4 opacity-0 transition-opacity duration-300">
        <div class="bg-white rounded-xl w-full max-w-md max-h-[90vh] overflow-y-auto shadow-2xl dark:bg-gray-800 transform scale-95 transition-transform duration-300">
            <div class="p-5 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center">
                <h3 class="text-xl font-semibold">تأكيد عملية الشراء</h3>
                <button onclick="hideCheckoutModal()" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors duration-300">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="p-5">
                <p>هل أنت متأكد من أنك تريد إتمام عملية الشراء؟</p>
                <div class="bg-gray-50 dark:bg-gray-900 rounded-lg p-4 mt-4">
                    <div class="flex justify-between mb-2">
                        <span>عدد الدورات:</span>
                        <span id="modal-courses-count">@Model.Items.Count</span>
                    </div>
                    <div class="flex justify-between">
                        <span>المجموع الكلي:</span>
                        <span id="modal-total-price">@Model.TotalPrice.ToString("N0") ج.م</span>
                    </div>
                </div>
            </div>
            <div class="p-5 border-t border-gray-200 dark:border-gray-700 flex justify-end gap-3">
                <button onclick="hideCheckoutModal()" class="bg-gray-200 text-gray-600 px-5 py-2 rounded-lg hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600 transition-all duration-300">إلغاء</button>
                <button onclick="proceedToCheckout()" class="bg-blue-600 text-white px-5 py-2 rounded-lg hover:bg-blue-700 transition-all duration-300 transform hover:-translate-y-0.5">متابعة إلى الدفع</button>
            </div>
        </div>
    </div>

    <!-- Clear Cart Modal -->
    <div id="clear-cart-modal" class="fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm hidden flex items-center justify-center z-[1000] p-4 opacity-0 transition-opacity duration-300">
        <div class="bg-white rounded-xl max-w-sm w-full shadow-2xl dark:bg-gray-800 transform scale-95 transition-transform duration-300">
            <div class="p-8 text-center">
                <div class="w-16 h-16 rounded-full bg-red-100 text-red-500 flex items-center justify-center mx-auto mb-4 text-2xl animate-pulse">
                    <i class="fas fa-exclamation-triangle"></i>
                </div>
                <h3 class="text-xl font-bold text-gray-900 dark:text-gray-100 mb-2">تفريغ السلة</h3>
                <p class="text-gray-600 dark:text-gray-400 mb-6">هل أنت متأكد من أنك تريد تفريغ سلة التسوق؟ سيتم حذف جميع العناصر ولا يمكن التراجع عن هذا الإجراء.</p>
                <div class="flex justify-center gap-3">
                    <button onclick="hideClearCartModal()" class="bg-gray-200 text-gray-600 px-4 py-2 rounded-lg hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600 transition-all duration-300">إلغاء</button>
                    <button onclick="clearCartConfirmed()" class="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-all duration-300 transform hover:-translate-y-0.5">تأكيد</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast Notification -->
    <div id="toast" class="fixed top-6 right-6 bg-white rounded-xl shadow-lg p-4 flex items-center gap-3 max-w-xs z-[1000] translate-x-full opacity-0 transition-all duration-500 dark:bg-gray-800 border-l-4 border-green-500">
        <div class="toast-icon text-lg text-green-500">
            <i class="fas fa-check-circle"></i>
        </div>
        <div class="toast-content flex-grow">
            <p class="toast-message text-gray-900 dark:text-gray-100 font-medium" id="toast-message"></p>
        </div>
        <button onclick="hideToast()" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 transition-colors duration-300">
            <i class="fas fa-times"></i>
        </button>
    </div>
</div>

<script>
    let isLoading = false;

    document.addEventListener('DOMContentLoaded', function() {
        initializeCartUI();
        setupEventListeners();
    });

    function initializeCartUI() {
        setupScrollEffects();
    }

    function setupEventListeners() {
        window.addEventListener('error', function(e) {
            console.error('JavaScript Error:', e.error);
            showToast('حدث خطأ غير متوقع', 'error');
        });

        window.addEventListener('online', function() {
            showSuccess('تم استعادة الاتصال بالإنترنت', 'success');
        });

        window.addEventListener('offline', function() {
            showError('فقدان الاتصال بالإنترنت', 'warning');
        });
    }

    function setupScrollEffects() {
        const cartItems = document.querySelectorAll('.cart-item');
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = "1";
                    entry.target.style.transform = "translateY(0)";
                }
            });
        }, { threshold: 0.1 });

        cartItems.forEach(item => {
            item.style.opacity = "0";
            item.style.transform = "translateY(20px)";
            item.style.transition = "opacity 0.5s ease, transform 0.5s ease";
            observer.observe(item);
        });
    }

    function showClearCartModal() {
        const modal = document.getElementById('clear-cart-modal');
        if (modal) {
            modal.classList.remove('hidden');
            modal.classList.add('flex');
            document.body.style.overflow = 'hidden';

            // Animation
            setTimeout(() => {
                modal.classList.remove('opacity-0');
                modal.querySelector('div').classList.remove('scale-95');
            }, 10);
        }
    }

    function hideClearCartModal() {
        const modal = document.getElementById('clear-cart-modal');
        if (modal) {
            modal.classList.add('opacity-0');
            modal.querySelector('div').classList.add('scale-95');

            setTimeout(() => {
                modal.classList.add('hidden');
                modal.classList.remove('flex');
                document.body.style.overflow = 'auto';
            }, 300);
        }
    }

    function showCheckoutModal() {
        const modal = document.getElementById('checkout-modal');
        if (modal) {
            modal.classList.remove('hidden');
            modal.classList.add('flex');
            document.body.style.overflow = 'hidden';

            // Animation
            setTimeout(() => {
                modal.classList.remove('opacity-0');
                modal.querySelector('div').classList.remove('scale-95');
            }, 10);
        }
    }

    function hideCheckoutModal() {
        const modal = document.getElementById('checkout-modal');
        if (modal) {
            modal.classList.add('opacity-0');
            modal.querySelector('div').classList.add('scale-95');

            setTimeout(() => {
                modal.classList.add('hidden');
                modal.classList.remove('flex');
                document.body.style.overflow = 'auto';
            }, 300);
        }
    }

    async function removeItem(cartItemId) {
        if (isLoading) return;

        isLoading = true;
        const itemElement = document.getElementById(`cart-item-${cartItemId}`);

        if (!itemElement) {
            isLoading = false;
            return;
        }

        itemElement.style.transition = 'all 0.3s ease';
        itemElement.style.transform = 'translateX(100%)';
        itemElement.style.opacity = '0';

        try {
            const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;

            const response = await fetch(`/Learner/Cart/RemoveItem?cartItemId=${cartItemId}`, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': token,
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                const result = await response.json();
                if (result.success) {
                    setTimeout(() => {
                        itemElement.remove();
                        updateCartUI(result);
                        showSuccess('تم إزالة المنتج من السلة بنجاح');

                        if (result.totalItems === 0) {
                            setTimeout(() => location.reload(), 1000);
                        }
                    }, 300);
                } else {
                    showError(result.message || 'حدث خطأ أثناء إزالة المنتج', 'error');
                    itemElement.style.transform = 'translateX(0)';
                    itemElement.style.opacity = '1';
                }
            } else {
                showError('حدث خطأ أثناء إزالة المنتج', 'error');
                itemElement.style.transform = 'translateX(0)';
                itemElement.style.opacity = '1';
            }
        } catch (error) {
            console.error('Error:', error);
            showError('حدث خطأ في الاتصال', 'error');
            itemElement.style.transform = 'translateX(0)';
            itemElement.style.opacity = '1';
        } finally {
            isLoading = false;
        }
    }

    async function clearCartConfirmed() {
        if (isLoading) return;

        isLoading = true;
        hideClearCartModal();

        const cartItems = document.querySelectorAll('.cart-item');
        cartItems.forEach(item => {
            item.classList.add('opacity-70', 'pointer-events-none', 'animate-pulse');
        });

        try {
            const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;

            const response = await fetch('/Learner/Cart/ClearCart', {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': token,
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                const result = await response.json();
                if (result.success) {
                    showSuccess('تم تفريغ السلة بنجاح');
                    cartItems.forEach((item, index) => {
                        setTimeout(() => {
                            item.style.transition = 'all 0.3s ease';
                            item.style.transform = 'translateX(100%)';
                            item.style.opacity = '0';
                        }, index * 100);
                    });
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showError(result.message || 'حدث خطأ أثناء تفريغ السلة', 'error');
                    cartItems.forEach(item => {
                        item.classList.remove('opacity-70', 'pointer-events-none', 'animate-pulse');
                    });
                }
            } else {
                showError('حدث خطأ أثناء تفريغ السلة', 'error');
                cartItems.forEach(item => {
                    item.classList.remove('opacity-70', 'pointer-events-none', 'animate-pulse');
                });
            }
        } catch (error) {
            console.error('Error:', error);
            showError('حدث خطأ في الاتصال', 'error');
            cartItems.forEach(item => {
                item.classList.remove('opacity-70', 'pointer-events-none', 'animate-pulse');
            });
        } finally {
            isLoading = false;
        }
    }

    async function handleCheckout(event) {
        event.preventDefault();
        const isValid = await validateCartBeforeCheckout();
        if (!isValid) return;

        const isAvailable = await checkProductsAvailability();
        if (!isAvailable) return;

        showCheckoutModal();
    }

    function setupCheckoutShortcut() {
        document.addEventListener('keydown', function(e) {
            if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {
                const checkoutBtn = document.querySelector('.checkout-btn');
                if (checkoutBtn && checkoutBtn.offsetParent !== null) {
                    handleCheckout(new Event('click'));
                }
            }
        });
    }

    document.addEventListener('DOMContentLoaded', function() {
        setupCheckoutShortcut();
        if (typeof gtag !== 'undefined') {
            gtag('event', 'view_cart', {
                'currency': 'EGP',
                'value': @Model.TotalPrice,
                'items': [
                @foreach (var item in Model.Items)
                {
                            <text>
                            {
                                'item_id': '@item.CourseId',
                                'item_name': '@item.CourseTitle',
                                'price': @item.CoursePrice,
                                'quantity': @item.Quantity
                            },
                            </text>
                }
                ]
            });
        }
    });

    function updateCartUI(cart) {
        if (!cart) return;

        const countElement = document.getElementById('cart-items-count');
        if (countElement) {
            countElement.textContent = `${cart.totalItems} عناصر`;
        }

        const subtotalElement = document.getElementById('subtotal-price');
        const totalElement = document.getElementById('total-price');

        if (subtotalElement && totalElement) {
            const currentSubtotal = parseFloat(subtotalElement.dataset.current || cart.totalPrice);
            const currentTotal = parseFloat(totalElement.dataset.current || cart.totalPrice);

            animateValue(subtotalElement, currentSubtotal, cart.totalPrice, 500, true);
            animateValue(totalElement, currentTotal, cart.totalPrice, 500, true);

            subtotalElement.dataset.current = cart.totalPrice;
            totalElement.dataset.current = cart.totalPrice;
        }

        const headerCartCount = document.querySelector('[data-cart-count]');
        if (headerCartCount) {
            headerCartCount.textContent = cart.totalItems;
        }
    }

    function animateValue(element, start, end, duration, isPrice = false) {
        if (!element) return;

        const startTimestamp = performance.now();
        const step = (timestamp) => {
            const progress = Math.min((timestamp - startTimestamp) / duration, 1);
            const value = progress * (end - start) + start;

            if (isPrice) {
                element.textContent = `${Math.floor(value).toLocaleString()} ج.م`;
            } else {
                element.textContent = Math.floor(value);
            }

            if (progress < 1) {
                window.requestAnimationFrame(step);
            }
        };
        window.requestAnimationFrame(step);
    }

    function showToast(message, type = 'success') {
        const toast = document.getElementById('toast');
        const toastMessage = document.getElementById('toast-message');
        const toastIcon = toast.querySelector('.toast-icon');

        if (!toast || !toastMessage) return;

        // Update styles based on type
        if (type === 'success') {
            toast.className = 'fixed top-6 right-6 bg-white rounded-xl shadow-lg p-4 flex items-center gap-3 max-w-xs z-[1000] translate-x-full opacity-0 transition-all duration-500 dark:bg-gray-800 border-l-4 border-green-500';
            toastIcon.innerHTML = '<i class="fas fa-check-circle text-green-500"></i>';
        } else if (type === 'error') {
            toast.className = 'fixed top-6 right-6 bg-white rounded-xl shadow-lg p-4 flex items-center gap-3 max-w-xs z-[1000] translate-x-full opacity-0 transition-all duration-500 dark:bg-gray-800 border-l-4 border-red-500';
            toastIcon.innerHTML = '<i class="fas fa-exclamation-circle text-red-500"></i>';
        } else {
            toast.className = 'fixed top-6 right-6 bg-white rounded-xl shadow-lg p-4 flex items-center gap-3 max-w-xs z-[1000] translate-x-full opacity-0 transition-all duration-500 dark:bg-gray-800 border-l-4 border-yellow-500';
            toastIcon.innerHTML = '<i class="fas fa-exclamation-triangle text-yellow-500"></i>';
        }

        toastMessage.textContent = message;

        // Show toast with animation
        setTimeout(() => {
            toast.classList.remove('translate-x-full', 'opacity-0');
            toast.classList.add('translate-x-0', 'opacity-100');
        }, 10);

        // Auto hide after 3 seconds
        setTimeout(() => {
            hideToast();
        }, 3000);
    }

    function hideToast() {
        const toast = document.getElementById('toast');
        if (toast) {
            toast.classList.remove('translate-x-0', 'opacity-100');
            toast.classList.add('translate-x-full', 'opacity-0');
        }
    }

    function showSuccess(message) {
        showToast(message, 'success');
    }

    function showError(message) {
        showToast(message, 'error');
    }

    function proceedToCheckout() {
        hideCheckoutModal();
        window.location.href = '@Url.Action("Checkout", "Payment", new { area = "Learner" })';
    }

    async function validateCartBeforeCheckout() {
        const totalItems = @Model.Items.Count;
        if (totalItems === 0) {
            showError('عربة التسوق فارغة. أضف دورات قبل المتابعة إلى الدفع', 'error');
            return false;
        }
        return true;
    }


    document.addEventListener('DOMContentLoaded', function() {
        const checkoutBtn = document.querySelector('.checkout-btn');
        if (checkoutBtn) {
            checkoutBtn.addEventListener('click', async function(e) {
                e.preventDefault();
                const isValid = await validateCartBeforeCheckout();
                if (isValid) {
                    showCheckoutModal();
                }
            });
        }
    });

    async function checkProductsAvailability() {
        try {
            setCheckoutLoading(true);
            const response = await fetch('@Url.Action("CheckAvailability", "Cart")');
            const result = await response.json();

            if (result.success) {
                if (result.outOfStockItems && result.outOfStockItems.length > 0) {
                    showError(`بعض المنتجات غير متوفرة: ${result.outOfStockItems.join(', ')}`, 'error');
                    return false;
                }
                return true;
            } else {
                showError('حدث خطأ أثناء التحقق من توفر المنتجات', 'error');
                return false;
            }
        } catch (error) {
            console.error('Error checking availability:', error);
            return true;
        } finally {
            setCheckoutLoading(false);
        }
    }

    function setCheckoutLoading(isLoading) {
        const checkoutBtn = document.querySelector('.checkout-btn');
        if (checkoutBtn) {
            if (isLoading) {
                checkoutBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> جاري التحميل...';
                checkoutBtn.disabled = true;
            } else {
                checkoutBtn.innerHTML = 'إتمام الشراء';
                checkoutBtn.disabled = false;
            }
        }
    }
</script>