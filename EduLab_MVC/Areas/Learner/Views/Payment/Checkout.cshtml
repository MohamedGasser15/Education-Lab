@model EduLab_MVC.Models.DTOs.Cart.CartDto
@{
    var cart = Model ?? new EduLab_MVC.Models.DTOs.Cart.CartDto();
    ViewData["Title"] = "Checkout - تأكيد الطلب";
}


    <title>@ViewData["Title"]</title>
    <script src="https://cdn.tailwindcss.com"></script>

<body class="bg-gray-50 font-sans">
    <div class="container mx-auto px-4 py-8 max-w-6xl">
        <h1 class="text-3xl font-bold text-center text-primary-700 mb-2">تأكيد الطلب والدفع</h1>
        <p class="text-center text-gray-600 mb-8">أكمل عملية الدفع لتفعيل الدورات الخاصة بك</p>

        <div class="flex flex-col lg:flex-row gap-8">
            <!-- المحتوى الرئيسي -->
            <div class="w-full lg:w-2/3">
                @if (cart.Items != null && cart.Items.Any())
                {
                    <div class="bg-white rounded-xl shadow-md overflow-hidden mb-6">
                        <div class="bg-primary-600 p-4">
                            <h2 class="text-xl font-semibold text-white">
                                <i class="fas fa-credit-card ml-2"></i>
                                معلومات الدفع
                            </h2>
                        </div>
                        <div class="p-6">
                            <form id="payment-form">
                                <div id="card-element" class="border border-gray-300 rounded-lg p-3 mb-4 focus:ring-2 focus:ring-primary-500 focus:border-transparent"></div>
                                <div id="card-errors" class="text-red-500 text-sm mb-4"></div>

                                <button type="submit" id="submit-button" class="w-full bg-primary-600 hover:bg-primary-700 text-white font-bold py-3 px-4 rounded-lg transition duration-200 flex items-center justify-center">
                                    <i class="fas fa-lock ml-2"></i>
                                    دفع @cart.TotalPrice.ToString("N0") ج.م
                                </button>
                            </form>
                        </div>
                    </div>
                }
                else
                {
                    <div class="bg-yellow-50 border border-yellow-200 rounded-xl p-6 text-center">
                        <i class="fas fa-shopping-cart text-yellow-500 text-5xl mb-4"></i>
                        <h3 class="text-xl font-semibold text-yellow-700 mb-2">عربة التسوق فارغة</h3>
                        <p class="text-yellow-600 mb-4">لم تقم بإضافة أي دورات إلى عربة التسوق بعد.</p>
                        <a href="@Url.Action("Index", "Course", new { area = "Learner" })" class="inline-block bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 px-6 rounded-lg transition duration-200">
                            ابدأ بالتسوق الآن
                        </a>
                    </div>
                }
            </div>

            <!-- الشريط الجانبي -->
            <div class="w-full lg:w-1/3">
                @if (cart.Items != null && cart.Items.Any())
                {
                    <div class="bg-white rounded-xl shadow-md overflow-hidden sticky top-4">
                        <div class="bg-secondary-600 p-4">
                            <h2 class="text-xl font-semibold text-white">
                                <i class="fas fa-receipt ml-2"></i>
                                ملخص الطلب
                            </h2>
                        </div>
                        <div class="p-5">
                            <div class="max-h-80 overflow-y-auto pr-2">
                                @foreach (var item in cart.Items)
                                {
                                    <div class="flex justify-between items-center py-3 border-b border-gray-100">
                                        <div class="flex-1">
                                            <h4 class="font-medium text-gray-800">@item.CourseTitle</h4>
                                        </div>
                                        <span class="text-primary-600 font-semibold">@item.TotalPrice.ToString("N0") ج.م</span>
                                    </div>
                                }
                            </div>

                            <div class="flex justify-between items-center pt-4 mt-4 border-t border-gray-200">
                                <span class="text-lg font-bold text-gray-800">المجموع الكلي:</span>
                                <span class="text-xl font-bold text-primary-700">@cart.TotalPrice.ToString("N0") ج.م</span>
                            </div>

                            <div class="mt-6 bg-blue-50 rounded-lg p-4 border border-blue-100">
                                <div class="flex items-start">
                                    <i class="fas fa-shield-alt text-blue-500 text-xl mt-1 ml-2"></i>
                                    <div>
                                        <p class="text-blue-800 font-medium">دفع آمن</p>
                                        <p class="text-blue-600 text-sm">جميع عمليات الدفع مشفرة وآمنة</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <script src="https://js.stripe.com/v3/"></script>
    <script>
        // تأكد من أن StripePublishableKey موجود
        const stripePublishableKey = '@(ViewBag.StripePublishableKey ?? "")';

        if (!stripePublishableKey) {
            console.error('Stripe publishable key is missing');
            alert('حدث خطأ في إعدادات الدفع. يرجى المحاولة لاحقاً.');
        } else {
            const stripe = Stripe(stripePublishableKey);
            const elements = stripe.elements();

            const cardElement = elements.create('card', {
                style: {
                    base: {
                        fontSize: '16px',
                        color: '#424770',
                        '::placeholder': {
                            color: '#aab7c4',
                        },
                        padding: '10px'
                    },
                },
                classes: {
                    base: 'p-3'
                }
            });

            cardElement.mount('#card-element');

            const form = document.getElementById('payment-form');
            const submitButton = document.getElementById('submit-button');

            if (form) {
    form.addEventListener('submit', async (event) => {
        event.preventDefault();

        if (submitButton) {
            submitButton.disabled = true;
            submitButton.innerHTML = '<i class="fas fa-spinner fa-spin ml-2"></i> جاري المعالجة...';
            submitButton.classList.add('opacity-75');
        }

        try {
            // Get payment data
            const response = await fetch('@Url.Action("GetPaymentData", "Payment")');
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            
            const result = await response.json();

                        if (!result.success) {
                            alert(result.message);
                            if (submitButton) {
                                submitButton.disabled = false;
                                submitButton.innerHTML = '<i class="fas fa-lock ml-2"></i> دفع @cart.TotalPrice.ToString("N0") ج.م';
                                submitButton.classList.remove('opacity-75');
                            }
                            return;
                        }

                        const { data } = result;

                        // Create payment intent
        const paymentData = {
            Amount: data.totalAmount,
            Currency: data.currency,
            Description: data.description,
            CourseIds: data.courseIds,
            // إزالة CustomerEmail
            PaymentMethodId: "pm_card_visa" // قيمة افتراضية
        };

        const paymentResponse = await fetch('@Url.Action("CreatePaymentIntent", "Payment")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(paymentData)
        });

                        const paymentResult = await paymentResponse.json();

                        if (!paymentResult.success) {
                            alert(paymentResult.message);
                            if (submitButton) {
                                submitButton.disabled = false;
                                submitButton.innerHTML = '<i class="fas fa-lock ml-2"></i> دفع @cart.TotalPrice.ToString("N0") ج.م';
                                submitButton.classList.remove('opacity-75');
                            }
                            return;
                        }

                        // Confirm payment
                        const { error } = await stripe.confirmCardPayment(paymentResult.clientSecret, {
                            payment_method: {
                                card: cardElement,
                            }
                        });

                        if (error) {
                            const errorElement = document.getElementById('card-errors');
                            if (errorElement) {
                                errorElement.textContent = error.message;
                            }
                            if (submitButton) {
                                submitButton.disabled = false;
                                submitButton.innerHTML = '<i class="fas fa-lock ml-2"></i> دفع @cart.TotalPrice.ToString("N0") ج.م';
                                submitButton.classList.remove('opacity-75');
                            }
                        } else {
                            // Payment succeeded
                            await fetch('@Url.Action("ConfirmPayment", "Payment")', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(paymentResult.paymentIntentId)
                            });

                            window.location.href = '@Url.Action("Success", "Payment")';
                        }
        } catch (error) {
                   console.error('Payment error:', error);

                   // عرض رسالة خطأ مناسبة
                   let errorMessage = 'حدث خطأ أثناء عملية الدفع. يرجى المحاولة مرة أخرى.';

                   if (error.message.includes('NotFound')) {
                       errorMessage = 'خدمة الدفع غير متاحة حالياً. يرجى المحاولة لاحقاً.';
                   }

                   alert(errorMessage);

                   if (submitButton) {
                       submitButton.disabled = false;
                       submitButton.innerHTML = '<i class="fas fa-lock ml-2"></i> دفع @cart.TotalPrice.ToString("N0") ج.م';
                       submitButton.classList.remove('opacity-75');
                   }
               }
           });
            }
        }
    </script>
</body>
