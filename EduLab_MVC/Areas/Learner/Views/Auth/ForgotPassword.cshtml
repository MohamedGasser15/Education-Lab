@model EduLab_MVC.Models.DTOs.Auth.ForgotPasswordDTO
@{
    ViewData["Title"] = "نسيت كلمة المرور";
}
<link rel="stylesheet" href="~/css/Auth.css">
<style>
    /* تحسينات الخلفية والتأثيرات */
    .password-container {
        position: relative;
        overflow: hidden;
    }
    
    .background-animation {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: -1;
        opacity: 0.7;
    }
    
    .floating-shapes {
        position: absolute;
        width: 100%;
        height: 100%;
    }
    
    .shape {
        position: absolute;
        border-radius: 50%;
        background: rgba(59, 130, 246, 0.1);
        animation: float 15s infinite ease-in-out;
    }
    
    .shape:nth-child(1) {
        width: 80px;
        height: 80px;
        top: 10%;
        left: 10%;
        animation-delay: 0s;
    }
    
    .shape:nth-child(2) {
        width: 120px;
        height: 120px;
        top: 60%;
        left: 80%;
        animation-delay: 2s;
    }
    
    .shape:nth-child(3) {
        width: 60px;
        height: 60px;
        top: 80%;
        left: 20%;
        animation-delay: 4s;
    }
    
    .shape:nth-child(4) {
        width: 100px;
        height: 100px;
        top: 30%;
        left: 70%;
        animation-delay: 6s;
    }
    
    .shape:nth-child(5) {
        width: 70px;
        height: 70px;
        top: 15%;
        left: 50%;
        animation-delay: 8s;
    }
    
    @@keyframes float {
        0%, 100% {
            transform: translateY(0) rotate(0deg);
        }
        33% {
            transform: translateY(-20px) rotate(120deg);
        }
        66% {
            transform: translateY(10px) rotate(240deg);
        }
    }
    
    /* تحسينات الشكل الرئيسي */
    .password-card {
        backdrop-filter: blur(10px);
        background: rgba(255, 255, 255, 0.95);
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
    }
    
    .dark .password-card {
        background: rgba(31, 41, 55, 0.95);
        border: 1px solid rgba(255, 255, 255, 0.05);
    }
    
    /* تحسينات الحقول */
    .input-container {
        position: relative;
        margin-bottom: 1.5rem;
    }
    
    .input-field {
        transition: all 0.3s ease;
        border-radius: 12px;
        padding: 12px 16px;
        font-size: 16px;
    }
    
    .input-field:focus {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(59, 130, 246, 0.2);
    }
    
    .input-label {
        position: absolute;
        top: 50%;
        right: 16px;
        transform: translateY(-50%);
        transition: all 0.3s ease;
        pointer-events: none;
        color: #6b7280;
        background: white;
        padding: 0 4px;
    }
    
    .dark .input-label {
        background: #374151;
    }
    
    .input-field:focus + .input-label,
    .input-field:not(:placeholder-shown) + .input-label {
        top: 0;
        font-size: 12px;
        color: #3b82f6;
    }
    
    /* تحسينات الأزرار */
    .action-btn {
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
        background: linear-gradient(135deg, #3b82f6, #1d4ed8);
    }
    
    .action-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }
    
    .action-btn:hover::before {
        left: 100%;
    }
    
    .action-btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 12px 30px rgba(59, 130, 246, 0.3);
    }
    
    /* تأثيرات النص */
    .welcome-text {
        position: relative;
        overflow: hidden;
    }
    
    .welcome-text::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 0;
        height: 2px;
        background: linear-gradient(90deg, #3b82f6, #10b981);
        transition: width 0.5s ease;
    }
    
    .welcome-text:hover::after {
        width: 100%;
    }
    
    /* تحسينات الأيقونات */
    .icon-wrapper {
        position: relative;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }
    
    .icon-wrapper::before {
        content: '';
        position: absolute;
        width: 60px;
        height: 60px;
        background: rgba(59, 130, 246, 0.1);
        border-radius: 50%;
        animation: pulse 2s infinite;
    }
    
    @@keyframes pulse {
        0% {
            transform: scale(0.8);
            opacity: 0.7;
        }
        50% {
            transform: scale(1.1);
            opacity: 0.3;
        }
        100% {
            transform: scale(0.8);
            opacity: 0.7;
        }
    }
    
    /* تأثيرات الظهور */
    .fade-in-up {
        animation: fadeInUp 0.8s ease-out;
    }
    
    .fade-in-down {
        animation: fadeInDown 0.8s ease-out;
    }
    
    .fade-in-left {
        animation: fadeInLeft 0.8s ease-out;
    }
    
    .fade-in-right {
        animation: fadeInRight 0.8s ease-out;
    }
    
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    @@keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translateY(-30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    @@keyframes fadeInLeft {
        from {
            opacity: 0;
            transform: translateX(-30px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }
    
    @@keyframes fadeInRight {
        from {
            opacity: 0;
            transform: translateX(30px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }
    
    /* تحسينات شريط التقدم */
    .progress-container {
        position: relative;
        overflow: hidden;
    }
    
    .progress-bar {
        position: relative;
        overflow: hidden;
    }
    
    .progress-bar::after {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
        animation: shimmer 2s infinite;
    }
    
    @@keyframes shimmer {
        0% {
            left: -100%;
        }
        100% {
            left: 100%;
        }
    }
    
    /* تحسينات حقول الكود */
    .code-input {
        transition: all 0.3s ease;
        border-radius: 8px;
    }
    
    .code-input:focus {
        transform: scale(1.05);
        box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
    }
    
    /* تحسينات خطوات الاستعادة */
    .step-item {
        transition: all 0.3s ease;
        position: relative;
    }
    
    .step-item::before {
        content: '';
        position: absolute;
        top: 50%;
        right: -20px;
        width: 20px;
        height: 2px;
        background: rgba(255, 255, 255, 0.3);
        transform: translateY(-50%);
    }
    
    .step-item:last-child::before {
        display: none;
    }
    
    .step-icon {
        transition: all 0.3s ease;
    }
    
    .step-item:hover .step-icon {
        transform: scale(1.1);
        background: rgba(255, 255, 255, 0.3) !important;
    }
    
    /* تأثيرات خاصة للوضع الداكن */
    .dark .shape {
        background: rgba(59, 130, 246, 0.05);
    }
    
    .dark .input-field:focus {
        box-shadow: 0 8px 20px rgba(59, 130, 246, 0.15);
    }
    
    .dark .code-input:focus {
        box-shadow: 0 4px 15px rgba(59, 130, 246, 0.2);
    }
    
    /* تأثيرات الاهتزاز للرسائل الخطأ */
    .animate-shake {
        animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
    }
    
    @@keyframes shake {
        0%, 100% {
            transform: translateX(0);
        }
        20%, 60% {
            transform: translateX(-5px);
        }
        40%, 80% {
            transform: translateX(5px);
        }
    }
    
    /* تأثيرات النجاح */
    .success-icon {
        animation: bounceIn 0.6s ease;
    }
    
    @@keyframes bounceIn {
        0% {
            transform: scale(0.8);
            opacity: 0;
        }
        50% {
            transform: scale(1.1);
            opacity: 1;
        }
        100% {
            transform: scale(1);
        }
    }
    
    /* تحسينات للهواتف المحمولة */
    @@media (max-width: 768px) {
        .password-card {
            margin: 1rem;
            padding: 1.5rem;
        }
        
        .shape {
            display: none;
        }
        
        .code-input {
            width: 40px;
            height: 40px;
            font-size: 16px;
        }
        
        .step-item::before {
            display: none;
        }
    }
</style>

<div class="min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900 p-4 password-container">
    <!-- الخلفية المتحركة -->
    <div class="background-animation">
        <div class="floating-shapes">
            <div class="shape"></div>
            <div class="shape"></div>
            <div class="shape"></div>
            <div class="shape"></div>
            <div class="shape"></div>
        </div>
    </div>
    
    <form id="antiForgeryForm">
        @Html.AntiForgeryToken()
    </form>
    <div class="w-full max-w-5xl bg-white dark:bg-gray-800 rounded-2xl shadow-xl overflow-hidden password-card" style="margin-bottom:75px;">
        <div class="flex flex-col md:flex-row">
            <div class="md:w-2/5 bg-gradient-to-br from-blue-500 to-blue-700 p-8 text-white relative overflow-hidden">
                <div class="absolute inset-0 bg-gradient-to-r from-blue-600/20 to-blue-800/20 animate-gradient"></div>
                <div class="relative z-10 h-full flex flex-col justify-center">
                    <div class="text-center mb-8 fade-in-down" id="welcome-section">
                        <div class="flex items-center justify-center space-x-2 mb-4">
                            <div class="icon-wrapper">
                                <i class="fas fa-graduation-cap text-4xl relative z-10"></i>
                            </div>
                            <span class="text-4xl font-bold welcome-text">EduLab</span>
                        </div>
                        <h2 class="text-2xl font-bold mb-4 fade-in-up">استعادة كلمة المرور</h2>
                        <p class="text-blue-100 fade-in-up">سنساعدك في استعادة حسابك بسهولة وأمان</p>
                    </div>

                    <div class="space-y-4 mt-8">
                        <div class="flex items-center space-x-3 step-item fade-in-left">
                            <div class="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center step-icon">
                                <i class="fas fa-envelope text-sm"></i>
                            </div>
                            <span>أدخل بريدك الإلكتروني</span>
                        </div>
                        <div class="flex items-center space-x-3 step-item fade-in-right">
                            <div class="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center step-icon">
                                <i class="fas fa-mobile-alt text-sm"></i>
                            </div>
                            <span>تحقق من خلال الكود</span>
                        </div>
                        <div class="flex items-center space-x-3 step-item fade-in-left">
                            <div class="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center step-icon">
                                <i class="fas fa-lock text-sm"></i>
                            </div>
                            <span>أنشئ كلمة مرور جديدة</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="md:w-3/5 p-8 md:p-12">
                <div class="mb-8 fade-in-down" id="progress-section">
                    <div class="flex justify-between items-center mb-2">
                        <span class="text-sm font-medium text-blue-600 dark:text-blue-400">الخطوة <span id="currentStep">1</span> من 4</span>
                        <span class="text-sm text-gray-500 dark:text-gray-400">استعادة كلمة المرور</span>
                    </div>
                    <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5 overflow-hidden progress-container">
                        <div id="progressBar" class="bg-blue-600 h-2.5 rounded-full transition-all duration-500 ease-out progress-bar" style="width: 25%"></div>
                    </div>
                </div>

                <!-- Step 1: Email Input -->
                <div id="emailStep" class="fade-in-up">
                    <div class="text-center mb-6">
                        <div class="w-16 h-16 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center mx-auto mb-4 icon-wrapper">
                            <i class="fas fa-envelope text-blue-600 dark:text-blue-400 text-2xl relative z-10"></i>
                        </div>
                        <h2 class="text-xl font-bold text-gray-800 dark:text-white mb-2">أدخل بريدك الإلكتروني</h2>
                        <p class="text-gray-600 dark:text-gray-300">سنرسل رمز التحقق إلى بريدك الإلكتروني</p>
                    </div>

                    <div class="input-container fade-in-left" id="email-input">
                        <input asp-for="Email" type="email" class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white transition duration-300 text-left input-field" placeholder=" " dir="ltr">
                        <label asp-for="Email" class="input-label">أدخل بريدك الإلكتروني</label>
                        <span asp-validation-for="Email" class="text-red-600 text-sm mt-1 text-right block"></span>
                    </div>

                    <button id="sendCodeBtn" class="w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg transition duration-300 shadow-md hover:shadow-lg flex justify-center items-center action-btn fade-in-right">
                        <span id="btnText">إرسال كود التحقق</span>
                        <span id="spinner" class="hidden ml-2">
                            <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                        </span>
                    </button>
                </div>

                <!-- Step 2: Code Verification -->
                <div id="codeStep" class="hidden">
                    <div class="text-center mb-6 fade-in-down" id="code-header">
                        <div class="w-16 h-16 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center mx-auto mb-4 icon-wrapper">
                            <i class="fas fa-mobile-alt text-blue-600 dark:text-blue-400 text-2xl relative z-10"></i>
                        </div>
                        <h2 class="text-xl font-bold text-gray-800 dark:text-white mb-2">أدخل كود التحقق</h2>
                        <p class="text-gray-600 dark:text-gray-300">تم إرسال رمز مكون من 6 أرقام إلى <span id="userEmailDisplay" class="font-medium text-blue-600 dark:text-blue-400"></span></p>
                    </div>

                    <div class="mb-6 fade-in-up" id="code-inputs">
                        <label class="block text-gray-700 dark:text-gray-300 mb-2 text-right">كود التحقق</label>
                        <div class="flex space-x-2 justify-center" dir="ltr">
                            <input type="text" maxlength="1" class="w-12 h-12 text-center text-xl border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white code-input" oninput="moveToNext(this, 1)" onkeypress="return isNumberKey(event)">
                            <input type="text" maxlength="1" class="w-12 h-12 text-center text-xl border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white code-input" oninput="moveToNext(this, 2)" onkeypress="return isNumberKey(event)">
                            <input type="text" maxlength="1" class="w-12 h-12 text-center text-xl border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white code-input" oninput="moveToNext(this, 3)" onkeypress="return isNumberKey(event)">
                            <input type="text" maxlength="1" class="w-12 h-12 text-center text-xl border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white code-input" oninput="moveToNext(this, 4)" onkeypress="return isNumberKey(event)">
                            <input type="text" maxlength="1" class="w-12 h-12 text-center text-xl border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white code-input" oninput="moveToNext(this, 5)" onkeypress="return isNumberKey(event)">
                            <input type="text" maxlength="1" class="w-12 h-12 text-center text-xl border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white code-input" onkeypress="return isNumberKey(event)">
                        </div>
                        <div id="codeError" class="text-red-600 text-sm mt-1 hidden text-right"></div>
                    </div>

                    <div class="flex justify-between items-center mb-6 fade-in-up" id="code-actions">
                        <button id="resendCodeBtn" class="text-blue-600 dark:text-blue-400 hover:underline text-sm transition duration-300">
                            لم تصلك الرسالة؟ <span id="resendText">إعادة إرسال</span>
                        </button>
                        <span id="countdown" class="text-gray-500 dark:text-gray-400 text-sm hidden"><span id="countdownMinutes">01</span>:<span id="countdownSeconds">30</span></span>
                    </div>

                    <button id="verifyCodeBtn" class="w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg transition duration-300 shadow-md hover:shadow-lg action-btn fade-in-up">
                        تأكيد الكود
                    </button>
                </div>

                <!-- Step 3: New Password -->
                <div id="passwordStep" class="hidden">
                    <div class="text-center mb-6 fade-in-down" id="password-header">
                        <div class="w-16 h-16 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center mx-auto mb-4 icon-wrapper">
                            <i class="fas fa-lock text-blue-600 dark:text-blue-400 text-2xl relative z-10"></i>
                        </div>
                        <h2 class="text-xl font-bold text-gray-800 dark:text-white mb-2">أنشئ كلمة مرور جديدة</h2>
                        <p class="text-gray-600 dark:text-gray-300">اختر كلمة مرور قوية لحسابك</p>
                    </div>

                    <form id="resetPasswordForm">
                        <input type="hidden" id="finalEmail" name="Email">
                        <input type="hidden" id="finalCode" name="Code">

                        <div class="input-container fade-in-left" id="new-password-field">
                            <div class="relative">
                                <input type="password" id="newPassword" name="NewPassword" class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white pr-10 transition duration-300 text-right input-field" placeholder=" ">
                                <label for="newPassword" class="input-label">كلمة المرور الجديدة</label>
                                <button type="button" class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition toggle-password">
                                    <i class="fas fa-eye-slash"></i>
                                </button>
                            </div>
                            <div id="passwordError" class="text-red-600 text-sm mt-1 hidden text-right"></div>
                        </div>

                        <div class="input-container fade-in-right" id="confirm-password-field">
                            <div class="relative">
                                <input type="password" id="confirmPassword" name="ConfirmPassword" class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white pr-10 transition duration-300 text-right input-field" placeholder=" ">
                                <label for="confirmPassword" class="input-label">تأكيد كلمة المرور</label>
                                <button type="button" class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition toggle-password">
                                    <i class="fas fa-eye-slash"></i>
                                </button>
                            </div>
                            <div id="confirmPasswordError" class="text-red-600 text-sm mt-1 hidden text-right"></div>
                        </div>

                        <button type="submit" id="resetPasswordBtn" class="w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg transition duration-300 shadow-md hover:shadow-lg action-btn fade-in-up">
                            تغيير كلمة المرور
                        </button>
                    </form>
                </div>

                <!-- Success Step -->
                <div id="successStep" class="hidden">
                    <div class="text-center mb-6 fade-in-down">
                        <div class="w-16 h-16 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mx-auto mb-4 icon-wrapper success-icon">
                            <i class="fas fa-check text-green-600 dark:text-green-400 text-2xl relative z-10"></i>
                        </div>
                        <h2 class="text-xl font-bold text-gray-800 dark:text-white mb-2">تم تغيير كلمة المرور بنجاح</h2>
                        <p class="text-gray-600 dark:text-gray-300">يمكنك الآن تسجيل الدخول باستخدام كلمة المرور الجديدة</p>
                    </div>

                    <div class="text-center fade-in-up">
                        <a asp-controller="Auth" asp-action="Login" class="w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg transition duration-300 shadow-md hover:shadow-lg action-btn inline-block">
                            الانتقال إلى تسجيل الدخول
                        </a>
                    </div>
                </div>

                <div class="mt-8 text-center text-gray-600 dark:text-gray-400 fade-in-up" id="login-link">
                    <p>تذكرت كلمة المرور؟ <a asp-controller="Auth" asp-action="Login" class="text-blue-600 dark:text-blue-400 hover:underline transition duration-300">سجل الدخول</a></p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Helper functions
        function isNumberKey(evt) {
            const charCode = (evt.which) ? evt.which : evt.keyCode;
            return !(charCode > 31 && (charCode < 48 || charCode > 57));
        }

        function moveToNext(current, nextIndex) {
            if (current.value.length >= current.maxLength) {
                const next = current.parentElement.querySelector(`input:nth-child(${nextIndex + 1})`);
                if (next) {
                    next.focus();
                }
            }
        }

        function isValidPassword(password) {
            return password.length >= 6;
        }

        function getAntiForgeryToken() {
            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            return token ? token.value : '';
        }

        function showError(message) {
            alert(message);
        }

        function showSuccess(message) {
            alert(message);
        }

        document.addEventListener('DOMContentLoaded', function() {
            // DOM Elements
            const emailStep = document.getElementById('emailStep');
            const codeStep = document.getElementById('codeStep');
            const passwordStep = document.getElementById('passwordStep');
            const successStep = document.getElementById('successStep');

            const resetEmail = document.getElementById('Email');
            const sendCodeBtn = document.getElementById('sendCodeBtn');
            const btnText = document.getElementById('btnText');
            const spinner = document.getElementById('spinner');
            const userEmailDisplay = document.getElementById('userEmailDisplay');
            const verifyCodeBtn = document.getElementById('verifyCodeBtn');
            const resendCodeBtn = document.getElementById('resendCodeBtn');
            const resendText = document.getElementById('resendText');
            const countdown = document.getElementById('countdown');
            const countdownMinutes = document.getElementById('countdownMinutes');
            const countdownSeconds = document.getElementById('countdownSeconds');
            const codeError = document.getElementById('codeError');
            const resetPasswordForm = document.getElementById('resetPasswordForm');
            const resetPasswordBtn = document.getElementById('resetPasswordBtn');
            const newPassword = document.getElementById('newPassword');
            const confirmPassword = document.getElementById('confirmPassword');
            const passwordError = document.getElementById('passwordError');
            const confirmPasswordError = document.getElementById('confirmPasswordError');
            const currentStep = document.getElementById('currentStep');
            const progressBar = document.getElementById('progressBar');
            const finalEmail = document.getElementById('finalEmail');
            const finalCode = document.getElementById('finalCode');

            let verifiedEmail = '';
            let countdownInterval;

            // Update progress bar
            function updateProgress(step) {
                currentStep.textContent = step;
                const progressPercent = (step / 4) * 100;
                progressBar.style.width = `${progressPercent}%`;
            }

            // إضافة تأثيرات للحقول عند التركيز
            document.querySelectorAll('.input-field').forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.classList.add('focused');
                });
                
                input.addEventListener('blur', function() {
                    if (this.value === '') {
                        this.parentElement.classList.remove('focused');
                    }
                });
                
                // تهيئة الحقول التي تحتوي على قيم
                if (input.value !== '') {
                    input.parentElement.classList.add('focused');
                }
            });

            // Toggle password visibility
            document.querySelectorAll('.toggle-password').forEach(button => {
                button.addEventListener('click', function() {
                    const input = this.parentElement.querySelector('input');
                    const icon = this.querySelector('i');

                    if (input.type === 'password') {
                        input.type = 'text';
                        icon.classList.remove('fa-eye-slash');
                        icon.classList.add('fa-eye');
                    } else {
                        input.type = 'password';
                        icon.classList.remove('fa-eye');
                        icon.classList.add('fa-eye-slash');
                    }
                });
            });

            // Step 1: Send Code
            sendCodeBtn.addEventListener('click', async function() {
                const email = resetEmail.value.trim();

                // تحقق من صحة الإيميل أولاً
                if (!email) {
                    showError('الرجاء إدخال البريد الإلكتروني');
                    return;
                }

                if (!/\S+@@\S+\.\S+/.test(email)) {
                    showError('الرجاء إدخال بريد إلكتروني صحيح');
                    return;
                }

                btnText.textContent = 'جاري الإرسال...';
                spinner.classList.remove('hidden');
                sendCodeBtn.disabled = true;

                try {
                    const dto = {
                        Email: email
                    };

                    console.log('Sending request with data:', dto);

                    const response = await fetch('/Learner/Auth/SendResetCode', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': getAntiForgeryToken()
                        },
                        body: JSON.stringify(dto)
                    });

                    const data = await response.json();
                    console.log('Response received:', data);

                    if (data.isSuccess) {
                        verifiedEmail = email;
                        emailStep.classList.add('hidden');
                        codeStep.classList.remove('hidden');
                        userEmailDisplay.textContent = email;
                        updateProgress(2);
                        startCountdown(90);
                    } else {
                        const errorMsg = data.errorMessages && data.errorMessages.length > 0 
                            ? data.errorMessages[0] 
                            : 'حدث خطأ أثناء إرسال كود التحقق';
                        showError(errorMsg);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showError('حدث خطأ أثناء الاتصال بالخادم');
                } finally {
                    btnText.textContent = 'إرسال كود التحقق';
                    spinner.classList.add('hidden');
                    sendCodeBtn.disabled = false;
                }
            });

            // Step 2: Verify Code
            verifyCodeBtn.addEventListener('click', async function() {
                const inputs = document.querySelectorAll('#codeStep input[type="text"]');
                let code = '';
                inputs.forEach(input => {
                    code += input.value;
                });

                if (code.length < 6) {
                    codeError.textContent = 'الرجاء إدخال الكود المكون من 6 أرقام';
                    codeError.classList.remove('hidden');
                    inputs.forEach(input => {
                        input.classList.add('animate-shake');
                        setTimeout(() => {
                            input.classList.remove('animate-shake');
                        }, 500);
                    });
                    return;
                }

                verifyCodeBtn.disabled = true;
                verifyCodeBtn.innerHTML = '<span class="flex items-center justify-center"><svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> جاري التحقق...</span>';

                try {
                    const dto = {
                        Email: verifiedEmail,
                        Code: code
                    };

                    console.log('Verifying code with data:', dto);

                    const response = await fetch('/Learner/Auth/VerifyResetCode', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': getAntiForgeryToken()
                        },
                        body: JSON.stringify(dto)
                    });

                    const data = await response.json();
                    console.log('Verification response:', data);

                    if (data.isSuccess) {
                        codeError.classList.add('hidden');
                        codeStep.classList.add('hidden');
                        passwordStep.classList.remove('hidden');
                        updateProgress(3);

                        // Set the hidden fields for the final form
                        finalEmail.value = verifiedEmail;
                        finalCode.value = code;
                    } else {
                        const errorMsg = data.errorMessages && data.errorMessages.length > 0 
                            ? data.errorMessages[0] 
                            : 'الكود غير صحيح';
                        codeError.textContent = errorMsg;
                        codeError.classList.remove('hidden');
                        inputs.forEach(input => {
                            input.classList.add('animate-shake');
                            setTimeout(() => {
                                input.classList.remove('animate-shake');
                            }, 500);
                        });
                    }
                } catch (error) {
                    console.error('Error:', error);
                    codeError.textContent = 'حدث خطأ أثناء التحقق';
                    codeError.classList.remove('hidden');
                } finally {
                    verifyCodeBtn.disabled = false;
                    verifyCodeBtn.textContent = 'تأكيد الكود';
                }
            });

            // Resend Code functionality
            resendCodeBtn.addEventListener('click', async function() {
                resendText.textContent = 'جاري الإرسال...';
                resendCodeBtn.disabled = true;

                try {
                    const dto = {
                        Email: verifiedEmail
                    };

                    console.log('Resending code with data:', dto);

                    const response = await fetch('/Learner/Auth/SendResetCode', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': getAntiForgeryToken()
                        },
                        body: JSON.stringify(dto)
                    });

                    const data = await response.json();
                    console.log('Resend response:', data);

                    if (data.isSuccess) {
                        startCountdown(90);
                    } else {
                        const errorMsg = data.errorMessages && data.errorMessages.length > 0 
                            ? data.errorMessages[0] 
                            : 'حدث خطأ أثناء إعادة الإرسال';
                        showError(errorMsg);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showError('حدث خطأ أثناء الاتصال بالخادم');
                } finally {
                    resendText.textContent = 'إعادة إرسال';
                    resendCodeBtn.disabled = false;
                }
            });

            // Step 3: Reset Password - FIXED
            resetPasswordBtn.addEventListener('click', async function(e) {
                e.preventDefault(); // منع الإرسال التقليدي للـ form

                const password = newPassword.value;
                const confirm = confirmPassword.value;

                // Reset errors
                passwordError.classList.add('hidden');
                confirmPasswordError.classList.add('hidden');
                newPassword.classList.remove('border-red-500');
                confirmPassword.classList.remove('border-red-500');

                let hasError = false;

                if (!isValidPassword(password)) {
                    passwordError.textContent = 'كلمة المرور يجب أن تكون 6 أحرف على الأقل';
                    passwordError.classList.remove('hidden');
                    newPassword.classList.add('border-red-500', 'animate-shake');
                    hasError = true;
                }

                if (password !== confirm) {
                    confirmPasswordError.textContent = 'كلمتا المرور غير متطابقتين';
                    confirmPasswordError.classList.remove('hidden');
                    confirmPassword.classList.add('border-red-500', 'animate-shake');
                    hasError = true;
                }

                if (hasError) {
                    setTimeout(() => {
                        newPassword.classList.remove('animate-shake');
                        confirmPassword.classList.remove('animate-shake');
                    }, 500);
                    return;
                }

                resetPasswordBtn.disabled = true;
                resetPasswordBtn.innerHTML = '<span class="flex items-center justify-center"><svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> جاري التغيير...</span>';

                try {
                    const dto = {
                        Email: finalEmail.value,
                        Code: finalCode.value,
                        NewPassword: password,
                        ConfirmPassword: confirm
                    };

                    console.log('Sending reset password request:', dto);

                    const response = await fetch('/Learner/Auth/ResetPassword', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': getAntiForgeryToken()
                        },
                        body: JSON.stringify(dto)
                    });

                    const data = await response.json();
                    console.log('Reset password response:', data);

                    if (data.isSuccess) {
                        passwordStep.classList.add('hidden');
                        successStep.classList.remove('hidden');
                        updateProgress(4);
                    } else {
                        const errorMsg = data.errorMessages && data.errorMessages.length > 0 
                            ? data.errorMessages[0] 
                            : 'حدث خطأ أثناء تغيير كلمة المرور';
                        showError(errorMsg);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showError('حدث خطأ أثناء الاتصال بالخادم');
                } finally {
                    resetPasswordBtn.disabled = false;
                    resetPasswordBtn.textContent = 'تغيير كلمة المرور';
                }
            });

            // Countdown function
            function startCountdown(seconds) {
                if (countdownInterval) {
                    clearInterval(countdownInterval);
                }

                let remaining = seconds;
                countdown.classList.remove('hidden');
                resendCodeBtn.disabled = true;

                countdownInterval = setInterval(() => {
                    const minutes = Math.floor(remaining / 60);
                    const secs = remaining % 60;

                    countdownMinutes.textContent = minutes.toString().padStart(2, '0');
                    countdownSeconds.textContent = secs.toString().padStart(2, '0');

                    if (remaining <= 0) {
                        clearInterval(countdownInterval);
                        countdown.classList.add('hidden');
                        resendCodeBtn.disabled = false;
                    }

                    remaining--;
                }, 1000);
            }
        });
    </script>
}