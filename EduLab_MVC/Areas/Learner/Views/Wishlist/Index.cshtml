@using EduLab_MVC.Models.DTOs.Wishlist
@model IEnumerable<WishlistItemDto>

@functions {
    public string GetArabicMonthName(string englishMonth)
    {
        var months = new Dictionary<string, string>
        {
            {"January", "يناير"}, {"February", "فبراير"}, {"March", "مارس"},
            {"April", "أبريل"}, {"May", "مايو"}, {"June", "يونيو"},
            {"July", "يوليو"}, {"August", "أغسطس"}, {"September", "سبتمبر"},
            {"October", "أكتوبر"}, {"November", "نوفمبر"}, {"December", "ديسمبر"}
        };
        return months.TryGetValue(englishMonth, out var arabicMonth) ? arabicMonth : englishMonth;
    }

    public string FormatPrice(decimal price)
    {
        return price.ToString("C0", new System.Globalization.CultureInfo("ar-SA"));
    }

    public string GetPriceClass(decimal? discount)
    {
        return discount > 0 ? "text-red-600 line-through text-sm" : "text-green-600 font-bold";
    }
    public string FormatRating(double rating)
    {
        return rating.ToString("0.0");
    }

    // دالة جديدة لعرض النجوم
    public string GetStarRating(double rating)
    {
        var fullStars = (int)Math.Floor(rating);
        var halfStar = rating - fullStars >= 0.5;
        var emptyStars = 5 - fullStars - (halfStar ? 1 : 0);

        var stars = "";

        // نجوم مملوءة
        for (int i = 0; i < fullStars; i++)
        {
            stars += "<i class='fas fa-star text-yellow-400'></i>";
        }

        // نصف نجمة
        if (halfStar)
        {
            stars += "<i class='fas fa-star-half-alt text-yellow-400'></i>";
        }

        // نجوم فارغة
        for (int i = 0; i < emptyStars; i++)
        {
            stars += "<i class='far fa-star text-yellow-400'></i>";
        }

        return stars;
    }
}

<style>
    /* نفس الـ Styles اللي في My Courses مع تعديلات بسيطة */
    .wishlist-container {
        position: relative;
        min-height: 900px;
    }
    /* تحسينات شريط التصفية والترتيب */
    .filter-bar {
        background: rgba(249, 250, 251, 0.8);
        backdrop-filter: blur(10px);
        border-radius: 12px;
        padding: 1rem;
        margin-bottom: 1.5rem;
        border: 1px solid #e5e7eb;
        transition: all 0.3s ease;
    }
    /* تحسينات إضافية للقوائم المنسدلة */
    .filter-btn {
        position: relative;
        min-width: 120px;
        justify-content: space-between;
    }

    .star-rating {
        direction: ltr; /* النجوم دائماً من اليسار لليمين */
    }

    .rating-bar {
        transition: width 0.3s ease;
    }

    /* تحسين مظهر التقييم في البطاقة الرئيسية */
    .course-card-rating {
        direction: ltr;
        display: inline-flex;
        align-items: center;
    }
        .filter-btn i {
            margin-left: 0.5rem;
        }

    .filter-dropdown {
        z-index: 1000; /* زيادة كبيرة في z-index */
        pointer-events: auto;
    }

    .filter-group {
        z-index: 1001; /* أعلى من القائمة المنسدلة */
    }

    /* تحسينات للعرض على الأجهزة المحمولة */
    @@media (max-width: 768px) {
        .filter-btn {
            min-width: 100%;
            text-align: right;
            justify-content: flex-start;
        }

            .filter-btn i {
                margin-left: auto;
                margin-right: 0.5rem;
            }
    }

    /* تحسينات للوضع الداكن */
    .dark .filter-dropdown {
        z-index: 1000; /* التأكد من أن القوائم تظهر فوق المحتوى في الوضع الداكن */
    }

    .filter-bar {
        position: relative;
        z-index: 35; /* زيادة z-index لشريط التصفية */
    }

    .filter-dropdown {
        z-index: 100; /* زيادة كبيرة في z-index للقوائم المنسدلة */
    }

    .search-box {
        position: relative;
        flex: 1;
        max-width: 300px;
    }

    .search-input {
        width: 100%;
        padding: 0.5rem 2.5rem 0.5rem 1rem;
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        font-size: 0.875rem;
        background: white;
        transition: all 0.2s ease;
    }

    .dark .search-input {
        background: #1f2937;
        border-color: #374151;
        color: #d1d5db;
    }

    .search-input:focus {
        outline: none;
        border-color: #3b82f6;
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    }

    .search-icon {
        position: absolute;
        left: 0.75rem;
        top: 50%;
        transform: translateY(-50%);
        color: #9ca3af;
    }
    .filter-bar {
        background: rgba(249, 250, 251, 0.8);
        backdrop-filter: blur(10px);
        border-radius: 12px;
        padding: 1rem;
        margin-bottom: 1.5rem;
        border: 1px solid #e5e7eb;
        transition: all 0.3s ease;
    }

    .dark .filter-bar {
        background: rgba(31, 41, 55, 0.8);
        border-color: #374151;
    }

    .filter-options {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
        align-items: center;
    }

    .filter-group {
        position: relative;
    }

    .filter-btn {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        background: white;
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        font-size: 0.875rem;
        font-weight: 500;
        color: #374151;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .dark .filter-btn {
        background: #1f2937;
        border-color: #374151;
        color: #d1d5db;
    }

    .filter-btn:hover {
        border-color: #3b82f6;
        color: #3b82f6;
    }

    .filter-dropdown {
        position: absolute;
        top: 100%;
        left: 0;
        margin-top: 0.5rem;
        background: white;
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        padding: 0.75rem;
        min-width: 200px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        z-index: 50;
        opacity: 0;
        visibility: hidden;
        transform: translateY(-10px);
        transition: all 0.2s ease;
    }

    .dark .filter-dropdown {
        background: #1f2937;
        border-color: #374151;
    }

    .filter-group:hover .filter-dropdown {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
    }

    .filter-option {
        display: block;
        width: 100%;
        padding: 0.5rem;
        border-radius: 6px;
        font-size: 0.875rem;
        color: #374151;
        text-align: right;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .dark .filter-option {
        color: #d1d5db;
    }

    .filter-option:hover {
        background: #f3f4f6;
        color: #3b82f6;
    }

    .course-card-wrapper {
        position: relative;
        height: 100%;
        transition: transform 0.3s ease, z-index 0.3s ease;
        width: 280px;
    }

        .course-card-wrapper:hover {
            transform: translateY(-8px);
            z-index: 10;
        }

    .course-card {
        background: white;
        border-radius: 0.75rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        transition: all 0.3s ease;
        height: 100%;
        display: flex;
        flex-direction: column;
        position: relative;
    }

    .dark .course-card {
        background: #1f2937;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3);
    }

    .course-image {
        position: relative;
        height: 140px;
        overflow: hidden;
    }

        .course-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

    .course-card:hover .course-image img {
        transform: scale(1.05);
    }

    .wishlist-badge {
        position: absolute;
        top: 0.5rem;
        left: 0.5rem;
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        font-size: 0.7rem;
        font-weight: 600;
        box-shadow: 0 4px 6px rgba(239, 68, 68, 0.25);
    }

    .course-content {
        padding: 1rem;
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .course-title {
        font-size: 1rem;
        font-weight: 700;
        color: #1f2937;
        margin-bottom: 0.5rem;
        line-height: 1.4;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .dark .course-title {
        color: #f9fafb;
    }

    .course-description {
        color: #6b7280;
        font-size: 0.8rem;
        margin-bottom: 0.75rem;
        line-height: 1.4;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .course-instructor {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 0.75rem;
        color: #6b7280;
        font-size: 0.8rem;
    }

    .course-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.75rem;
        gap: 0.5rem;
    }

    .price-section {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: auto;
    }

    .final-price {
        font-size: 1.1rem;
        font-weight: 700;
        color: #10b981;
    }

    .original-price {
        font-size: 0.9rem;
        color: #6b7280;
        text-decoration: line-through;
    }

    .discount-badge {
        background-color: rgb(168 85 247 / var(--tw-bg-opacity, 1));
        color: white;
        padding: 0.2rem 0.5rem;
        border-radius: 0.25rem;
        font-size: 0.7rem;
        font-weight: 600;
    }

    .course-footer {
        padding: 0.75rem 1rem;
        border-top: 1px solid #e5e7eb;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .dark .course-footer {
        border-top: 1px solid #374151;
    }

    .view-button {
        background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 0.4rem;
        font-size: 0.8rem;
        font-weight: 600;
        transition: all 0.2s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.4rem;
        box-shadow: 0 4px 6px rgba(59, 130, 246, 0.25);
    }

        .view-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(59, 130, 246, 0.3);
            color: white;
        }

    .remove-button {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 0.4rem;
        font-size: 0.8rem;
        font-weight: 600;
        transition: all 0.2s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.4rem;
        box-shadow: 0 4px 6px rgba(239, 68, 68, 0.25);
        border: none;
        cursor: pointer;
    }

        .remove-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(239, 68, 68, 0.3);
        }

    .empty-state {
        text-align: center;
        padding: 4rem 1rem;
        color: #6b7280;
    }

    .dark .empty-state {
        color: #d1d5db;
    }

    .swiper-container.grid-mode {
        overflow: visible !important;
    }

        .swiper-container.grid-mode .swiper-wrapper {
            display: grid !important;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)) !important;
            gap: 1.25rem !important;
            transform: none !important;
            padding: 1rem 0 !important;
        }

        .swiper-container.grid-mode .swiper-slide {
            width: 100% !important;
            height: auto !important;
            margin: 0 !important;
        }

    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.6);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
    }

        .modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }

    .confirmation-modal {
        background: white;
        border-radius: 16px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);
        width: 90%;
        max-width: 450px;
        overflow: hidden;
        transform: scale(0.9);
        transition: transform 0.3s ease;
    }

    .modal-overlay.active .confirmation-modal {
        transform: scale(1);
    }

    .dark .confirmation-modal {
        background: #1f2937;
        color: #f9fafb;
    }

    .modal-header {
        padding: 1.5rem;
        border-bottom: 1px solid #e5e7eb;
        text-align: center;
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        color: white;
    }

    .dark .modal-header {
        border-bottom: 1px solid #374151;
    }

    .modal-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
        display: block;
    }

    .modal-title {
        font-size: 1.25rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .modal-body {
        padding: 1.5rem;
        text-align: center;
    }

    .modal-message {
        color: #6b7280;
        font-size: 1rem;
        line-height: 1.6;
        margin-bottom: 1.5rem;
    }

    .dark .modal-message {
        color: #d1d5db;
    }

    .course-info {
        background: #f9fafb;
        border-radius: 12px;
        padding: 1rem;
        margin-bottom: 1.5rem;
        text-align: right;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .dark .course-info {
        background: #374151;
    }

    .course-thumbnail {
        width: 60px;
        height: 60px;
        border-radius: 8px;
        object-fit: cover;
        flex-shrink: 0;
    }

    .course-details {
        flex: 1;
    }

    .course-name {
        font-weight: 600;
        color: #1f2937;
        margin-bottom: 0.25rem;
        font-size: 0.95rem;
    }

    .dark .course-name {
        color: #f9fafb;
    }

    .course-instructor-modal {
        font-size: 0.85rem;
        color: #6b7280;
    }

    .dark .course-instructor-modal {
        color: #d1d5db;
    }

    .modal-actions {
        display: flex;
        gap: 0.75rem;
        justify-content: center;
    }

    .modal-btn {
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 600;
        font-size: 0.9rem;
        cursor: pointer;
        transition: all 0.2s ease;
        border: none;
        min-width: 100px;
    }

    .btn-cancel {
        background: #f3f4f6;
        color: #374151;
        border: 1px solid #d1d5db;
    }

    .dark .btn-cancel {
        background: #374151;
        color: #d1d5db;
        border-color: #4b5563;
    }

    .btn-cancel:hover {
        background: #e5e7eb;
    }

    .dark .btn-cancel:hover {
        background: #4b5563;
    }

    .btn-confirm {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        color: white;
        box-shadow: 0 4px 6px rgba(239, 68, 68, 0.25);
    }

        .btn-confirm:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(239, 68, 68, 0.3);
        }
</style>

<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 mb-8 wishlist-container">
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-8 gap-4">
        <div>
            <h1 class="text-2xl font-bold text-gray-800 dark:text-white flex items-center gap-2">
                <i class="fas fa-heart text-red-600"></i>
                قائمة رغباتي
            </h1>
            <p class="text-gray-600 dark:text-gray-400 mt-1">الدورات التي ترغب في تعلمها لاحقًا</p>
        </div>
        <div class="flex items-center gap-4">
            <span data-wishlist-count
                  class="text-gray-700 dark:text-gray-300 bg-gradient-to-r from-red-50 to-pink-50 dark:from-red-900/20 dark:to-pink-900/20 px-4 py-2 rounded-xl text-base font-bold flex items-center gap-2 border border-red-100 dark:border-red-800">
                <i class="fas fa-bookmark text-red-600"></i>
                <span class="wishlist-count-text">@Model.Count() دورات</span>
            </span>
        </div>
    </div>

    <!-- شريط التصفية والترتيب -->
    <div class="filter-bar">
        <div class="filter-options">
            <div class="search-box">
                <input type="text" id="course-search" placeholder="ابحث في قائمة الرغبات..." class="search-input">
                <i class="fas fa-search search-icon"></i>
            </div>

            <div class="filter-group">
                <button class="filter-btn">
                    <i class="fas fa-filter"></i>
                    التصنيف
                </button>
                <div class="filter-dropdown">
                    <div class="filter-option active">جميع التصنيفات</div>
                    <div class="filter-option">التصميم</div>
                    <div class="filter-option">البرمجة</div>
                    <div class="filter-option">التسويق</div>
                </div>
            </div>

            <div class="filter-group">
                <button class="filter-btn">
                    <i class="fas fa-sort"></i>
                    الترتيب حسب
                </button>
                <div class="filter-dropdown">
                    <div class="filter-option active">الأحدث</div>
                    <div class="filter-option">السعر (من الأقل)</div>
                    <div class="filter-option">السعر (من الأعلى)</div>
                    <div class="filter-option">الأعلى تقييمًا</div>
                </div>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="empty-state">
            <i class="fas fa-heart text-gray-300 text-6xl mb-4"></i>
            <h3 class="text-xl font-bold text-gray-600 dark:text-gray-300 mb-2">قائمة الرغبات فارغة</h3>
            <p class="text-gray-500 dark:text-gray-400 mb-4">لم تقم بإضافة أي دورات إلى قائمة الرغبات بعد</p>
            <a href="@Url.Action("Index", "Course")" class="view-button">
                <i class="fas fa-compass mr-2"></i>
                استكشاف الدورات
            </a>
        </div>
    }
    else
    {
        <div class="relative">
            <div class="swiper-container grid-mode py-2">
                <div class="swiper-wrapper">
                    @foreach (var item in Model)
                    {
                        <div class="swiper-slide">
                            <div class="w-full h-full">
                                <div class="course-card-wrapper">
                                    <div class="course-card">
                                        <div class="course-image">
                                            <img src="@item.ThumbnailUrl" alt="@item.CourseTitle">
                                            <div class="absolute inset-0 bg-gradient-to-t from-black to-transparent opacity-60"></div>

                                            <span class="wishlist-badge">
                                                <i class="fas fa-heart mr-1"></i>
                                                في المفضلة
                                            </span>

                                            @{
                                                var averageRating = item.AverageRating;
                                                var totalRatings = item.TotalRatings;
                                                var hasRatings = totalRatings > 0;
                                            }
                                            <div class="absolute bottom-2 left-2 flex items-center bg-blue-600 text-white px-2 py-1 rounded-full text-xs font-medium">
                                                <i class="fas fa-star ml-[3px]"></i>
                                                <span>@(hasRatings? FormatRating(averageRating) : "0.0")</span>
                                            </div>
                                        </div>

                                        <div class="course-content">
                                            <h3 class="course-title">@item.CourseTitle</h3>
                                            <p class="course-description">@item.CourseShortDescription</p>

                                            <div class="course-instructor">
                                                <i class="fas fa-user-tie text-blue-600"></i>
                                                <span>@item.InstructorName</span>
                                            </div>

                                            <div class="flex items-center gap-1 mb-2">
                                                @if (hasRatings)
                                                {
                                                    @Html.Raw(GetStarRating(averageRating))
                                                    <span class="text-sm font-medium">@FormatRating(averageRating)</span>
                                                    <span class="text-gray-500 dark:text-gray-400 text-sm">(@totalRatings)</span>
                                                }
                                                else
                                                {
                                                    @Html.Raw(GetStarRating(0))
                                                    <span class="text-sm font-medium">0.0</span>
                                                    <span class="text-gray-500 dark:text-gray-400 text-sm">(0)</span>
                                                }
                                            </div>
                                            <div class="flex justify-between items-center">
                                                @{
                                                    var finalPrice = item.CoursePrice - (item.CoursePrice * (item.CourseDiscount ?? 0) / 100);
                                                }
                                                <div>
                                                    <span class="text-lg font-bold text-blue-600 dark:text-blue-400">@finalPrice.ToString("0") ج.م</span>
                                                    @if (item.CourseDiscount > 0)
                                                    {
                                                        <span class="text-sm text-gray-500 line-through block">@item.CoursePrice.ToString("0") ج.م</span>
                                                    }
                                                </div>
                                                @if (item.CourseDiscount > 0)
                                                {
                                                    <span class="discount-badge">@item.CourseDiscount% خصم</span>
                                                }
                                            </div>
                                        </div>

                                        <div class="course-footer">
                                            <a href="@Url.Action("Details", "Course", new { id = item.CourseId })"
                                               class="view-button">
                                                <i class="fas fa-eye"></i>
                                                عرض الدورة
                                            </a>
                                            <button class="remove-button" onclick="showRemoveConfirmation(@item.CourseId, '@item.CourseTitle', '@item.InstructorName', '@item.ThumbnailUrl', this)">
                                                <i class="fas fa-trash"></i>
                                                إزالة
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>

<!-- Modal للتأكيد على الإزالة -->
<div class="modal-overlay" id="removeConfirmationModal">
    <div class="confirmation-modal">
        <div class="modal-header">
            <i class="fas fa-exclamation-triangle modal-icon"></i>
            <div class="modal-title">إزالة من قائمة الرغبات</div>
        </div>
        <div class="modal-body">
            <p class="modal-message">هل أنت متأكد من أنك تريد إزالة هذه الدورة من قائمة الرغبات؟</p>

            <div class="course-info">
                <img id="modalCourseImage" src="" alt="" class="course-thumbnail">
                <div class="course-details">
                    <div id="modalCourseTitle" class="course-name"></div>
                    <div id="modalInstructorName" class="course-instructor-modal"></div>
                </div>
            </div>

            <div class="modal-actions">
                <button class="modal-btn btn-cancel" id="cancelRemove">
                    <i class="fas fa-times mr-1"></i>
                    إلغاء
                </button>
                <button class="modal-btn btn-confirm" id="confirmRemove">
                    <i class="fas fa-trash mr-1"></i>
                    نعم، إزالة
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // المتغيرات لتتبع حالة الإزالة
        let currentCourseId = null;
        let currentButton = null;

        // دالة لعرض نافذة التأكيد
        function showRemoveConfirmation(courseId, courseTitle, instructorName, thumbnailUrl, button) {
            currentCourseId = courseId;
            currentButton = button;

            // تعبئة البيانات في المودال
            document.getElementById('modalCourseTitle').textContent = courseTitle;
            document.getElementById('modalInstructorName').textContent = instructorName;
            document.getElementById('modalCourseImage').src = thumbnailUrl;

            // عرض المودال
            const modal = document.getElementById('removeConfirmationModal');
            modal.classList.add('active');

            // منع التمرير خلف المودال
            document.body.style.overflow = 'hidden';
        }

        // دالة لإخفاء نافذة التأكيد
        function hideRemoveConfirmation() {
            const modal = document.getElementById('removeConfirmationModal');
            modal.classList.remove('active');

            // إعادة التمرير
            document.body.style.overflow = 'auto';

            // إعادة تعيين المتغيرات
            currentCourseId = null;
            currentButton = null;
        }

        // دالة لإزالة الدورة من قائمة الرغبات
        async function removeFromWishlist(courseId, button) {
            try {
                // إظهار تحميل
                const originalText = button.innerHTML;
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> جاري الإزالة...';
                button.disabled = true;

                const response = await fetch('@Url.Action("RemoveFromWishlist", "Wishlist")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ courseId: courseId })
                });

                const result = await response.json();

                if (result.success) {
                    // إزالة البطاقة من الواجهة
                    const card = button.closest('.swiper-slide');
                    card.style.opacity = '0';
                    card.style.transform = 'scale(0.8)';

                    setTimeout(() => {
                        card.remove();

                        // تحديث العداد
                        updateWishlistCount(result.wishlistCount);

                        // إظهار رسالة نجاح
                        showSuccess('تمت الإزالة من قائمة الرغبات بنجاح');

                        // إذا لم تعد هناك دورات، عرض حالة فارغة
                        if (document.querySelectorAll('.swiper-slide').length === 0) {
                            showEmptyState();
                        }
                    }, 300);
                } else {
                    showToast('error', result.message);
                    button.innerHTML = originalText;
                    button.disabled = false;
                }
            } catch (error) {
                console.error('Error:', error);
                showToast('error', 'حدث خطأ أثناء إزالة الدورة');
                button.innerHTML = originalText;
                button.disabled = false;
            }
        }

        // دالة لتحديث عداد قائمة الرغبات
        function updateWishlistCount(count) {
            // تحديث العداد داخل صفحة الـ Wishlist
            const countElement = document.querySelector('.wishlist-container .bg-gray-100 span');
            if (countElement) {
                countElement.textContent = `عدد الدورات: ${count}`;
            }

            // تحديث العداد في الهيدر (الأيقونة فوق)
            const wishlistCount = document.querySelector('[data-wishlist-count]');
            if (wishlistCount) {
                wishlistCount.textContent = count || 0;
                wishlistCount.classList.add('wishlist-pulse');
                wishlistCount.addEventListener('animationend', () => {
                    wishlistCount.classList.remove('wishlist-pulse');
                }, { once: true });
            }
        }

        // دالة لعرض الحالة الفارغة
        function showEmptyState() {
            const container = document.querySelector('.swiper-container.grid-mode');
            if (container) {
                container.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-heart text-gray-300 text-6xl mb-4"></i>
                        <h3 class="text-xl font-bold text-gray-600 dark:text-gray-300 mb-2">قائمة الرغبات فارغة</h3>
                        <p class="text-gray-500 dark:text-gray-400 mb-4">لم تقم بإضافة أي دورات إلى قائمة الرغبات بعد</p>
                        <a href="@Url.Action("Index", "Course")" class="view-button">
                            <i class="fas fa-compass mr-2"></i>
                            استكشاف الدورات
                        </a>
                    </div>
                `;
            }
        }

        // دالة لعرض الرسائل
        function showToast(message, type = 'info') {
            switch (type) {
                case 'success':
                    window.showSuccess(message);
                    break;
                case 'error':
                    window.showError(message);
                    break;
                case 'warning':
                    window.showWarning(message);
                    break;
                default:
                    window.showInfo(message);
            }
        }

        // البحث في قائمة الرغبات
        document.getElementById('course-search')?.addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const cards = document.querySelectorAll('.swiper-slide');

            cards.forEach(card => {
                const title = card.querySelector('.course-title').textContent.toLowerCase();
                const description = card.querySelector('.course-description').textContent.toLowerCase();
                const instructor = card.querySelector('.course-instructor span').textContent.toLowerCase();

                if (title.includes(searchTerm) || description.includes(searchTerm) || instructor.includes(searchTerm)) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        });

        // تهيئة الفلترة
        document.querySelectorAll('.filter-option').forEach(option => {
            option.addEventListener('click', function() {
                const dropdown = this.closest('.filter-dropdown');
                dropdown.querySelectorAll('.filter-option').forEach(opt => opt.classList.remove('active'));
                this.classList.add('active');

                // هنا يمكنك إضافة منطق التصفية حسب الحاجة
                // يمكنك تصفية البطاقات بناءً على الخيار المحدد
            });
        });

        // إضافة event listeners لأزرار المودال
        document.getElementById('cancelRemove').addEventListener('click', hideRemoveConfirmation);

        document.getElementById('confirmRemove').addEventListener('click', function() {
            if (currentCourseId && currentButton) {
                removeFromWishlist(currentCourseId, currentButton);
                hideRemoveConfirmation();
            }
        });

        // إغلاق المودال عند النقر خارج المحتوى
        document.getElementById('removeConfirmationModal').addEventListener('click', function(e) {
            if (e.target === this) {
                hideRemoveConfirmation();
            }
        });

        // إغلاق المودال باستخدام زر Escape
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                hideRemoveConfirmation();
            }
        });
    </script>
}